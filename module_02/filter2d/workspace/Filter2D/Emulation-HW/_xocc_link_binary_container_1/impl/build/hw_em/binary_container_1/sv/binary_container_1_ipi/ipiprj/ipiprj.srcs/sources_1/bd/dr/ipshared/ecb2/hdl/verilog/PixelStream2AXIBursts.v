// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module PixelStream2AXIBursts (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        stream_V_dout,
        stream_V_empty_n,
        stream_V_read,
        width_dout,
        width_empty_n,
        width_read,
        height_dout,
        height_empty_n,
        height_read,
        stride_dout,
        stride_empty_n,
        stride_read,
        m_axi_aximm_V_AWVALID,
        m_axi_aximm_V_AWREADY,
        m_axi_aximm_V_AWADDR,
        m_axi_aximm_V_AWID,
        m_axi_aximm_V_AWLEN,
        m_axi_aximm_V_AWSIZE,
        m_axi_aximm_V_AWBURST,
        m_axi_aximm_V_AWLOCK,
        m_axi_aximm_V_AWCACHE,
        m_axi_aximm_V_AWPROT,
        m_axi_aximm_V_AWQOS,
        m_axi_aximm_V_AWREGION,
        m_axi_aximm_V_AWUSER,
        m_axi_aximm_V_WVALID,
        m_axi_aximm_V_WREADY,
        m_axi_aximm_V_WDATA,
        m_axi_aximm_V_WSTRB,
        m_axi_aximm_V_WLAST,
        m_axi_aximm_V_WID,
        m_axi_aximm_V_WUSER,
        m_axi_aximm_V_ARVALID,
        m_axi_aximm_V_ARREADY,
        m_axi_aximm_V_ARADDR,
        m_axi_aximm_V_ARID,
        m_axi_aximm_V_ARLEN,
        m_axi_aximm_V_ARSIZE,
        m_axi_aximm_V_ARBURST,
        m_axi_aximm_V_ARLOCK,
        m_axi_aximm_V_ARCACHE,
        m_axi_aximm_V_ARPROT,
        m_axi_aximm_V_ARQOS,
        m_axi_aximm_V_ARREGION,
        m_axi_aximm_V_ARUSER,
        m_axi_aximm_V_RVALID,
        m_axi_aximm_V_RREADY,
        m_axi_aximm_V_RDATA,
        m_axi_aximm_V_RLAST,
        m_axi_aximm_V_RID,
        m_axi_aximm_V_RUSER,
        m_axi_aximm_V_RRESP,
        m_axi_aximm_V_BVALID,
        m_axi_aximm_V_BREADY,
        m_axi_aximm_V_BRESP,
        m_axi_aximm_V_BID,
        m_axi_aximm_V_BUSER,
        aximm_V_offset_dout,
        aximm_V_offset_empty_n,
        aximm_V_offset_read,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_state1 = 42'd1;
parameter    ap_ST_fsm_state2 = 42'd2;
parameter    ap_ST_fsm_pp0_stage0 = 42'd4;
parameter    ap_ST_fsm_pp0_stage1 = 42'd8;
parameter    ap_ST_fsm_pp0_stage2 = 42'd16;
parameter    ap_ST_fsm_pp0_stage3 = 42'd32;
parameter    ap_ST_fsm_pp0_stage4 = 42'd64;
parameter    ap_ST_fsm_pp0_stage5 = 42'd128;
parameter    ap_ST_fsm_pp0_stage6 = 42'd256;
parameter    ap_ST_fsm_pp0_stage7 = 42'd512;
parameter    ap_ST_fsm_pp0_stage8 = 42'd1024;
parameter    ap_ST_fsm_pp0_stage9 = 42'd2048;
parameter    ap_ST_fsm_pp0_stage10 = 42'd4096;
parameter    ap_ST_fsm_pp0_stage11 = 42'd8192;
parameter    ap_ST_fsm_pp0_stage12 = 42'd16384;
parameter    ap_ST_fsm_pp0_stage13 = 42'd32768;
parameter    ap_ST_fsm_pp0_stage14 = 42'd65536;
parameter    ap_ST_fsm_pp0_stage15 = 42'd131072;
parameter    ap_ST_fsm_pp0_stage16 = 42'd262144;
parameter    ap_ST_fsm_pp0_stage17 = 42'd524288;
parameter    ap_ST_fsm_pp0_stage18 = 42'd1048576;
parameter    ap_ST_fsm_pp0_stage19 = 42'd2097152;
parameter    ap_ST_fsm_pp0_stage20 = 42'd4194304;
parameter    ap_ST_fsm_pp0_stage21 = 42'd8388608;
parameter    ap_ST_fsm_pp0_stage22 = 42'd16777216;
parameter    ap_ST_fsm_pp0_stage23 = 42'd33554432;
parameter    ap_ST_fsm_pp0_stage24 = 42'd67108864;
parameter    ap_ST_fsm_pp0_stage25 = 42'd134217728;
parameter    ap_ST_fsm_pp0_stage26 = 42'd268435456;
parameter    ap_ST_fsm_pp0_stage27 = 42'd536870912;
parameter    ap_ST_fsm_pp0_stage28 = 42'd1073741824;
parameter    ap_ST_fsm_pp0_stage29 = 42'd2147483648;
parameter    ap_ST_fsm_pp0_stage30 = 42'd4294967296;
parameter    ap_ST_fsm_pp0_stage31 = 42'd8589934592;
parameter    ap_ST_fsm_state36 = 42'd17179869184;
parameter    ap_ST_fsm_state37 = 42'd34359738368;
parameter    ap_ST_fsm_pp1_stage0 = 42'd68719476736;
parameter    ap_ST_fsm_state41 = 42'd137438953472;
parameter    ap_ST_fsm_state42 = 42'd274877906944;
parameter    ap_ST_fsm_state43 = 42'd549755813888;
parameter    ap_ST_fsm_state44 = 42'd1099511627776;
parameter    ap_ST_fsm_state45 = 42'd2199023255552;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] stream_V_dout;
input   stream_V_empty_n;
output   stream_V_read;
input  [31:0] width_dout;
input   width_empty_n;
output   width_read;
input  [31:0] height_dout;
input   height_empty_n;
output   height_read;
input  [31:0] stride_dout;
input   stride_empty_n;
output   stride_read;
output   m_axi_aximm_V_AWVALID;
input   m_axi_aximm_V_AWREADY;
output  [63:0] m_axi_aximm_V_AWADDR;
output  [0:0] m_axi_aximm_V_AWID;
output  [31:0] m_axi_aximm_V_AWLEN;
output  [2:0] m_axi_aximm_V_AWSIZE;
output  [1:0] m_axi_aximm_V_AWBURST;
output  [1:0] m_axi_aximm_V_AWLOCK;
output  [3:0] m_axi_aximm_V_AWCACHE;
output  [2:0] m_axi_aximm_V_AWPROT;
output  [3:0] m_axi_aximm_V_AWQOS;
output  [3:0] m_axi_aximm_V_AWREGION;
output  [0:0] m_axi_aximm_V_AWUSER;
output   m_axi_aximm_V_WVALID;
input   m_axi_aximm_V_WREADY;
output  [255:0] m_axi_aximm_V_WDATA;
output  [31:0] m_axi_aximm_V_WSTRB;
output   m_axi_aximm_V_WLAST;
output  [0:0] m_axi_aximm_V_WID;
output  [0:0] m_axi_aximm_V_WUSER;
output   m_axi_aximm_V_ARVALID;
input   m_axi_aximm_V_ARREADY;
output  [63:0] m_axi_aximm_V_ARADDR;
output  [0:0] m_axi_aximm_V_ARID;
output  [31:0] m_axi_aximm_V_ARLEN;
output  [2:0] m_axi_aximm_V_ARSIZE;
output  [1:0] m_axi_aximm_V_ARBURST;
output  [1:0] m_axi_aximm_V_ARLOCK;
output  [3:0] m_axi_aximm_V_ARCACHE;
output  [2:0] m_axi_aximm_V_ARPROT;
output  [3:0] m_axi_aximm_V_ARQOS;
output  [3:0] m_axi_aximm_V_ARREGION;
output  [0:0] m_axi_aximm_V_ARUSER;
input   m_axi_aximm_V_RVALID;
output   m_axi_aximm_V_RREADY;
input  [255:0] m_axi_aximm_V_RDATA;
input   m_axi_aximm_V_RLAST;
input  [0:0] m_axi_aximm_V_RID;
input  [0:0] m_axi_aximm_V_RUSER;
input  [1:0] m_axi_aximm_V_RRESP;
input   m_axi_aximm_V_BVALID;
output   m_axi_aximm_V_BREADY;
input  [1:0] m_axi_aximm_V_BRESP;
input  [0:0] m_axi_aximm_V_BID;
input  [0:0] m_axi_aximm_V_BUSER;
input  [63:0] aximm_V_offset_dout;
input   aximm_V_offset_empty_n;
output   aximm_V_offset_read;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stream_V_read;
reg width_read;
reg height_read;
reg stride_read;
reg m_axi_aximm_V_AWVALID;
reg m_axi_aximm_V_WVALID;
reg m_axi_aximm_V_BREADY;
reg aximm_V_offset_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [41:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond1_i_reg_1521;
reg   [0:0] or_cond_i_i_i_reg_1560;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] or_cond_1_i_i_i_reg_1579;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] or_cond_2_i_i_i_reg_1588;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] or_cond_3_i_i_i_reg_1597;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] or_cond_4_i_i_i_reg_1606;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] or_cond_5_i_i_i_reg_1615;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
reg   [0:0] or_cond_6_i_i_i_reg_1624;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
reg   [0:0] or_cond_7_i_i_i_reg_1633;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
reg   [0:0] or_cond_8_i_i_i_reg_1642;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
reg   [0:0] or_cond_9_i_i_i_reg_1651;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
reg   [0:0] or_cond_i_i_i_162_reg_1660;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
reg   [0:0] or_cond_10_i_i_i_reg_1669;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
reg   [0:0] or_cond_11_i_i_i_reg_1678;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
reg   [0:0] or_cond_12_i_i_i_reg_1687;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
reg   [0:0] or_cond_13_i_i_i_reg_1696;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
reg   [0:0] or_cond_14_i_i_i_reg_1705;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
reg   [0:0] or_cond_15_i_i_i_reg_1714;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
reg   [0:0] or_cond_16_i_i_i_reg_1723;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
reg   [0:0] or_cond_17_i_i_i_reg_1732;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
reg   [0:0] or_cond_18_i_i_i_reg_1741;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
reg   [0:0] or_cond_19_i_i_i_reg_1750;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
reg   [0:0] or_cond_20_i_i_i_reg_1759;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
reg   [0:0] or_cond_21_i_i_i_reg_1768;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
reg   [0:0] or_cond_22_i_i_i_reg_1777;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25;
reg   [0:0] or_cond_23_i_i_i_reg_1786;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
reg   [0:0] or_cond_24_i_i_i_reg_1795;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
reg   [0:0] or_cond_25_i_i_i_reg_1804;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28;
reg   [0:0] or_cond_26_i_i_i_reg_1813;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_pp0_stage29;
reg   [0:0] or_cond_27_i_i_i_reg_1822;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30;
reg   [0:0] or_cond_28_i_i_i_reg_1831;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_pp0_stage31;
reg   [0:0] or_cond_29_i_i_i_reg_1835;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] or_cond_30_i_i_i_reg_1839;
reg    width_blk_n;
reg    height_blk_n;
reg    stride_blk_n;
reg    aximm_V_blk_n_AW;
wire    ap_CS_fsm_state37;
reg    aximm_V_blk_n_W;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond_i_reg_1864;
reg   [0:0] ap_reg_pp1_iter1_exitcond_i_reg_1864;
reg    aximm_V_blk_n_B;
wire    ap_CS_fsm_state45;
reg    aximm_V_offset_blk_n;
reg   [11:0] x_i_i_i_reg_336;
reg   [7:0] p_033_3_i_i_i_reg_348;
reg   [7:0] p_033_3_1_i_i_i_reg_358;
reg   [7:0] p_033_3_2_i_i_i_reg_369;
reg   [7:0] p_033_3_3_i_i_i_reg_380;
reg   [7:0] p_033_3_4_i_i_i_reg_391;
reg   [7:0] p_033_3_5_i_i_i_reg_402;
reg   [7:0] p_033_3_6_i_i_i_reg_413;
reg   [7:0] p_033_3_7_i_i_i_reg_424;
reg   [7:0] p_033_3_8_i_i_i_reg_435;
reg   [7:0] p_033_3_9_i_i_i_reg_446;
reg   [7:0] p_033_3_i_i_i_163_reg_457;
reg   [7:0] p_033_3_10_i_i_i_reg_468;
reg   [7:0] p_033_3_11_i_i_i_reg_479;
reg   [7:0] p_033_3_12_i_i_i_reg_490;
reg   [7:0] p_033_3_13_i_i_i_reg_501;
reg   [7:0] p_033_3_14_i_i_i_reg_512;
reg   [7:0] p_033_3_15_i_i_i_reg_523;
reg   [7:0] p_033_3_16_i_i_i_reg_534;
reg   [7:0] p_033_3_17_i_i_i_reg_545;
reg   [7:0] p_033_3_18_i_i_i_reg_556;
reg   [7:0] p_033_3_19_i_i_i_reg_567;
reg   [7:0] p_033_3_20_i_i_i_reg_578;
reg   [7:0] p_033_3_21_i_i_i_reg_589;
reg   [7:0] p_033_3_22_i_i_i_reg_600;
reg   [7:0] p_033_3_23_i_i_i_reg_611;
reg   [7:0] p_033_3_24_i_i_i_reg_622;
reg   [7:0] p_033_3_25_i_i_i_reg_633;
reg   [7:0] p_033_3_26_i_i_i_reg_644;
reg   [7:0] p_033_3_27_i_i_i_reg_655;
reg   [7:0] p_033_3_28_i_i_i_reg_666;
reg   [11:0] x1_i_i_i_reg_698;
wire   [59:0] tmp_1_cast_i_fu_719_p1;
reg   [59:0] tmp_1_cast_i_reg_1321;
reg    ap_block_state1;
wire   [15:0] tmp_3_fu_727_p1;
reg   [15:0] tmp_3_reg_1326;
wire   [11:0] loopWidth_cast6_i_i_i_fu_745_p4;
reg   [11:0] loopWidth_cast6_i_i_i_reg_1331;
wire   [0:0] tmp_i_i_i_fu_759_p2;
reg   [0:0] tmp_i_i_i_reg_1337;
wire  signed [12:0] tmp_4_cast_i_i_i_fu_779_p1;
reg  signed [12:0] tmp_4_cast_i_i_i_reg_1342;
wire   [26:0] tmp_6_cast_i_i_i_fu_793_p1;
reg   [26:0] tmp_6_cast_i_i_i_reg_1347;
wire   [0:0] tmp_21_i_i_i_fu_797_p2;
reg   [0:0] tmp_21_i_i_i_reg_1352;
wire   [0:0] icmp_fu_813_p2;
reg   [0:0] icmp_reg_1357;
wire   [0:0] tmp_2_2_i_i_i_fu_819_p2;
reg   [0:0] tmp_2_2_i_i_i_reg_1362;
wire   [0:0] icmp3_fu_835_p2;
reg   [0:0] icmp3_reg_1367;
wire   [0:0] tmp_2_4_i_i_i_fu_841_p2;
reg   [0:0] tmp_2_4_i_i_i_reg_1372;
wire   [0:0] tmp_2_5_i_i_i_fu_847_p2;
reg   [0:0] tmp_2_5_i_i_i_reg_1377;
wire   [0:0] tmp_2_6_i_i_i_fu_853_p2;
reg   [0:0] tmp_2_6_i_i_i_reg_1382;
wire   [0:0] icmp6_fu_869_p2;
reg   [0:0] icmp6_reg_1387;
wire   [0:0] tmp_2_8_i_i_i_fu_875_p2;
reg   [0:0] tmp_2_8_i_i_i_reg_1392;
wire   [0:0] tmp_2_9_i_i_i_fu_881_p2;
reg   [0:0] tmp_2_9_i_i_i_reg_1397;
wire   [0:0] tmp_2_i_i_i_fu_887_p2;
reg   [0:0] tmp_2_i_i_i_reg_1402;
wire   [0:0] tmp_2_10_i_i_i_fu_893_p2;
reg   [0:0] tmp_2_10_i_i_i_reg_1407;
wire   [0:0] tmp_2_11_i_i_i_fu_899_p2;
reg   [0:0] tmp_2_11_i_i_i_reg_1412;
wire   [0:0] tmp_2_12_i_i_i_fu_905_p2;
reg   [0:0] tmp_2_12_i_i_i_reg_1417;
wire   [0:0] tmp_2_13_i_i_i_fu_911_p2;
reg   [0:0] tmp_2_13_i_i_i_reg_1422;
wire   [0:0] icmp9_fu_927_p2;
reg   [0:0] icmp9_reg_1427;
wire   [0:0] tmp_2_15_i_i_i_fu_933_p2;
reg   [0:0] tmp_2_15_i_i_i_reg_1432;
wire   [0:0] tmp_2_16_i_i_i_fu_939_p2;
reg   [0:0] tmp_2_16_i_i_i_reg_1437;
wire   [0:0] tmp_2_17_i_i_i_fu_945_p2;
reg   [0:0] tmp_2_17_i_i_i_reg_1442;
wire   [0:0] tmp_2_18_i_i_i_fu_951_p2;
reg   [0:0] tmp_2_18_i_i_i_reg_1447;
wire   [0:0] tmp_2_19_i_i_i_fu_957_p2;
reg   [0:0] tmp_2_19_i_i_i_reg_1452;
wire   [0:0] tmp_2_20_i_i_i_fu_963_p2;
reg   [0:0] tmp_2_20_i_i_i_reg_1457;
wire   [0:0] tmp_2_21_i_i_i_fu_969_p2;
reg   [0:0] tmp_2_21_i_i_i_reg_1462;
wire   [0:0] tmp_2_22_i_i_i_fu_975_p2;
reg   [0:0] tmp_2_22_i_i_i_reg_1467;
wire   [0:0] tmp_2_23_i_i_i_fu_981_p2;
reg   [0:0] tmp_2_23_i_i_i_reg_1472;
wire   [0:0] tmp_2_24_i_i_i_fu_987_p2;
reg   [0:0] tmp_2_24_i_i_i_reg_1477;
wire   [0:0] tmp_2_25_i_i_i_fu_993_p2;
reg   [0:0] tmp_2_25_i_i_i_reg_1482;
wire   [0:0] tmp_2_26_i_i_i_fu_999_p2;
reg   [0:0] tmp_2_26_i_i_i_reg_1487;
wire   [0:0] tmp_2_27_i_i_i_fu_1005_p2;
reg   [0:0] tmp_2_27_i_i_i_reg_1492;
wire   [0:0] tmp_2_28_i_i_i_fu_1011_p2;
reg   [0:0] tmp_2_28_i_i_i_reg_1497;
wire   [0:0] tmp_2_29_i_i_i_fu_1017_p2;
reg   [0:0] tmp_2_29_i_i_i_reg_1502;
wire   [31:0] tmp_4_i_fu_1023_p1;
reg   [31:0] tmp_4_i_reg_1507;
wire   [0:0] exitcond1_i_i_i_fu_1032_p2;
wire    ap_CS_fsm_state2;
wire   [15:0] y_fu_1037_p2;
reg   [15:0] y_reg_1516;
wire   [0:0] exitcond1_i_fu_1043_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op296_read_state35;
reg    ap_block_state35_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_8_i_i_i_fu_1052_p2;
reg   [0:0] tmp_8_i_i_i_reg_1525;
wire   [0:0] or_cond_i_i_i_fu_1057_p2;
reg    ap_predicate_op141_read_state4;
reg    ap_block_state4_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
wire   [11:0] x_1_fu_1065_p2;
reg   [11:0] x_1_reg_1569;
wire   [0:0] or_cond_1_i_i_i_fu_1071_p2;
reg    ap_predicate_op146_read_state5;
reg    ap_block_state5_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
wire   [0:0] or_cond_2_i_i_i_fu_1075_p2;
reg    ap_predicate_op151_read_state6;
reg    ap_block_state6_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
wire   [0:0] or_cond_3_i_i_i_fu_1079_p2;
reg    ap_predicate_op156_read_state7;
reg    ap_block_state7_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
wire   [0:0] or_cond_4_i_i_i_fu_1083_p2;
reg    ap_predicate_op161_read_state8;
reg    ap_block_state8_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
wire   [0:0] or_cond_5_i_i_i_fu_1087_p2;
reg    ap_predicate_op166_read_state9;
reg    ap_block_state9_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
wire   [0:0] or_cond_6_i_i_i_fu_1091_p2;
reg    ap_predicate_op171_read_state10;
reg    ap_block_state10_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_11001;
wire   [0:0] or_cond_7_i_i_i_fu_1095_p2;
reg    ap_predicate_op176_read_state11;
reg    ap_block_state11_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_11001;
wire   [0:0] or_cond_8_i_i_i_fu_1099_p2;
reg    ap_predicate_op181_read_state12;
reg    ap_block_state12_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_11001;
wire   [0:0] or_cond_9_i_i_i_fu_1103_p2;
reg    ap_predicate_op186_read_state13;
reg    ap_block_state13_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_11001;
wire   [0:0] or_cond_i_i_i_162_fu_1107_p2;
reg    ap_predicate_op191_read_state14;
reg    ap_block_state14_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_11001;
wire   [0:0] or_cond_10_i_i_i_fu_1111_p2;
reg    ap_predicate_op196_read_state15;
reg    ap_block_state15_pp0_stage12_iter0;
reg    ap_block_pp0_stage12_11001;
wire   [0:0] or_cond_11_i_i_i_fu_1115_p2;
reg    ap_predicate_op201_read_state16;
reg    ap_block_state16_pp0_stage13_iter0;
reg    ap_block_pp0_stage13_11001;
wire   [0:0] or_cond_12_i_i_i_fu_1119_p2;
reg    ap_predicate_op206_read_state17;
reg    ap_block_state17_pp0_stage14_iter0;
reg    ap_block_pp0_stage14_11001;
wire   [0:0] or_cond_13_i_i_i_fu_1123_p2;
reg    ap_predicate_op211_read_state18;
reg    ap_block_state18_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_11001;
wire   [0:0] or_cond_14_i_i_i_fu_1127_p2;
reg    ap_predicate_op216_read_state19;
reg    ap_block_state19_pp0_stage16_iter0;
reg    ap_block_pp0_stage16_11001;
wire   [0:0] or_cond_15_i_i_i_fu_1131_p2;
reg    ap_predicate_op221_read_state20;
reg    ap_block_state20_pp0_stage17_iter0;
reg    ap_block_pp0_stage17_11001;
wire   [0:0] or_cond_16_i_i_i_fu_1135_p2;
reg    ap_predicate_op226_read_state21;
reg    ap_block_state21_pp0_stage18_iter0;
reg    ap_block_pp0_stage18_11001;
wire   [0:0] or_cond_17_i_i_i_fu_1139_p2;
reg    ap_predicate_op231_read_state22;
reg    ap_block_state22_pp0_stage19_iter0;
reg    ap_block_pp0_stage19_11001;
wire   [0:0] or_cond_18_i_i_i_fu_1143_p2;
reg    ap_predicate_op236_read_state23;
reg    ap_block_state23_pp0_stage20_iter0;
reg    ap_block_pp0_stage20_11001;
wire   [0:0] or_cond_19_i_i_i_fu_1147_p2;
reg    ap_predicate_op241_read_state24;
reg    ap_block_state24_pp0_stage21_iter0;
reg    ap_block_pp0_stage21_11001;
wire   [0:0] or_cond_20_i_i_i_fu_1151_p2;
reg    ap_predicate_op246_read_state25;
reg    ap_block_state25_pp0_stage22_iter0;
reg    ap_block_pp0_stage22_11001;
wire   [0:0] or_cond_21_i_i_i_fu_1155_p2;
reg    ap_predicate_op251_read_state26;
reg    ap_block_state26_pp0_stage23_iter0;
reg    ap_block_pp0_stage23_11001;
wire   [0:0] or_cond_22_i_i_i_fu_1159_p2;
reg    ap_predicate_op256_read_state27;
reg    ap_block_state27_pp0_stage24_iter0;
reg    ap_block_pp0_stage24_11001;
wire   [0:0] or_cond_23_i_i_i_fu_1163_p2;
reg    ap_predicate_op261_read_state28;
reg    ap_block_state28_pp0_stage25_iter0;
reg    ap_block_pp0_stage25_11001;
wire   [0:0] or_cond_24_i_i_i_fu_1167_p2;
reg    ap_predicate_op266_read_state29;
reg    ap_block_state29_pp0_stage26_iter0;
reg    ap_block_pp0_stage26_11001;
wire   [0:0] or_cond_25_i_i_i_fu_1171_p2;
reg    ap_predicate_op271_read_state30;
reg    ap_block_state30_pp0_stage27_iter0;
reg    ap_block_pp0_stage27_11001;
wire   [0:0] or_cond_26_i_i_i_fu_1175_p2;
reg    ap_predicate_op276_read_state31;
reg    ap_block_state31_pp0_stage28_iter0;
reg    ap_block_pp0_stage28_11001;
wire   [0:0] or_cond_27_i_i_i_fu_1179_p2;
reg    ap_predicate_op281_read_state32;
reg    ap_block_state32_pp0_stage29_iter0;
reg    ap_block_pp0_stage29_11001;
wire   [0:0] or_cond_28_i_i_i_fu_1183_p2;
wire   [0:0] or_cond_29_i_i_i_fu_1187_p2;
wire   [0:0] or_cond_30_i_i_i_fu_1191_p2;
reg    ap_predicate_op288_read_state33;
reg    ap_block_state33_pp0_stage30_iter0;
reg    ap_block_pp0_stage30_11001;
reg    ap_predicate_op292_read_state34;
reg    ap_block_state34_pp0_stage31_iter0;
reg    ap_block_pp0_stage31_11001;
wire   [59:0] sum_i_fu_1278_p2;
reg   [59:0] sum_i_reg_1853;
wire    ap_CS_fsm_state36;
reg    ap_sig_ioackin_m_axi_aximm_V_AWREADY;
wire   [0:0] exitcond_i_fu_1293_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state38_pp1_stage0_iter0;
wire    ap_block_state39_pp1_stage0_iter1;
wire    ap_block_state40_pp1_stage0_iter2;
reg    ap_sig_ioackin_m_axi_aximm_V_WREADY;
reg    ap_block_state40_io;
reg    ap_block_pp1_stage0_11001;
wire   [11:0] x_fu_1298_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [255:0] buff_V_q0;
reg   [255:0] buff_V_load_reg_1878;
reg    ap_enable_reg_pp1_iter1;
wire   [26:0] yoffset_fu_1309_p2;
reg   [26:0] yoffset_reg_1883;
wire    ap_CS_fsm_state41;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_block_pp0_stage31_subdone;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state38;
reg   [5:0] buff_V_address0;
reg    buff_V_ce0;
reg    buff_V_we0;
wire   [255:0] buff_V_d0;
reg   [26:0] yoffset_i_i_i_reg_313;
reg   [15:0] y_i_i_i_reg_325;
reg   [11:0] x_i_i_i_phi_fu_340_p4;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_i_i_i_reg_348;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_1_i_i_i_reg_358;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_2_i_i_i_reg_369;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_3_i_i_i_reg_380;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_4_i_i_i_reg_391;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_5_i_i_i_reg_402;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_6_i_i_i_reg_413;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_7_i_i_i_reg_424;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_8_i_i_i_reg_435;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_9_i_i_i_reg_446;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_i_i_i_163_reg_457;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_10_i_i_i_reg_468;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_11_i_i_i_reg_479;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_12_i_i_i_reg_490;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_13_i_i_i_reg_501;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_14_i_i_i_reg_512;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_15_i_i_i_reg_523;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_16_i_i_i_reg_534;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_17_i_i_i_reg_545;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_18_i_i_i_reg_556;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_19_i_i_i_reg_567;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_20_i_i_i_reg_578;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_21_i_i_i_reg_589;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_22_i_i_i_reg_600;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_23_i_i_i_reg_611;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_24_i_i_i_reg_622;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_25_i_i_i_reg_633;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_26_i_i_i_reg_644;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_27_i_i_i_reg_655;
reg   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_28_i_i_i_reg_666;
wire   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_29_i_i_i_reg_677;
reg   [7:0] ap_phi_precharge_reg_pp0_iter1_p_033_3_29_i_i_i_reg_677;
wire   [7:0] ap_phi_precharge_reg_pp0_iter0_p_033_3_30_i_i_i_reg_687;
reg   [7:0] ap_phi_precharge_reg_pp0_iter1_p_033_3_30_i_i_i_reg_687;
reg   [7:0] p_033_3_30_i_i_i_phi_fu_690_p4;
wire   [63:0] tmp_i_i_i_164_fu_1264_p1;
wire   [63:0] tmp_12_i_i_i_fu_1304_p1;
wire   [63:0] sum_cast_i_fu_1283_p1;
reg    ap_reg_ioackin_m_axi_aximm_V_AWREADY;
reg    ap_reg_ioackin_m_axi_aximm_V_WREADY;
wire    ap_block_pp1_stage0_01001;
reg   [7:0] tmp_fu_242;
wire   [58:0] tmp_1_fu_709_p4;
wire   [15:0] tmp_2_fu_723_p1;
wire   [16:0] widthInPix_cast7_i_i_i_fu_731_p1;
wire   [16:0] tmp_1_i_i_i_fu_739_p2;
wire   [4:0] remainPix_fu_735_p1;
wire   [5:0] remainPix_cast_i_i_i_fu_755_p1;
wire   [11:0] tmp_4_i_i_i_fu_773_p2;
wire   [10:0] tmp_6_i_i_i_fu_783_p4;
wire   [5:0] remainPix_1_fu_765_p3;
wire   [4:0] tmp_5_fu_803_p4;
wire   [3:0] tmp_6_fu_825_p4;
wire   [2:0] tmp_7_fu_859_p4;
wire   [1:0] tmp_8_fu_917_p4;
wire   [12:0] x_cast_i_i_i_fu_1048_p1;
wire   [59:0] tmp_3_cast_i_fu_1274_p1;
reg   [41:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_block_pp0_stage24_subdone;
reg    ap_block_pp0_stage25_subdone;
reg    ap_block_pp0_stage26_subdone;
reg    ap_block_pp0_stage27_subdone;
reg    ap_block_pp0_stage28_subdone;
reg    ap_block_pp0_stage29_subdone;
reg    ap_block_pp0_stage30_subdone;
wire    ap_ext_blocking_cur_n;
wire    ap_int_blocking_cur_n;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_2255;
reg    ap_condition_2259;
reg    ap_condition_2263;
reg    ap_condition_2267;
reg    ap_condition_2271;
reg    ap_condition_2275;
reg    ap_condition_2279;
reg    ap_condition_2283;
reg    ap_condition_2287;
reg    ap_condition_2291;
reg    ap_condition_2295;
reg    ap_condition_2299;
reg    ap_condition_2303;
reg    ap_condition_2307;
reg    ap_condition_2311;
reg    ap_condition_2315;
reg    ap_condition_2319;
reg    ap_condition_2323;
reg    ap_condition_2327;
reg    ap_condition_2331;
reg    ap_condition_2335;
reg    ap_condition_2339;
reg    ap_condition_2343;
reg    ap_condition_2347;
reg    ap_condition_2351;
reg    ap_condition_2355;
reg    ap_condition_2359;
reg    ap_condition_2363;
reg    ap_condition_2367;
reg    ap_condition_2371;
reg    ap_condition_1273;
reg    ap_condition_1382;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 42'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_reg_ioackin_m_axi_aximm_V_AWREADY = 1'b0;
#0 ap_reg_ioackin_m_axi_aximm_V_WREADY = 1'b0;
end

AXIBursts2PixelStream8_buff_V #(
    .DataWidth( 256 ),
    .AddressRange( 60 ),
    .AddressWidth( 6 ))
buff_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buff_V_address0),
    .ce0(buff_V_ce0),
    .we0(buff_V_we0),
    .d0(buff_V_d0),
    .q0(buff_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond1_i_i_i_fu_1032_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_subdone == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == exitcond1_i_i_i_fu_1032_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state4) & (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_subdone == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_subdone == 1'b0))))) begin
            ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state4 ^ 1'b1);
        end else if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_block_pp0_stage1_subdone == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_subdone == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == exitcond1_i_i_i_fu_1032_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state38))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state37) & (ap_sig_ioackin_m_axi_aximm_V_AWREADY == 1'b1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_subdone == 1'b0)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state38)) begin
                ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state38 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp1_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((1'b1 == ap_CS_fsm_state37) & (ap_sig_ioackin_m_axi_aximm_V_AWREADY == 1'b1))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_aximm_V_AWREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state37)) begin
            if ((ap_sig_ioackin_m_axi_aximm_V_AWREADY == 1'b1)) begin
                ap_reg_ioackin_m_axi_aximm_V_AWREADY <= 1'b0;
            end else if ((1'b1 == m_axi_aximm_V_AWREADY)) begin
                ap_reg_ioackin_m_axi_aximm_V_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_aximm_V_WREADY <= 1'b0;
    end else begin
        if (((1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond_i_reg_1864))) begin
            if ((ap_block_pp1_stage0_11001 == 1'b0)) begin
                ap_reg_ioackin_m_axi_aximm_V_WREADY <= 1'b0;
            end else if (((1'b1 == m_axi_aximm_V_WREADY) & (ap_block_pp1_stage0_01001 == 1'b0))) begin
                ap_reg_ioackin_m_axi_aximm_V_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2255 == 1'b1)) begin
        if ((1'd0 == or_cond_10_i_i_i_reg_1669)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_10_i_i_i_reg_468 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_i_i_i_163_reg_457;
        end else if ((1'd1 == or_cond_10_i_i_i_reg_1669)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_10_i_i_i_reg_468 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2259 == 1'b1)) begin
        if ((1'd0 == or_cond_11_i_i_i_reg_1678)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_11_i_i_i_reg_479 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_10_i_i_i_reg_468;
        end else if ((1'd1 == or_cond_11_i_i_i_reg_1678)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_11_i_i_i_reg_479 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2263 == 1'b1)) begin
        if ((1'd0 == or_cond_12_i_i_i_reg_1687)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_12_i_i_i_reg_490 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_11_i_i_i_reg_479;
        end else if ((1'd1 == or_cond_12_i_i_i_reg_1687)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_12_i_i_i_reg_490 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2267 == 1'b1)) begin
        if ((1'd0 == or_cond_13_i_i_i_reg_1696)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_13_i_i_i_reg_501 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_12_i_i_i_reg_490;
        end else if ((1'd1 == or_cond_13_i_i_i_reg_1696)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_13_i_i_i_reg_501 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2271 == 1'b1)) begin
        if ((1'd0 == or_cond_14_i_i_i_reg_1705)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_14_i_i_i_reg_512 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_13_i_i_i_reg_501;
        end else if ((1'd1 == or_cond_14_i_i_i_reg_1705)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_14_i_i_i_reg_512 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2275 == 1'b1)) begin
        if ((1'd0 == or_cond_15_i_i_i_reg_1714)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_15_i_i_i_reg_523 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_14_i_i_i_reg_512;
        end else if ((1'd1 == or_cond_15_i_i_i_reg_1714)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_15_i_i_i_reg_523 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2279 == 1'b1)) begin
        if ((1'd0 == or_cond_16_i_i_i_reg_1723)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_16_i_i_i_reg_534 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_15_i_i_i_reg_523;
        end else if ((1'd1 == or_cond_16_i_i_i_reg_1723)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_16_i_i_i_reg_534 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2283 == 1'b1)) begin
        if ((1'd0 == or_cond_17_i_i_i_reg_1732)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_17_i_i_i_reg_545 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_16_i_i_i_reg_534;
        end else if ((1'd1 == or_cond_17_i_i_i_reg_1732)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_17_i_i_i_reg_545 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2287 == 1'b1)) begin
        if ((1'd0 == or_cond_18_i_i_i_reg_1741)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_18_i_i_i_reg_556 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_17_i_i_i_reg_545;
        end else if ((1'd1 == or_cond_18_i_i_i_reg_1741)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_18_i_i_i_reg_556 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2291 == 1'b1)) begin
        if ((1'd0 == or_cond_19_i_i_i_reg_1750)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_19_i_i_i_reg_567 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_18_i_i_i_reg_556;
        end else if ((1'd1 == or_cond_19_i_i_i_reg_1750)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_19_i_i_i_reg_567 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2295 == 1'b1)) begin
        if ((1'd0 == or_cond_1_i_i_i_reg_1579)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_1_i_i_i_reg_358 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_i_i_i_reg_348;
        end else if ((1'd1 == or_cond_1_i_i_i_reg_1579)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_1_i_i_i_reg_358 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2299 == 1'b1)) begin
        if ((1'd0 == or_cond_20_i_i_i_reg_1759)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_20_i_i_i_reg_578 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_19_i_i_i_reg_567;
        end else if ((1'd1 == or_cond_20_i_i_i_reg_1759)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_20_i_i_i_reg_578 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2303 == 1'b1)) begin
        if ((1'd0 == or_cond_21_i_i_i_reg_1768)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_21_i_i_i_reg_589 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_20_i_i_i_reg_578;
        end else if ((1'd1 == or_cond_21_i_i_i_reg_1768)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_21_i_i_i_reg_589 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2307 == 1'b1)) begin
        if ((1'd0 == or_cond_22_i_i_i_reg_1777)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_22_i_i_i_reg_600 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_21_i_i_i_reg_589;
        end else if ((1'd1 == or_cond_22_i_i_i_reg_1777)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_22_i_i_i_reg_600 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2311 == 1'b1)) begin
        if ((1'd0 == or_cond_23_i_i_i_reg_1786)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_23_i_i_i_reg_611 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_22_i_i_i_reg_600;
        end else if ((1'd1 == or_cond_23_i_i_i_reg_1786)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_23_i_i_i_reg_611 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2315 == 1'b1)) begin
        if ((1'd0 == or_cond_24_i_i_i_reg_1795)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_24_i_i_i_reg_622 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_23_i_i_i_reg_611;
        end else if ((1'd1 == or_cond_24_i_i_i_reg_1795)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_24_i_i_i_reg_622 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2319 == 1'b1)) begin
        if ((1'd0 == or_cond_25_i_i_i_reg_1804)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_25_i_i_i_reg_633 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_24_i_i_i_reg_622;
        end else if ((1'd1 == or_cond_25_i_i_i_reg_1804)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_25_i_i_i_reg_633 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2323 == 1'b1)) begin
        if ((1'd0 == or_cond_26_i_i_i_reg_1813)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_26_i_i_i_reg_644 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_25_i_i_i_reg_633;
        end else if ((1'd1 == or_cond_26_i_i_i_reg_1813)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_26_i_i_i_reg_644 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2327 == 1'b1)) begin
        if ((1'd0 == or_cond_27_i_i_i_reg_1822)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_27_i_i_i_reg_655 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_26_i_i_i_reg_644;
        end else if ((1'd1 == or_cond_27_i_i_i_reg_1822)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_27_i_i_i_reg_655 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2331 == 1'b1)) begin
        if ((1'd0 == or_cond_28_i_i_i_reg_1831)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_28_i_i_i_reg_666 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_27_i_i_i_reg_655;
        end else if ((1'd1 == or_cond_28_i_i_i_reg_1831)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_28_i_i_i_reg_666 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2335 == 1'b1)) begin
        if ((1'd0 == or_cond_2_i_i_i_reg_1588)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_2_i_i_i_reg_369 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_1_i_i_i_reg_358;
        end else if ((1'd1 == or_cond_2_i_i_i_reg_1588)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_2_i_i_i_reg_369 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2339 == 1'b1)) begin
        if ((1'd0 == or_cond_3_i_i_i_reg_1597)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_3_i_i_i_reg_380 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_2_i_i_i_reg_369;
        end else if ((1'd1 == or_cond_3_i_i_i_reg_1597)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_3_i_i_i_reg_380 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2343 == 1'b1)) begin
        if ((1'd0 == or_cond_4_i_i_i_reg_1606)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_4_i_i_i_reg_391 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_3_i_i_i_reg_380;
        end else if ((1'd1 == or_cond_4_i_i_i_reg_1606)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_4_i_i_i_reg_391 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2347 == 1'b1)) begin
        if ((1'd0 == or_cond_5_i_i_i_reg_1615)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_5_i_i_i_reg_402 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_4_i_i_i_reg_391;
        end else if ((1'd1 == or_cond_5_i_i_i_reg_1615)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_5_i_i_i_reg_402 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2351 == 1'b1)) begin
        if ((1'd0 == or_cond_6_i_i_i_reg_1624)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_6_i_i_i_reg_413 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_5_i_i_i_reg_402;
        end else if ((1'd1 == or_cond_6_i_i_i_reg_1624)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_6_i_i_i_reg_413 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2355 == 1'b1)) begin
        if ((1'd0 == or_cond_7_i_i_i_reg_1633)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_7_i_i_i_reg_424 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_6_i_i_i_reg_413;
        end else if ((1'd1 == or_cond_7_i_i_i_reg_1633)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_7_i_i_i_reg_424 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2359 == 1'b1)) begin
        if ((1'd0 == or_cond_8_i_i_i_reg_1642)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_8_i_i_i_reg_435 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_7_i_i_i_reg_424;
        end else if ((1'd1 == or_cond_8_i_i_i_reg_1642)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_8_i_i_i_reg_435 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2363 == 1'b1)) begin
        if ((1'd0 == or_cond_9_i_i_i_reg_1651)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_9_i_i_i_reg_446 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_8_i_i_i_reg_435;
        end else if ((1'd1 == or_cond_9_i_i_i_reg_1651)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_9_i_i_i_reg_446 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2367 == 1'b1)) begin
        if ((1'd0 == or_cond_i_i_i_162_reg_1660)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_i_i_i_163_reg_457 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_9_i_i_i_reg_446;
        end else if ((1'd1 == or_cond_i_i_i_162_reg_1660)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_i_i_i_163_reg_457 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_2371 == 1'b1)) begin
        if ((1'd0 == or_cond_i_i_i_reg_1560)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_i_i_i_reg_348 <= tmp_fu_242;
        end else if ((or_cond_i_i_i_reg_1560 == 1'd1)) begin
            ap_phi_precharge_reg_pp0_iter0_p_033_3_i_i_i_reg_348 <= stream_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_1273 == 1'b1)) begin
        if (((1'd0 == exitcond1_i_reg_1521) & (1'd0 == or_cond_29_i_i_i_reg_1835))) begin
            ap_phi_precharge_reg_pp0_iter1_p_033_3_29_i_i_i_reg_677 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_28_i_i_i_reg_666;
        end else if (((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_29_i_i_i_reg_1835))) begin
            ap_phi_precharge_reg_pp0_iter1_p_033_3_29_i_i_i_reg_677 <= stream_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_p_033_3_29_i_i_i_reg_677 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_29_i_i_i_reg_677;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        tmp_fu_242 <= p_033_3_30_i_i_i_phi_fu_690_p4;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == aximm_V_offset_empty_n) | (1'b0 == width_empty_n) | (1'b0 == height_empty_n) | (1'b0 == stride_empty_n)))) begin
        tmp_fu_242 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (ap_sig_ioackin_m_axi_aximm_V_AWREADY == 1'b1))) begin
        x1_i_i_i_reg_698 <= 12'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_fu_1293_p2))) begin
        x1_i_i_i_reg_698 <= x_fu_1298_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        x_i_i_i_reg_336 <= x_1_reg_1569;
    end else if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == exitcond1_i_i_i_fu_1032_p2))) begin
        x_i_i_i_reg_336 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (m_axi_aximm_V_BVALID == 1'b1))) begin
        y_i_i_i_reg_325 <= y_reg_1516;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == aximm_V_offset_empty_n) | (1'b0 == width_empty_n) | (1'b0 == height_empty_n) | (1'b0 == stride_empty_n)))) begin
        y_i_i_i_reg_325 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (m_axi_aximm_V_BVALID == 1'b1))) begin
        yoffset_i_i_i_reg_313 <= yoffset_reg_1883;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == aximm_V_offset_empty_n) | (1'b0 == width_empty_n) | (1'b0 == height_empty_n) | (1'b0 == stride_empty_n)))) begin
        yoffset_i_i_i_reg_313 <= 27'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_11001 == 1'b0))) begin
        ap_phi_precharge_reg_pp0_iter1_p_033_3_30_i_i_i_reg_687 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_30_i_i_i_reg_687;
        p_033_3_28_i_i_i_reg_666 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_28_i_i_i_reg_666;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0))) begin
        ap_reg_pp1_iter1_exitcond_i_reg_1864 <= exitcond_i_reg_1864;
        exitcond_i_reg_1864 <= exitcond_i_fu_1293_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd0 == exitcond_i_reg_1864))) begin
        buff_V_load_reg_1878 <= buff_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        exitcond1_i_reg_1521 <= exitcond1_i_fu_1043_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == aximm_V_offset_empty_n) | (1'b0 == width_empty_n) | (1'b0 == height_empty_n) | (1'b0 == stride_empty_n)))) begin
        icmp3_reg_1367 <= icmp3_fu_835_p2;
        icmp6_reg_1387 <= icmp6_fu_869_p2;
        icmp9_reg_1427 <= icmp9_fu_927_p2;
        icmp_reg_1357 <= icmp_fu_813_p2;
        loopWidth_cast6_i_i_i_reg_1331 <= {{tmp_1_i_i_i_fu_739_p2[16:5]}};
        tmp_1_cast_i_reg_1321[58 : 0] <= tmp_1_cast_i_fu_719_p1[58 : 0];
        tmp_21_i_i_i_reg_1352 <= tmp_21_i_i_i_fu_797_p2;
        tmp_2_10_i_i_i_reg_1407 <= tmp_2_10_i_i_i_fu_893_p2;
        tmp_2_11_i_i_i_reg_1412 <= tmp_2_11_i_i_i_fu_899_p2;
        tmp_2_12_i_i_i_reg_1417 <= tmp_2_12_i_i_i_fu_905_p2;
        tmp_2_13_i_i_i_reg_1422 <= tmp_2_13_i_i_i_fu_911_p2;
        tmp_2_15_i_i_i_reg_1432 <= tmp_2_15_i_i_i_fu_933_p2;
        tmp_2_16_i_i_i_reg_1437 <= tmp_2_16_i_i_i_fu_939_p2;
        tmp_2_17_i_i_i_reg_1442 <= tmp_2_17_i_i_i_fu_945_p2;
        tmp_2_18_i_i_i_reg_1447 <= tmp_2_18_i_i_i_fu_951_p2;
        tmp_2_19_i_i_i_reg_1452 <= tmp_2_19_i_i_i_fu_957_p2;
        tmp_2_20_i_i_i_reg_1457 <= tmp_2_20_i_i_i_fu_963_p2;
        tmp_2_21_i_i_i_reg_1462 <= tmp_2_21_i_i_i_fu_969_p2;
        tmp_2_22_i_i_i_reg_1467 <= tmp_2_22_i_i_i_fu_975_p2;
        tmp_2_23_i_i_i_reg_1472 <= tmp_2_23_i_i_i_fu_981_p2;
        tmp_2_24_i_i_i_reg_1477 <= tmp_2_24_i_i_i_fu_987_p2;
        tmp_2_25_i_i_i_reg_1482 <= tmp_2_25_i_i_i_fu_993_p2;
        tmp_2_26_i_i_i_reg_1487 <= tmp_2_26_i_i_i_fu_999_p2;
        tmp_2_27_i_i_i_reg_1492 <= tmp_2_27_i_i_i_fu_1005_p2;
        tmp_2_28_i_i_i_reg_1497 <= tmp_2_28_i_i_i_fu_1011_p2;
        tmp_2_29_i_i_i_reg_1502 <= tmp_2_29_i_i_i_fu_1017_p2;
        tmp_2_2_i_i_i_reg_1362 <= tmp_2_2_i_i_i_fu_819_p2;
        tmp_2_4_i_i_i_reg_1372 <= tmp_2_4_i_i_i_fu_841_p2;
        tmp_2_5_i_i_i_reg_1377 <= tmp_2_5_i_i_i_fu_847_p2;
        tmp_2_6_i_i_i_reg_1382 <= tmp_2_6_i_i_i_fu_853_p2;
        tmp_2_8_i_i_i_reg_1392 <= tmp_2_8_i_i_i_fu_875_p2;
        tmp_2_9_i_i_i_reg_1397 <= tmp_2_9_i_i_i_fu_881_p2;
        tmp_2_i_i_i_reg_1402 <= tmp_2_i_i_i_fu_887_p2;
        tmp_3_reg_1326 <= tmp_3_fu_727_p1;
        tmp_4_cast_i_i_i_reg_1342 <= tmp_4_cast_i_i_i_fu_779_p1;
        tmp_4_i_reg_1507[11 : 0] <= tmp_4_i_fu_1023_p1[11 : 0];
        tmp_6_cast_i_i_i_reg_1347[10 : 0] <= tmp_6_cast_i_i_i_fu_793_p1[10 : 0];
        tmp_i_i_i_reg_1337 <= tmp_i_i_i_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_11001 == 1'b0))) begin
        or_cond_10_i_i_i_reg_1669 <= or_cond_10_i_i_i_fu_1111_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_11001 == 1'b0))) begin
        or_cond_11_i_i_i_reg_1678 <= or_cond_11_i_i_i_fu_1115_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_11001 == 1'b0))) begin
        or_cond_12_i_i_i_reg_1687 <= or_cond_12_i_i_i_fu_1119_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14_11001 == 1'b0))) begin
        or_cond_13_i_i_i_reg_1696 <= or_cond_13_i_i_i_fu_1123_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_block_pp0_stage15_11001 == 1'b0))) begin
        or_cond_14_i_i_i_reg_1705 <= or_cond_14_i_i_i_fu_1127_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_11001 == 1'b0))) begin
        or_cond_15_i_i_i_reg_1714 <= or_cond_15_i_i_i_fu_1131_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_block_pp0_stage17_11001 == 1'b0))) begin
        or_cond_16_i_i_i_reg_1723 <= or_cond_16_i_i_i_fu_1135_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_block_pp0_stage18_11001 == 1'b0))) begin
        or_cond_17_i_i_i_reg_1732 <= or_cond_17_i_i_i_fu_1139_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_block_pp0_stage19_11001 == 1'b0))) begin
        or_cond_18_i_i_i_reg_1741 <= or_cond_18_i_i_i_fu_1143_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0))) begin
        or_cond_19_i_i_i_reg_1750 <= or_cond_19_i_i_i_fu_1147_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'd0 == exitcond1_i_reg_1521) & (ap_block_pp0_stage1_11001 == 1'b0))) begin
        or_cond_1_i_i_i_reg_1579 <= or_cond_1_i_i_i_fu_1071_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0))) begin
        or_cond_20_i_i_i_reg_1759 <= or_cond_20_i_i_i_fu_1151_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0))) begin
        or_cond_21_i_i_i_reg_1768 <= or_cond_21_i_i_i_fu_1155_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0))) begin
        or_cond_22_i_i_i_reg_1777 <= or_cond_22_i_i_i_fu_1159_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0))) begin
        or_cond_23_i_i_i_reg_1786 <= or_cond_23_i_i_i_fu_1163_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0))) begin
        or_cond_24_i_i_i_reg_1795 <= or_cond_24_i_i_i_fu_1167_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0))) begin
        or_cond_25_i_i_i_reg_1804 <= or_cond_25_i_i_i_fu_1171_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0))) begin
        or_cond_26_i_i_i_reg_1813 <= or_cond_26_i_i_i_fu_1175_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_11001 == 1'b0))) begin
        or_cond_27_i_i_i_reg_1822 <= or_cond_27_i_i_i_fu_1179_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0))) begin
        or_cond_28_i_i_i_reg_1831 <= or_cond_28_i_i_i_fu_1183_p2;
        or_cond_29_i_i_i_reg_1835 <= or_cond_29_i_i_i_fu_1187_p2;
        or_cond_30_i_i_i_reg_1839 <= or_cond_30_i_i_i_fu_1191_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0))) begin
        or_cond_2_i_i_i_reg_1588 <= or_cond_2_i_i_i_fu_1075_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0))) begin
        or_cond_3_i_i_i_reg_1597 <= or_cond_3_i_i_i_fu_1079_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0))) begin
        or_cond_4_i_i_i_reg_1606 <= or_cond_4_i_i_i_fu_1083_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0))) begin
        or_cond_5_i_i_i_reg_1615 <= or_cond_5_i_i_i_fu_1087_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6_11001 == 1'b0))) begin
        or_cond_6_i_i_i_reg_1624 <= or_cond_6_i_i_i_fu_1091_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_11001 == 1'b0))) begin
        or_cond_7_i_i_i_reg_1633 <= or_cond_7_i_i_i_fu_1095_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_11001 == 1'b0))) begin
        or_cond_8_i_i_i_reg_1642 <= or_cond_8_i_i_i_fu_1099_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_11001 == 1'b0))) begin
        or_cond_9_i_i_i_reg_1651 <= or_cond_9_i_i_i_fu_1103_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_11001 == 1'b0))) begin
        or_cond_i_i_i_162_reg_1660 <= or_cond_i_i_i_162_fu_1107_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == exitcond1_i_fu_1043_p2))) begin
        or_cond_i_i_i_reg_1560 <= or_cond_i_i_i_fu_1057_p2;
        tmp_8_i_i_i_reg_1525 <= tmp_8_i_i_i_fu_1052_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_11001 == 1'b0))) begin
        p_033_3_10_i_i_i_reg_468 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_10_i_i_i_reg_468;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14_11001 == 1'b0))) begin
        p_033_3_11_i_i_i_reg_479 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_11_i_i_i_reg_479;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_block_pp0_stage15_11001 == 1'b0))) begin
        p_033_3_12_i_i_i_reg_490 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_12_i_i_i_reg_490;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_11001 == 1'b0))) begin
        p_033_3_13_i_i_i_reg_501 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_13_i_i_i_reg_501;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_block_pp0_stage17_11001 == 1'b0))) begin
        p_033_3_14_i_i_i_reg_512 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_14_i_i_i_reg_512;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_block_pp0_stage18_11001 == 1'b0))) begin
        p_033_3_15_i_i_i_reg_523 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_15_i_i_i_reg_523;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_block_pp0_stage19_11001 == 1'b0))) begin
        p_033_3_16_i_i_i_reg_534 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_16_i_i_i_reg_534;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0))) begin
        p_033_3_17_i_i_i_reg_545 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_17_i_i_i_reg_545;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0))) begin
        p_033_3_18_i_i_i_reg_556 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_18_i_i_i_reg_556;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0))) begin
        p_033_3_19_i_i_i_reg_567 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_19_i_i_i_reg_567;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0))) begin
        p_033_3_1_i_i_i_reg_358 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_1_i_i_i_reg_358;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0))) begin
        p_033_3_20_i_i_i_reg_578 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_20_i_i_i_reg_578;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0))) begin
        p_033_3_21_i_i_i_reg_589 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_21_i_i_i_reg_589;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0))) begin
        p_033_3_22_i_i_i_reg_600 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_22_i_i_i_reg_600;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0))) begin
        p_033_3_23_i_i_i_reg_611 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_23_i_i_i_reg_611;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0))) begin
        p_033_3_24_i_i_i_reg_622 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_24_i_i_i_reg_622;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_11001 == 1'b0))) begin
        p_033_3_25_i_i_i_reg_633 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_25_i_i_i_reg_633;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0))) begin
        p_033_3_26_i_i_i_reg_644 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_26_i_i_i_reg_644;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_11001 == 1'b0))) begin
        p_033_3_27_i_i_i_reg_655 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_27_i_i_i_reg_655;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0))) begin
        p_033_3_2_i_i_i_reg_369 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_2_i_i_i_reg_369;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0))) begin
        p_033_3_3_i_i_i_reg_380 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_3_i_i_i_reg_380;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6_11001 == 1'b0))) begin
        p_033_3_4_i_i_i_reg_391 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_4_i_i_i_reg_391;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_11001 == 1'b0))) begin
        p_033_3_5_i_i_i_reg_402 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_5_i_i_i_reg_402;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_11001 == 1'b0))) begin
        p_033_3_6_i_i_i_reg_413 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_6_i_i_i_reg_413;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_11001 == 1'b0))) begin
        p_033_3_7_i_i_i_reg_424 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_7_i_i_i_reg_424;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_11001 == 1'b0))) begin
        p_033_3_8_i_i_i_reg_435 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_8_i_i_i_reg_435;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_11001 == 1'b0))) begin
        p_033_3_9_i_i_i_reg_446 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_9_i_i_i_reg_446;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_11001 == 1'b0))) begin
        p_033_3_i_i_i_163_reg_457 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_i_i_i_163_reg_457;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0))) begin
        p_033_3_i_i_i_reg_348 <= ap_phi_precharge_reg_pp0_iter0_p_033_3_i_i_i_reg_348;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        sum_i_reg_1853 <= sum_i_fu_1278_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_11001 == 1'b0))) begin
        x_1_reg_1569 <= x_1_fu_1065_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y_reg_1516 <= y_fu_1037_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        yoffset_reg_1883 <= yoffset_fu_1309_p2;
    end
end

always @ (*) begin
    if ((exitcond1_i_reg_1521 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_i_fu_1293_p2)) begin
        ap_condition_pp1_exit_iter0_state38 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state38 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond1_i_i_i_fu_1032_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1) & (1'b0 == ap_enable_reg_pp1_iter2))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond1_i_i_i_fu_1032_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_m_axi_aximm_V_AWREADY)) begin
        ap_sig_ioackin_m_axi_aximm_V_AWREADY = m_axi_aximm_V_AWREADY;
    end else begin
        ap_sig_ioackin_m_axi_aximm_V_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_m_axi_aximm_V_WREADY)) begin
        ap_sig_ioackin_m_axi_aximm_V_WREADY = m_axi_aximm_V_WREADY;
    end else begin
        ap_sig_ioackin_m_axi_aximm_V_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        aximm_V_blk_n_AW = m_axi_aximm_V_AWREADY;
    end else begin
        aximm_V_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        aximm_V_blk_n_B = m_axi_aximm_V_BVALID;
    end else begin
        aximm_V_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0 == 1'b0) & (1'd0 == ap_reg_pp1_iter1_exitcond_i_reg_1864))) begin
        aximm_V_blk_n_W = m_axi_aximm_V_WREADY;
    end else begin
        aximm_V_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        aximm_V_offset_blk_n = aximm_V_offset_empty_n;
    end else begin
        aximm_V_offset_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == aximm_V_offset_empty_n) | (1'b0 == width_empty_n) | (1'b0 == height_empty_n) | (1'b0 == stride_empty_n)))) begin
        aximm_V_offset_read = 1'b1;
    end else begin
        aximm_V_offset_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp1_stage0 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter0))) begin
        buff_V_address0 = tmp_12_i_i_i_fu_1304_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        buff_V_address0 = tmp_i_i_i_164_fu_1264_p1;
    end else begin
        buff_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp1_iter0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0)))) begin
        buff_V_ce0 = 1'b1;
    end else begin
        buff_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        buff_V_we0 = 1'b1;
    end else begin
        buff_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        height_blk_n = height_empty_n;
    end else begin
        height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == aximm_V_offset_empty_n) | (1'b0 == width_empty_n) | (1'b0 == height_empty_n) | (1'b0 == stride_empty_n)))) begin
        height_read = 1'b1;
    end else begin
        height_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) & (1'b0 == ap_reg_ioackin_m_axi_aximm_V_AWREADY))) begin
        m_axi_aximm_V_AWVALID = 1'b1;
    end else begin
        m_axi_aximm_V_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) & (m_axi_aximm_V_BVALID == 1'b1))) begin
        m_axi_aximm_V_BREADY = 1'b1;
    end else begin
        m_axi_aximm_V_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter2) & (1'd0 == ap_reg_pp1_iter1_exitcond_i_reg_1864) & (ap_block_pp1_stage0_01001 == 1'b0) & (1'b0 == ap_reg_ioackin_m_axi_aximm_V_WREADY))) begin
        m_axi_aximm_V_WVALID = 1'b1;
    end else begin
        m_axi_aximm_V_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((ap_condition_1382 == 1'b1)) begin
        if ((1'd0 == or_cond_30_i_i_i_reg_1839)) begin
            p_033_3_30_i_i_i_phi_fu_690_p4 = ap_phi_precharge_reg_pp0_iter1_p_033_3_29_i_i_i_reg_677;
        end else if ((1'd1 == or_cond_30_i_i_i_reg_1839)) begin
            p_033_3_30_i_i_i_phi_fu_690_p4 = stream_V_dout;
        end else begin
            p_033_3_30_i_i_i_phi_fu_690_p4 = ap_phi_precharge_reg_pp0_iter1_p_033_3_30_i_i_i_reg_687;
        end
    end else begin
        p_033_3_30_i_i_i_phi_fu_690_p4 = ap_phi_precharge_reg_pp0_iter1_p_033_3_30_i_i_i_reg_687;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1 == 1'b0) & (1'd0 == exitcond1_i_reg_1521) & (or_cond_i_i_i_reg_1560 == 1'd1)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2 == 1'b0) & (1'd1 == or_cond_1_i_i_i_reg_1579)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3 == 1'b0) & (1'd1 == or_cond_2_i_i_i_reg_1588)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4 == 1'b0) & (1'd1 == or_cond_3_i_i_i_reg_1597)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5 == 1'b0) & (1'd1 == or_cond_4_i_i_i_reg_1606)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6 == 1'b0) & (1'd1 == or_cond_5_i_i_i_reg_1615)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7 == 1'b0) & (1'd1 == or_cond_6_i_i_i_reg_1624)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8 == 1'b0) & (1'd1 == or_cond_7_i_i_i_reg_1633)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9 == 1'b0) & (1'd1 == or_cond_8_i_i_i_reg_1642)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10 == 1'b0) & (1'd1 == or_cond_9_i_i_i_reg_1651)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11 == 1'b0) & (1'd1 == or_cond_i_i_i_162_reg_1660)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12 == 1'b0) & (1'd1 == or_cond_10_i_i_i_reg_1669)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13 == 1'b0) & (1'd1 == or_cond_11_i_i_i_reg_1678)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14 == 1'b0) & (1'd1 == or_cond_12_i_i_i_reg_1687)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_block_pp0_stage15 == 1'b0) & (1'd1 == or_cond_13_i_i_i_reg_1696)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16 == 1'b0) & (1'd1 == or_cond_14_i_i_i_reg_1705)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_block_pp0_stage17 == 1'b0) & (1'd1 == or_cond_15_i_i_i_reg_1714)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_block_pp0_stage18 == 1'b0) & (1'd1 == or_cond_16_i_i_i_reg_1723)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_block_pp0_stage19 == 1'b0) & (1'd1 == or_cond_17_i_i_i_reg_1732)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20 == 1'b0) & (1'd1 == or_cond_18_i_i_i_reg_1741)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21 == 1'b0) & (1'd1 == or_cond_19_i_i_i_reg_1750)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22 == 1'b0) & (1'd1 == or_cond_20_i_i_i_reg_1759)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23 == 1'b0) & (1'd1 == or_cond_21_i_i_i_reg_1768)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24 == 1'b0) & (1'd1 == or_cond_22_i_i_i_reg_1777)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25 == 1'b0) & (1'd1 == or_cond_23_i_i_i_reg_1786)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26 == 1'b0) & (1'd1 == or_cond_24_i_i_i_reg_1795)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27 == 1'b0) & (1'd1 == or_cond_25_i_i_i_reg_1804)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28 == 1'b0) & (1'd1 == or_cond_26_i_i_i_reg_1813)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29 == 1'b0) & (1'd1 == or_cond_27_i_i_i_reg_1822)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30 == 1'b0) & (1'd1 == or_cond_28_i_i_i_reg_1831)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31 == 1'b0) & (1'd1 == or_cond_29_i_i_i_reg_1835)) | ((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (1'd1 == or_cond_30_i_i_i_reg_1839)))) begin
        stream_V_blk_n = stream_V_empty_n;
    end else begin
        stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_predicate_op141_read_state4) & (ap_block_pp0_stage1_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_predicate_op146_read_state5) & (ap_block_pp0_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_predicate_op151_read_state6) & (ap_block_pp0_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_predicate_op156_read_state7) & (ap_block_pp0_stage4_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_predicate_op161_read_state8) & (ap_block_pp0_stage5_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_predicate_op166_read_state9) & (ap_block_pp0_stage6_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_predicate_op171_read_state10) & (ap_block_pp0_stage7_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b1 == ap_predicate_op176_read_state11) & (ap_block_pp0_stage8_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b1 == ap_predicate_op181_read_state12) & (ap_block_pp0_stage9_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b1 == ap_predicate_op186_read_state13) & (ap_block_pp0_stage10_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b1 == ap_predicate_op191_read_state14) & (ap_block_pp0_stage11_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b1 == ap_predicate_op196_read_state15) & (ap_block_pp0_stage12_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b1 == ap_predicate_op201_read_state16) & (ap_block_pp0_stage13_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b1 == ap_predicate_op206_read_state17) & (ap_block_pp0_stage14_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b1 == ap_predicate_op211_read_state18) & (ap_block_pp0_stage15_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b1 == ap_predicate_op216_read_state19) & (ap_block_pp0_stage16_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b1 == ap_predicate_op221_read_state20) & (ap_block_pp0_stage17_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b1 == ap_predicate_op226_read_state21) & (ap_block_pp0_stage18_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b1 == ap_predicate_op231_read_state22) & (ap_block_pp0_stage19_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b1 == ap_predicate_op236_read_state23) & (ap_block_pp0_stage20_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b1 == ap_predicate_op241_read_state24) & (ap_block_pp0_stage21_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b1 == ap_predicate_op246_read_state25) & (ap_block_pp0_stage22_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b1 == ap_predicate_op251_read_state26) & (ap_block_pp0_stage23_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b1 == ap_predicate_op256_read_state27) & (ap_block_pp0_stage24_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b1 == ap_predicate_op261_read_state28) & (ap_block_pp0_stage25_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b1 == ap_predicate_op266_read_state29) & (ap_block_pp0_stage26_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b1 == ap_predicate_op271_read_state30) & (ap_block_pp0_stage27_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b1 == ap_predicate_op276_read_state31) & (ap_block_pp0_stage28_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b1 == ap_predicate_op281_read_state32) & (ap_block_pp0_stage29_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b1 == ap_predicate_op288_read_state33) & (ap_block_pp0_stage30_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b1 == ap_predicate_op292_read_state34) & (ap_block_pp0_stage31_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_predicate_op296_read_state35) & (ap_block_pp0_stage0_11001 == 1'b0)))) begin
        stream_V_read = 1'b1;
    end else begin
        stream_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        stride_blk_n = stride_empty_n;
    end else begin
        stride_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == aximm_V_offset_empty_n) | (1'b0 == width_empty_n) | (1'b0 == height_empty_n) | (1'b0 == stride_empty_n)))) begin
        stride_read = 1'b1;
    end else begin
        stride_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        width_blk_n = width_empty_n;
    end else begin
        width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == aximm_V_offset_empty_n) | (1'b0 == width_empty_n) | (1'b0 == height_empty_n) | (1'b0 == stride_empty_n)))) begin
        width_read = 1'b1;
    end else begin
        width_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        x_i_i_i_phi_fu_340_p4 = x_1_reg_1569;
    end else begin
        x_i_i_i_phi_fu_340_p4 = x_i_i_i_reg_336;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == aximm_V_offset_empty_n) | (1'b0 == width_empty_n) | (1'b0 == height_empty_n) | (1'b0 == stride_empty_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond1_i_i_i_fu_1032_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_block_pp0_stage1_subdone == 1'b0) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_subdone == 1'b0) & (exitcond1_i_reg_1521 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage1_subdone == 1'b0) & (exitcond1_i_reg_1521 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((ap_block_pp0_stage2_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((ap_block_pp0_stage3_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((ap_block_pp0_stage4_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((ap_block_pp0_stage5_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((ap_block_pp0_stage6_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((ap_block_pp0_stage7_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((ap_block_pp0_stage8_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((ap_block_pp0_stage9_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((ap_block_pp0_stage10_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((ap_block_pp0_stage11_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((ap_block_pp0_stage12_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((ap_block_pp0_stage13_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((ap_block_pp0_stage14_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((ap_block_pp0_stage15_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((ap_block_pp0_stage16_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((ap_block_pp0_stage17_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((ap_block_pp0_stage18_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((ap_block_pp0_stage19_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((ap_block_pp0_stage20_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((ap_block_pp0_stage21_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((ap_block_pp0_stage22_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((ap_block_pp0_stage23_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((ap_block_pp0_stage24_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((ap_block_pp0_stage25_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((ap_block_pp0_stage26_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((ap_block_pp0_stage27_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((ap_block_pp0_stage28_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((ap_block_pp0_stage29_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((ap_block_pp0_stage30_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((ap_block_pp0_stage31_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (ap_sig_ioackin_m_axi_aximm_V_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_subdone == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_subdone == 1'b0) & (1'd1 == exitcond_i_fu_1293_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp1_iter2) & (ap_block_pp1_stage0_subdone == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_subdone == 1'b0) & (1'd1 == exitcond_i_fu_1293_p2) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (m_axi_aximm_V_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd41];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op296_read_state35));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op296_read_state35));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op186_read_state13));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op186_read_state13));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op191_read_state14));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op191_read_state14));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op196_read_state15));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op196_read_state15));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op201_read_state16));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op201_read_state16));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op206_read_state17));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op206_read_state17));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op211_read_state18));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op211_read_state18));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op216_read_state19));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op216_read_state19));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op221_read_state20));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op221_read_state20));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op226_read_state21));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op226_read_state21));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op231_read_state22));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op231_read_state22));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op141_read_state4));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op141_read_state4));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op236_read_state23));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op236_read_state23));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op241_read_state24));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op241_read_state24));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op246_read_state25));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op246_read_state25));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op251_read_state26));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op251_read_state26));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op256_read_state27));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op256_read_state27));
end

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage25_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op261_read_state28));
end

always @ (*) begin
    ap_block_pp0_stage25_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op261_read_state28));
end

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage26_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op266_read_state29));
end

always @ (*) begin
    ap_block_pp0_stage26_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op266_read_state29));
end

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage27_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op271_read_state30));
end

always @ (*) begin
    ap_block_pp0_stage27_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op271_read_state30));
end

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage28_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op276_read_state31));
end

always @ (*) begin
    ap_block_pp0_stage28_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op276_read_state31));
end

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage29_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op281_read_state32));
end

always @ (*) begin
    ap_block_pp0_stage29_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op281_read_state32));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op146_read_state5));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op146_read_state5));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage30_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op288_read_state33));
end

always @ (*) begin
    ap_block_pp0_stage30_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op288_read_state33));
end

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage31_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op292_read_state34));
end

always @ (*) begin
    ap_block_pp0_stage31_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op292_read_state34));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op151_read_state6));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op151_read_state6));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op156_read_state7));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op156_read_state7));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op161_read_state8));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op161_read_state8));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op166_read_state9));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op166_read_state9));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op171_read_state10));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op171_read_state10));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op176_read_state11));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op176_read_state11));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op181_read_state12));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op181_read_state12));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((1'b1 == ap_enable_reg_pp1_iter2) & (1'b1 == ap_block_state40_io));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((1'b1 == ap_enable_reg_pp1_iter2) & (1'b1 == ap_block_state40_io));
end

always @ (*) begin
    ap_block_state1 = ((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == aximm_V_offset_empty_n) | (1'b0 == width_empty_n) | (1'b0 == height_empty_n) | (1'b0 == stride_empty_n));
end

always @ (*) begin
    ap_block_state10_pp0_stage7_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op171_read_state10));
end

always @ (*) begin
    ap_block_state11_pp0_stage8_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op176_read_state11));
end

always @ (*) begin
    ap_block_state12_pp0_stage9_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op181_read_state12));
end

always @ (*) begin
    ap_block_state13_pp0_stage10_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op186_read_state13));
end

always @ (*) begin
    ap_block_state14_pp0_stage11_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op191_read_state14));
end

always @ (*) begin
    ap_block_state15_pp0_stage12_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op196_read_state15));
end

always @ (*) begin
    ap_block_state16_pp0_stage13_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op201_read_state16));
end

always @ (*) begin
    ap_block_state17_pp0_stage14_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op206_read_state17));
end

always @ (*) begin
    ap_block_state18_pp0_stage15_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op211_read_state18));
end

always @ (*) begin
    ap_block_state19_pp0_stage16_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op216_read_state19));
end

always @ (*) begin
    ap_block_state20_pp0_stage17_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op221_read_state20));
end

always @ (*) begin
    ap_block_state21_pp0_stage18_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op226_read_state21));
end

always @ (*) begin
    ap_block_state22_pp0_stage19_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op231_read_state22));
end

always @ (*) begin
    ap_block_state23_pp0_stage20_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op236_read_state23));
end

always @ (*) begin
    ap_block_state24_pp0_stage21_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op241_read_state24));
end

always @ (*) begin
    ap_block_state25_pp0_stage22_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op246_read_state25));
end

always @ (*) begin
    ap_block_state26_pp0_stage23_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op251_read_state26));
end

always @ (*) begin
    ap_block_state27_pp0_stage24_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op256_read_state27));
end

always @ (*) begin
    ap_block_state28_pp0_stage25_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op261_read_state28));
end

always @ (*) begin
    ap_block_state29_pp0_stage26_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op266_read_state29));
end

always @ (*) begin
    ap_block_state30_pp0_stage27_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op271_read_state30));
end

always @ (*) begin
    ap_block_state31_pp0_stage28_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op276_read_state31));
end

always @ (*) begin
    ap_block_state32_pp0_stage29_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op281_read_state32));
end

always @ (*) begin
    ap_block_state33_pp0_stage30_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op288_read_state33));
end

always @ (*) begin
    ap_block_state34_pp0_stage31_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op292_read_state34));
end

always @ (*) begin
    ap_block_state35_pp0_stage0_iter1 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op296_read_state35));
end

assign ap_block_state38_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state40_io = ((1'd0 == ap_reg_pp1_iter1_exitcond_i_reg_1864) & (1'b0 == ap_sig_ioackin_m_axi_aximm_V_WREADY));
end

assign ap_block_state40_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage1_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op141_read_state4));
end

always @ (*) begin
    ap_block_state5_pp0_stage2_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op146_read_state5));
end

always @ (*) begin
    ap_block_state6_pp0_stage3_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op151_read_state6));
end

always @ (*) begin
    ap_block_state7_pp0_stage4_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op156_read_state7));
end

always @ (*) begin
    ap_block_state8_pp0_stage5_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op161_read_state8));
end

always @ (*) begin
    ap_block_state9_pp0_stage6_iter0 = ((1'b0 == stream_V_empty_n) & (1'b1 == ap_predicate_op166_read_state9));
end

always @ (*) begin
    ap_condition_1273 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_block_pp0_stage31_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_1382 = ((1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0));
end

always @ (*) begin
    ap_condition_2255 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_block_pp0_stage12_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2259 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_block_pp0_stage13_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2263 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_block_pp0_stage14_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2267 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_block_pp0_stage15_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2271 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_block_pp0_stage16_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2275 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_block_pp0_stage17_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2279 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_block_pp0_stage18_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2283 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_block_pp0_stage19_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2287 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_block_pp0_stage20_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2291 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_block_pp0_stage21_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2295 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_block_pp0_stage2_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2299 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_block_pp0_stage22_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2303 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_block_pp0_stage23_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2307 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_block_pp0_stage24_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2311 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_block_pp0_stage25_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2315 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_block_pp0_stage26_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2319 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_block_pp0_stage27_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2323 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_block_pp0_stage28_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2327 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_block_pp0_stage29_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2331 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_block_pp0_stage30_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2335 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_block_pp0_stage3_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2339 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_block_pp0_stage4_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2343 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_block_pp0_stage5_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2347 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_block_pp0_stage6_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2351 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_block_pp0_stage7_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2355 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_block_pp0_stage8_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2359 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_block_pp0_stage9_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2363 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_block_pp0_stage10_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2367 = ((1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_block_pp0_stage11_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_2371 = ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == exitcond1_i_reg_1521) & (ap_block_pp0_stage1_11001 == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_ext_blocking_cur_n = (aximm_V_blk_n_AW & aximm_V_blk_n_W & aximm_V_blk_n_B);

assign ap_ext_blocking_n = (ap_ext_blocking_cur_n & 1'b1);

assign ap_int_blocking_cur_n = (stream_V_blk_n & width_blk_n & height_blk_n & stride_blk_n & aximm_V_offset_blk_n);

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_phi_precharge_reg_pp0_iter0_p_033_3_29_i_i_i_reg_677 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_p_033_3_30_i_i_i_reg_687 = 'bx;

always @ (*) begin
    ap_predicate_op141_read_state4 = ((1'd0 == exitcond1_i_reg_1521) & (or_cond_i_i_i_reg_1560 == 1'd1));
end

always @ (*) begin
    ap_predicate_op146_read_state5 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_1_i_i_i_reg_1579));
end

always @ (*) begin
    ap_predicate_op151_read_state6 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_2_i_i_i_reg_1588));
end

always @ (*) begin
    ap_predicate_op156_read_state7 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_3_i_i_i_reg_1597));
end

always @ (*) begin
    ap_predicate_op161_read_state8 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_4_i_i_i_reg_1606));
end

always @ (*) begin
    ap_predicate_op166_read_state9 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_5_i_i_i_reg_1615));
end

always @ (*) begin
    ap_predicate_op171_read_state10 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_6_i_i_i_reg_1624));
end

always @ (*) begin
    ap_predicate_op176_read_state11 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_7_i_i_i_reg_1633));
end

always @ (*) begin
    ap_predicate_op181_read_state12 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_8_i_i_i_reg_1642));
end

always @ (*) begin
    ap_predicate_op186_read_state13 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_9_i_i_i_reg_1651));
end

always @ (*) begin
    ap_predicate_op191_read_state14 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_i_i_i_162_reg_1660));
end

always @ (*) begin
    ap_predicate_op196_read_state15 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_10_i_i_i_reg_1669));
end

always @ (*) begin
    ap_predicate_op201_read_state16 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_11_i_i_i_reg_1678));
end

always @ (*) begin
    ap_predicate_op206_read_state17 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_12_i_i_i_reg_1687));
end

always @ (*) begin
    ap_predicate_op211_read_state18 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_13_i_i_i_reg_1696));
end

always @ (*) begin
    ap_predicate_op216_read_state19 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_14_i_i_i_reg_1705));
end

always @ (*) begin
    ap_predicate_op221_read_state20 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_15_i_i_i_reg_1714));
end

always @ (*) begin
    ap_predicate_op226_read_state21 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_16_i_i_i_reg_1723));
end

always @ (*) begin
    ap_predicate_op231_read_state22 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_17_i_i_i_reg_1732));
end

always @ (*) begin
    ap_predicate_op236_read_state23 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_18_i_i_i_reg_1741));
end

always @ (*) begin
    ap_predicate_op241_read_state24 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_19_i_i_i_reg_1750));
end

always @ (*) begin
    ap_predicate_op246_read_state25 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_20_i_i_i_reg_1759));
end

always @ (*) begin
    ap_predicate_op251_read_state26 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_21_i_i_i_reg_1768));
end

always @ (*) begin
    ap_predicate_op256_read_state27 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_22_i_i_i_reg_1777));
end

always @ (*) begin
    ap_predicate_op261_read_state28 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_23_i_i_i_reg_1786));
end

always @ (*) begin
    ap_predicate_op266_read_state29 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_24_i_i_i_reg_1795));
end

always @ (*) begin
    ap_predicate_op271_read_state30 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_25_i_i_i_reg_1804));
end

always @ (*) begin
    ap_predicate_op276_read_state31 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_26_i_i_i_reg_1813));
end

always @ (*) begin
    ap_predicate_op281_read_state32 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_27_i_i_i_reg_1822));
end

always @ (*) begin
    ap_predicate_op288_read_state33 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_28_i_i_i_reg_1831));
end

always @ (*) begin
    ap_predicate_op292_read_state34 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_29_i_i_i_reg_1835));
end

always @ (*) begin
    ap_predicate_op296_read_state35 = ((1'd0 == exitcond1_i_reg_1521) & (1'd1 == or_cond_30_i_i_i_reg_1839));
end

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign buff_V_d0 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{p_033_3_30_i_i_i_phi_fu_690_p4}, {ap_phi_precharge_reg_pp0_iter1_p_033_3_29_i_i_i_reg_677}}, {p_033_3_28_i_i_i_reg_666}}, {p_033_3_27_i_i_i_reg_655}}, {p_033_3_26_i_i_i_reg_644}}, {p_033_3_25_i_i_i_reg_633}}, {p_033_3_24_i_i_i_reg_622}}, {p_033_3_23_i_i_i_reg_611}}, {p_033_3_22_i_i_i_reg_600}}, {p_033_3_21_i_i_i_reg_589}}, {p_033_3_20_i_i_i_reg_578}}, {p_033_3_19_i_i_i_reg_567}}, {p_033_3_18_i_i_i_reg_556}}, {p_033_3_17_i_i_i_reg_545}}, {p_033_3_16_i_i_i_reg_534}}, {p_033_3_15_i_i_i_reg_523}}, {p_033_3_14_i_i_i_reg_512}}, {p_033_3_13_i_i_i_reg_501}}, {p_033_3_12_i_i_i_reg_490}}, {p_033_3_11_i_i_i_reg_479}}, {p_033_3_10_i_i_i_reg_468}}, {p_033_3_i_i_i_163_reg_457}}, {p_033_3_9_i_i_i_reg_446}}, {p_033_3_8_i_i_i_reg_435}}, {p_033_3_7_i_i_i_reg_424}}, {p_033_3_6_i_i_i_reg_413}}, {p_033_3_5_i_i_i_reg_402}}, {p_033_3_4_i_i_i_reg_391}}, {p_033_3_3_i_i_i_reg_380}}, {p_033_3_2_i_i_i_reg_369}}, {p_033_3_1_i_i_i_reg_358}}, {p_033_3_i_i_i_reg_348}};

assign exitcond1_i_fu_1043_p2 = ((x_i_i_i_phi_fu_340_p4 == loopWidth_cast6_i_i_i_reg_1331) ? 1'b1 : 1'b0);

assign exitcond1_i_i_i_fu_1032_p2 = ((y_i_i_i_reg_325 == tmp_3_reg_1326) ? 1'b1 : 1'b0);

assign exitcond_i_fu_1293_p2 = ((x1_i_i_i_reg_698 == loopWidth_cast6_i_i_i_reg_1331) ? 1'b1 : 1'b0);

assign icmp3_fu_835_p2 = ((tmp_6_fu_825_p4 != 4'd0) ? 1'b1 : 1'b0);

assign icmp6_fu_869_p2 = ((tmp_7_fu_859_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp9_fu_927_p2 = ((tmp_8_fu_917_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_fu_813_p2 = ((tmp_5_fu_803_p4 != 5'd0) ? 1'b1 : 1'b0);

assign loopWidth_cast6_i_i_i_fu_745_p4 = {{tmp_1_i_i_i_fu_739_p2[16:5]}};

assign m_axi_aximm_V_ARADDR = 64'd0;

assign m_axi_aximm_V_ARBURST = 2'd0;

assign m_axi_aximm_V_ARCACHE = 4'd0;

assign m_axi_aximm_V_ARID = 1'd0;

assign m_axi_aximm_V_ARLEN = 32'd0;

assign m_axi_aximm_V_ARLOCK = 2'd0;

assign m_axi_aximm_V_ARPROT = 3'd0;

assign m_axi_aximm_V_ARQOS = 4'd0;

assign m_axi_aximm_V_ARREGION = 4'd0;

assign m_axi_aximm_V_ARSIZE = 3'd0;

assign m_axi_aximm_V_ARUSER = 1'd0;

assign m_axi_aximm_V_ARVALID = 1'b0;

assign m_axi_aximm_V_AWADDR = sum_cast_i_fu_1283_p1;

assign m_axi_aximm_V_AWBURST = 2'd0;

assign m_axi_aximm_V_AWCACHE = 4'd0;

assign m_axi_aximm_V_AWID = 1'd0;

assign m_axi_aximm_V_AWLEN = tmp_4_i_reg_1507;

assign m_axi_aximm_V_AWLOCK = 2'd0;

assign m_axi_aximm_V_AWPROT = 3'd0;

assign m_axi_aximm_V_AWQOS = 4'd0;

assign m_axi_aximm_V_AWREGION = 4'd0;

assign m_axi_aximm_V_AWSIZE = 3'd0;

assign m_axi_aximm_V_AWUSER = 1'd0;

assign m_axi_aximm_V_RREADY = 1'b0;

assign m_axi_aximm_V_WDATA = buff_V_load_reg_1878;

assign m_axi_aximm_V_WID = 1'd0;

assign m_axi_aximm_V_WLAST = 1'b0;

assign m_axi_aximm_V_WSTRB = 32'd4294967295;

assign m_axi_aximm_V_WUSER = 1'd0;

assign or_cond_10_i_i_i_fu_1111_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_10_i_i_i_reg_1407);

assign or_cond_11_i_i_i_fu_1115_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_11_i_i_i_reg_1412);

assign or_cond_12_i_i_i_fu_1119_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_12_i_i_i_reg_1417);

assign or_cond_13_i_i_i_fu_1123_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_13_i_i_i_reg_1422);

assign or_cond_14_i_i_i_fu_1127_p2 = (tmp_8_i_i_i_reg_1525 | icmp9_reg_1427);

assign or_cond_15_i_i_i_fu_1131_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_15_i_i_i_reg_1432);

assign or_cond_16_i_i_i_fu_1135_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_16_i_i_i_reg_1437);

assign or_cond_17_i_i_i_fu_1139_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_17_i_i_i_reg_1442);

assign or_cond_18_i_i_i_fu_1143_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_18_i_i_i_reg_1447);

assign or_cond_19_i_i_i_fu_1147_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_19_i_i_i_reg_1452);

assign or_cond_1_i_i_i_fu_1071_p2 = (tmp_8_i_i_i_reg_1525 | icmp_reg_1357);

assign or_cond_20_i_i_i_fu_1151_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_20_i_i_i_reg_1457);

assign or_cond_21_i_i_i_fu_1155_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_21_i_i_i_reg_1462);

assign or_cond_22_i_i_i_fu_1159_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_22_i_i_i_reg_1467);

assign or_cond_23_i_i_i_fu_1163_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_23_i_i_i_reg_1472);

assign or_cond_24_i_i_i_fu_1167_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_24_i_i_i_reg_1477);

assign or_cond_25_i_i_i_fu_1171_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_25_i_i_i_reg_1482);

assign or_cond_26_i_i_i_fu_1175_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_26_i_i_i_reg_1487);

assign or_cond_27_i_i_i_fu_1179_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_27_i_i_i_reg_1492);

assign or_cond_28_i_i_i_fu_1183_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_28_i_i_i_reg_1497);

assign or_cond_29_i_i_i_fu_1187_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_29_i_i_i_reg_1502);

assign or_cond_2_i_i_i_fu_1075_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_2_i_i_i_reg_1362);

assign or_cond_30_i_i_i_fu_1191_p2 = (tmp_8_i_i_i_reg_1525 | tmp_i_i_i_reg_1337);

assign or_cond_3_i_i_i_fu_1079_p2 = (tmp_8_i_i_i_reg_1525 | icmp3_reg_1367);

assign or_cond_4_i_i_i_fu_1083_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_4_i_i_i_reg_1372);

assign or_cond_5_i_i_i_fu_1087_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_5_i_i_i_reg_1377);

assign or_cond_6_i_i_i_fu_1091_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_6_i_i_i_reg_1382);

assign or_cond_7_i_i_i_fu_1095_p2 = (tmp_8_i_i_i_reg_1525 | icmp6_reg_1387);

assign or_cond_8_i_i_i_fu_1099_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_8_i_i_i_reg_1392);

assign or_cond_9_i_i_i_fu_1103_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_9_i_i_i_reg_1397);

assign or_cond_i_i_i_162_fu_1107_p2 = (tmp_8_i_i_i_reg_1525 | tmp_2_i_i_i_reg_1402);

assign or_cond_i_i_i_fu_1057_p2 = (tmp_8_i_i_i_fu_1052_p2 | tmp_21_i_i_i_reg_1352);

assign remainPix_1_fu_765_p3 = ((tmp_i_i_i_fu_759_p2[0:0] === 1'b1) ? 6'd32 : remainPix_cast_i_i_i_fu_755_p1);

assign remainPix_cast_i_i_i_fu_755_p1 = remainPix_fu_735_p1;

assign remainPix_fu_735_p1 = width_dout[4:0];

assign sum_cast_i_fu_1283_p1 = sum_i_reg_1853;

assign sum_i_fu_1278_p2 = (tmp_1_cast_i_reg_1321 + tmp_3_cast_i_fu_1274_p1);

assign tmp_12_i_i_i_fu_1304_p1 = x1_i_i_i_reg_698;

assign tmp_1_cast_i_fu_719_p1 = tmp_1_fu_709_p4;

assign tmp_1_fu_709_p4 = {{aximm_V_offset_dout[63:5]}};

assign tmp_1_i_i_i_fu_739_p2 = (17'd31 + widthInPix_cast7_i_i_i_fu_731_p1);

assign tmp_21_i_i_i_fu_797_p2 = ((remainPix_1_fu_765_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_2_10_i_i_i_fu_893_p2 = ((remainPix_1_fu_765_p3 > 6'd11) ? 1'b1 : 1'b0);

assign tmp_2_11_i_i_i_fu_899_p2 = ((remainPix_1_fu_765_p3 > 6'd12) ? 1'b1 : 1'b0);

assign tmp_2_12_i_i_i_fu_905_p2 = ((remainPix_1_fu_765_p3 > 6'd13) ? 1'b1 : 1'b0);

assign tmp_2_13_i_i_i_fu_911_p2 = ((remainPix_1_fu_765_p3 > 6'd14) ? 1'b1 : 1'b0);

assign tmp_2_15_i_i_i_fu_933_p2 = ((remainPix_1_fu_765_p3 > 6'd16) ? 1'b1 : 1'b0);

assign tmp_2_16_i_i_i_fu_939_p2 = ((remainPix_1_fu_765_p3 > 6'd17) ? 1'b1 : 1'b0);

assign tmp_2_17_i_i_i_fu_945_p2 = ((remainPix_1_fu_765_p3 > 6'd18) ? 1'b1 : 1'b0);

assign tmp_2_18_i_i_i_fu_951_p2 = ((remainPix_1_fu_765_p3 > 6'd19) ? 1'b1 : 1'b0);

assign tmp_2_19_i_i_i_fu_957_p2 = ((remainPix_1_fu_765_p3 > 6'd20) ? 1'b1 : 1'b0);

assign tmp_2_20_i_i_i_fu_963_p2 = ((remainPix_1_fu_765_p3 > 6'd21) ? 1'b1 : 1'b0);

assign tmp_2_21_i_i_i_fu_969_p2 = ((remainPix_1_fu_765_p3 > 6'd22) ? 1'b1 : 1'b0);

assign tmp_2_22_i_i_i_fu_975_p2 = ((remainPix_1_fu_765_p3 > 6'd23) ? 1'b1 : 1'b0);

assign tmp_2_23_i_i_i_fu_981_p2 = ((remainPix_1_fu_765_p3 > 6'd24) ? 1'b1 : 1'b0);

assign tmp_2_24_i_i_i_fu_987_p2 = ((remainPix_1_fu_765_p3 > 6'd25) ? 1'b1 : 1'b0);

assign tmp_2_25_i_i_i_fu_993_p2 = ((remainPix_1_fu_765_p3 > 6'd26) ? 1'b1 : 1'b0);

assign tmp_2_26_i_i_i_fu_999_p2 = ((remainPix_1_fu_765_p3 > 6'd27) ? 1'b1 : 1'b0);

assign tmp_2_27_i_i_i_fu_1005_p2 = ((remainPix_1_fu_765_p3 > 6'd28) ? 1'b1 : 1'b0);

assign tmp_2_28_i_i_i_fu_1011_p2 = ((remainPix_1_fu_765_p3 > 6'd29) ? 1'b1 : 1'b0);

assign tmp_2_29_i_i_i_fu_1017_p2 = ((remainPix_1_fu_765_p3 > 6'd30) ? 1'b1 : 1'b0);

assign tmp_2_2_i_i_i_fu_819_p2 = ((remainPix_1_fu_765_p3 > 6'd2) ? 1'b1 : 1'b0);

assign tmp_2_4_i_i_i_fu_841_p2 = ((remainPix_1_fu_765_p3 > 6'd4) ? 1'b1 : 1'b0);

assign tmp_2_5_i_i_i_fu_847_p2 = ((remainPix_1_fu_765_p3 > 6'd5) ? 1'b1 : 1'b0);

assign tmp_2_6_i_i_i_fu_853_p2 = ((remainPix_1_fu_765_p3 > 6'd6) ? 1'b1 : 1'b0);

assign tmp_2_8_i_i_i_fu_875_p2 = ((remainPix_1_fu_765_p3 > 6'd8) ? 1'b1 : 1'b0);

assign tmp_2_9_i_i_i_fu_881_p2 = ((remainPix_1_fu_765_p3 > 6'd9) ? 1'b1 : 1'b0);

assign tmp_2_fu_723_p1 = width_dout[15:0];

assign tmp_2_i_i_i_fu_887_p2 = ((remainPix_1_fu_765_p3 > 6'd10) ? 1'b1 : 1'b0);

assign tmp_3_cast_i_fu_1274_p1 = yoffset_i_i_i_reg_313;

assign tmp_3_fu_727_p1 = height_dout[15:0];

assign tmp_4_cast_i_i_i_fu_779_p1 = $signed(tmp_4_i_i_i_fu_773_p2);

assign tmp_4_i_fu_1023_p1 = loopWidth_cast6_i_i_i_fu_745_p4;

assign tmp_4_i_i_i_fu_773_p2 = ($signed(12'd4095) + $signed(loopWidth_cast6_i_i_i_fu_745_p4));

assign tmp_5_fu_803_p4 = {{remainPix_1_fu_765_p3[5:1]}};

assign tmp_6_cast_i_i_i_fu_793_p1 = tmp_6_i_i_i_fu_783_p4;

assign tmp_6_fu_825_p4 = {{remainPix_1_fu_765_p3[5:2]}};

assign tmp_6_i_i_i_fu_783_p4 = {{stride_dout[15:5]}};

assign tmp_7_fu_859_p4 = {{remainPix_1_fu_765_p3[5:3]}};

assign tmp_8_fu_917_p4 = {{remainPix_1_fu_765_p3[5:4]}};

assign tmp_8_i_i_i_fu_1052_p2 = (($signed(x_cast_i_i_i_fu_1048_p1) < $signed(tmp_4_cast_i_i_i_reg_1342)) ? 1'b1 : 1'b0);

assign tmp_i_i_i_164_fu_1264_p1 = x_i_i_i_reg_336;

assign tmp_i_i_i_fu_759_p2 = ((remainPix_fu_735_p1 == 5'd0) ? 1'b1 : 1'b0);

assign widthInPix_cast7_i_i_i_fu_731_p1 = tmp_2_fu_723_p1;

assign x_1_fu_1065_p2 = (x_i_i_i_reg_336 + 12'd1);

assign x_cast_i_i_i_fu_1048_p1 = x_i_i_i_phi_fu_340_p4;

assign x_fu_1298_p2 = (x1_i_i_i_reg_698 + 12'd1);

assign y_fu_1037_p2 = (y_i_i_i_reg_325 + 16'd1);

assign yoffset_fu_1309_p2 = (tmp_6_cast_i_i_i_reg_1347 + yoffset_i_i_i_reg_313);

always @ (posedge ap_clk) begin
    tmp_1_cast_i_reg_1321[59] <= 1'b0;
    tmp_6_cast_i_i_i_reg_1347[26:11] <= 16'b0000000000000000;
    tmp_4_i_reg_1507[31:12] <= 20'b00000000000000000000;
end

endmodule //PixelStream2AXIBursts
