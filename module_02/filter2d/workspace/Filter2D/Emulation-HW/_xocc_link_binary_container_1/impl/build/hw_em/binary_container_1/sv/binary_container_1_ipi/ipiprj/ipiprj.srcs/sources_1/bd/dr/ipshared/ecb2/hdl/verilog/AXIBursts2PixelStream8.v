// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AXIBursts2PixelStream8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_axi_axi_V_AWVALID,
        m_axi_axi_V_AWREADY,
        m_axi_axi_V_AWADDR,
        m_axi_axi_V_AWID,
        m_axi_axi_V_AWLEN,
        m_axi_axi_V_AWSIZE,
        m_axi_axi_V_AWBURST,
        m_axi_axi_V_AWLOCK,
        m_axi_axi_V_AWCACHE,
        m_axi_axi_V_AWPROT,
        m_axi_axi_V_AWQOS,
        m_axi_axi_V_AWREGION,
        m_axi_axi_V_AWUSER,
        m_axi_axi_V_WVALID,
        m_axi_axi_V_WREADY,
        m_axi_axi_V_WDATA,
        m_axi_axi_V_WSTRB,
        m_axi_axi_V_WLAST,
        m_axi_axi_V_WID,
        m_axi_axi_V_WUSER,
        m_axi_axi_V_ARVALID,
        m_axi_axi_V_ARREADY,
        m_axi_axi_V_ARADDR,
        m_axi_axi_V_ARID,
        m_axi_axi_V_ARLEN,
        m_axi_axi_V_ARSIZE,
        m_axi_axi_V_ARBURST,
        m_axi_axi_V_ARLOCK,
        m_axi_axi_V_ARCACHE,
        m_axi_axi_V_ARPROT,
        m_axi_axi_V_ARQOS,
        m_axi_axi_V_ARREGION,
        m_axi_axi_V_ARUSER,
        m_axi_axi_V_RVALID,
        m_axi_axi_V_RREADY,
        m_axi_axi_V_RDATA,
        m_axi_axi_V_RLAST,
        m_axi_axi_V_RID,
        m_axi_axi_V_RUSER,
        m_axi_axi_V_RRESP,
        m_axi_axi_V_BVALID,
        m_axi_axi_V_BREADY,
        m_axi_axi_V_BRESP,
        m_axi_axi_V_BID,
        m_axi_axi_V_BUSER,
        axi_V_offset,
        width,
        height,
        stride,
        stream_V_din,
        stream_V_full_n,
        stream_V_write,
        width_out_din,
        width_out_full_n,
        width_out_write,
        height_out_din,
        height_out_full_n,
        height_out_write,
        stride_out_din,
        stride_out_full_n,
        stride_out_write,
        coeffs,
        dst_V,
        coeffs_out_din,
        coeffs_out_full_n,
        coeffs_out_write,
        dst_V_out_din,
        dst_V_out_full_n,
        dst_V_out_write,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_state1 = 44'd1;
parameter    ap_ST_fsm_state2 = 44'd2;
parameter    ap_ST_fsm_state3 = 44'd4;
parameter    ap_ST_fsm_state4 = 44'd8;
parameter    ap_ST_fsm_state5 = 44'd16;
parameter    ap_ST_fsm_state6 = 44'd32;
parameter    ap_ST_fsm_state7 = 44'd64;
parameter    ap_ST_fsm_state8 = 44'd128;
parameter    ap_ST_fsm_state9 = 44'd256;
parameter    ap_ST_fsm_pp0_stage0 = 44'd512;
parameter    ap_ST_fsm_state13 = 44'd1024;
parameter    ap_ST_fsm_pp1_stage0 = 44'd2048;
parameter    ap_ST_fsm_pp1_stage1 = 44'd4096;
parameter    ap_ST_fsm_pp1_stage2 = 44'd8192;
parameter    ap_ST_fsm_pp1_stage3 = 44'd16384;
parameter    ap_ST_fsm_pp1_stage4 = 44'd32768;
parameter    ap_ST_fsm_pp1_stage5 = 44'd65536;
parameter    ap_ST_fsm_pp1_stage6 = 44'd131072;
parameter    ap_ST_fsm_pp1_stage7 = 44'd262144;
parameter    ap_ST_fsm_pp1_stage8 = 44'd524288;
parameter    ap_ST_fsm_pp1_stage9 = 44'd1048576;
parameter    ap_ST_fsm_pp1_stage10 = 44'd2097152;
parameter    ap_ST_fsm_pp1_stage11 = 44'd4194304;
parameter    ap_ST_fsm_pp1_stage12 = 44'd8388608;
parameter    ap_ST_fsm_pp1_stage13 = 44'd16777216;
parameter    ap_ST_fsm_pp1_stage14 = 44'd33554432;
parameter    ap_ST_fsm_pp1_stage15 = 44'd67108864;
parameter    ap_ST_fsm_pp1_stage16 = 44'd134217728;
parameter    ap_ST_fsm_pp1_stage17 = 44'd268435456;
parameter    ap_ST_fsm_pp1_stage18 = 44'd536870912;
parameter    ap_ST_fsm_pp1_stage19 = 44'd1073741824;
parameter    ap_ST_fsm_pp1_stage20 = 44'd2147483648;
parameter    ap_ST_fsm_pp1_stage21 = 44'd4294967296;
parameter    ap_ST_fsm_pp1_stage22 = 44'd8589934592;
parameter    ap_ST_fsm_pp1_stage23 = 44'd17179869184;
parameter    ap_ST_fsm_pp1_stage24 = 44'd34359738368;
parameter    ap_ST_fsm_pp1_stage25 = 44'd68719476736;
parameter    ap_ST_fsm_pp1_stage26 = 44'd137438953472;
parameter    ap_ST_fsm_pp1_stage27 = 44'd274877906944;
parameter    ap_ST_fsm_pp1_stage28 = 44'd549755813888;
parameter    ap_ST_fsm_pp1_stage29 = 44'd1099511627776;
parameter    ap_ST_fsm_pp1_stage30 = 44'd2199023255552;
parameter    ap_ST_fsm_pp1_stage31 = 44'd4398046511104;
parameter    ap_ST_fsm_state47 = 44'd8796093022208;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   m_axi_axi_V_AWVALID;
input   m_axi_axi_V_AWREADY;
output  [63:0] m_axi_axi_V_AWADDR;
output  [0:0] m_axi_axi_V_AWID;
output  [31:0] m_axi_axi_V_AWLEN;
output  [2:0] m_axi_axi_V_AWSIZE;
output  [1:0] m_axi_axi_V_AWBURST;
output  [1:0] m_axi_axi_V_AWLOCK;
output  [3:0] m_axi_axi_V_AWCACHE;
output  [2:0] m_axi_axi_V_AWPROT;
output  [3:0] m_axi_axi_V_AWQOS;
output  [3:0] m_axi_axi_V_AWREGION;
output  [0:0] m_axi_axi_V_AWUSER;
output   m_axi_axi_V_WVALID;
input   m_axi_axi_V_WREADY;
output  [255:0] m_axi_axi_V_WDATA;
output  [31:0] m_axi_axi_V_WSTRB;
output   m_axi_axi_V_WLAST;
output  [0:0] m_axi_axi_V_WID;
output  [0:0] m_axi_axi_V_WUSER;
output   m_axi_axi_V_ARVALID;
input   m_axi_axi_V_ARREADY;
output  [63:0] m_axi_axi_V_ARADDR;
output  [0:0] m_axi_axi_V_ARID;
output  [31:0] m_axi_axi_V_ARLEN;
output  [2:0] m_axi_axi_V_ARSIZE;
output  [1:0] m_axi_axi_V_ARBURST;
output  [1:0] m_axi_axi_V_ARLOCK;
output  [3:0] m_axi_axi_V_ARCACHE;
output  [2:0] m_axi_axi_V_ARPROT;
output  [3:0] m_axi_axi_V_ARQOS;
output  [3:0] m_axi_axi_V_ARREGION;
output  [0:0] m_axi_axi_V_ARUSER;
input   m_axi_axi_V_RVALID;
output   m_axi_axi_V_RREADY;
input  [255:0] m_axi_axi_V_RDATA;
input   m_axi_axi_V_RLAST;
input  [0:0] m_axi_axi_V_RID;
input  [0:0] m_axi_axi_V_RUSER;
input  [1:0] m_axi_axi_V_RRESP;
input   m_axi_axi_V_BVALID;
output   m_axi_axi_V_BREADY;
input  [1:0] m_axi_axi_V_BRESP;
input  [0:0] m_axi_axi_V_BID;
input  [0:0] m_axi_axi_V_BUSER;
input  [63:0] axi_V_offset;
input  [31:0] width;
input  [31:0] height;
input  [31:0] stride;
output  [7:0] stream_V_din;
input   stream_V_full_n;
output   stream_V_write;
output  [31:0] width_out_din;
input   width_out_full_n;
output   width_out_write;
output  [31:0] height_out_din;
input   height_out_full_n;
output   height_out_write;
output  [31:0] stride_out_din;
input   stride_out_full_n;
output   stride_out_write;
input  [63:0] coeffs;
input  [63:0] dst_V;
output  [63:0] coeffs_out_din;
input   coeffs_out_full_n;
output   coeffs_out_write;
output  [63:0] dst_V_out_din;
input   dst_V_out_full_n;
output   dst_V_out_write;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_axi_V_ARVALID;
reg m_axi_axi_V_RREADY;
reg[7:0] stream_V_din;
reg stream_V_write;
reg width_out_write;
reg height_out_write;
reg stride_out_write;
reg coeffs_out_write;
reg dst_V_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [43:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    axi_V_blk_n_AR;
wire    ap_CS_fsm_state3;
reg    axi_V_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond1_i_i_reg_1623;
reg    stream_V_blk_n;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage1;
reg   [0:0] exitcond_i_i_reg_1642;
reg   [0:0] or_cond_i_i_i_i_reg_1656;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_pp1_stage2;
reg   [0:0] or_cond_1_i_i_i_i_reg_1660;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_pp1_stage3;
reg   [0:0] or_cond_2_i_i_i_i_reg_1664;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_pp1_stage4;
reg   [0:0] or_cond_3_i_i_i_i_reg_1668;
wire    ap_CS_fsm_pp1_stage5;
wire    ap_block_pp1_stage5;
reg   [0:0] or_cond_4_i_i_i_i_reg_1672;
wire    ap_CS_fsm_pp1_stage6;
wire    ap_block_pp1_stage6;
reg   [0:0] or_cond_5_i_i_i_i_reg_1676;
wire    ap_CS_fsm_pp1_stage7;
wire    ap_block_pp1_stage7;
reg   [0:0] or_cond_6_i_i_i_i_reg_1680;
wire    ap_CS_fsm_pp1_stage8;
wire    ap_block_pp1_stage8;
reg   [0:0] or_cond_7_i_i_i_i_reg_1684;
wire    ap_CS_fsm_pp1_stage9;
wire    ap_block_pp1_stage9;
reg   [0:0] or_cond_8_i_i_i_i_reg_1688;
wire    ap_CS_fsm_pp1_stage10;
wire    ap_block_pp1_stage10;
reg   [0:0] or_cond_9_i_i_i_i_reg_1692;
wire    ap_CS_fsm_pp1_stage11;
wire    ap_block_pp1_stage11;
reg   [0:0] or_cond_10_i_i_i_i_reg_1696;
wire    ap_CS_fsm_pp1_stage12;
wire    ap_block_pp1_stage12;
reg   [0:0] or_cond_11_i_i_i_i_reg_1700;
wire    ap_CS_fsm_pp1_stage13;
wire    ap_block_pp1_stage13;
reg   [0:0] or_cond_12_i_i_i_i_reg_1704;
wire    ap_CS_fsm_pp1_stage14;
wire    ap_block_pp1_stage14;
reg   [0:0] or_cond_13_i_i_i_i_reg_1708;
wire    ap_CS_fsm_pp1_stage15;
wire    ap_block_pp1_stage15;
reg   [0:0] or_cond_14_i_i_i_i_reg_1712;
wire    ap_CS_fsm_pp1_stage16;
wire    ap_block_pp1_stage16;
reg   [0:0] or_cond_15_i_i_i_i_reg_1716;
wire    ap_CS_fsm_pp1_stage17;
wire    ap_block_pp1_stage17;
reg   [0:0] or_cond_16_i_i_i_i_reg_1720;
wire    ap_CS_fsm_pp1_stage18;
wire    ap_block_pp1_stage18;
reg   [0:0] or_cond_17_i_i_i_i_reg_1724;
wire    ap_CS_fsm_pp1_stage19;
wire    ap_block_pp1_stage19;
reg   [0:0] or_cond_18_i_i_i_i_reg_1728;
wire    ap_CS_fsm_pp1_stage20;
wire    ap_block_pp1_stage20;
reg   [0:0] or_cond_19_i_i_i_i_reg_1732;
wire    ap_CS_fsm_pp1_stage21;
wire    ap_block_pp1_stage21;
reg   [0:0] or_cond_20_i_i_i_i_reg_1736;
wire    ap_CS_fsm_pp1_stage22;
wire    ap_block_pp1_stage22;
reg   [0:0] or_cond_21_i_i_i_i_reg_1740;
wire    ap_CS_fsm_pp1_stage23;
wire    ap_block_pp1_stage23;
reg   [0:0] or_cond_22_i_i_i_i_reg_1744;
wire    ap_CS_fsm_pp1_stage24;
wire    ap_block_pp1_stage24;
reg   [0:0] or_cond_23_i_i_i_i_reg_1748;
wire    ap_CS_fsm_pp1_stage25;
wire    ap_block_pp1_stage25;
reg   [0:0] or_cond_24_i_i_i_i_reg_1752;
wire    ap_CS_fsm_pp1_stage26;
wire    ap_block_pp1_stage26;
reg   [0:0] or_cond_25_i_i_i_i_reg_1756;
wire    ap_CS_fsm_pp1_stage27;
wire    ap_block_pp1_stage27;
reg   [0:0] or_cond_26_i_i_i_i_reg_1760;
wire    ap_CS_fsm_pp1_stage28;
wire    ap_block_pp1_stage28;
reg   [0:0] or_cond_27_i_i_i_i_reg_1764;
wire    ap_CS_fsm_pp1_stage29;
wire    ap_block_pp1_stage29;
reg   [0:0] or_cond_28_i_i_i_i_reg_1768;
wire    ap_CS_fsm_pp1_stage30;
wire    ap_block_pp1_stage30;
reg   [0:0] or_cond_29_i_i_i_i_reg_1772;
wire    ap_CS_fsm_pp1_stage31;
wire    ap_block_pp1_stage31;
reg   [0:0] or_cond_30_i_i_i_i_reg_1776;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] or_cond_i_i_i_i_211_reg_1780;
reg    width_out_blk_n;
reg    height_out_blk_n;
reg    stride_out_blk_n;
reg    coeffs_out_blk_n;
reg    dst_V_out_blk_n;
reg   [11:0] x_i_i_i_i_reg_521;
reg   [11:0] ap_reg_pp0_iter1_x_i_i_i_i_reg_521;
wire    ap_block_state10_pp0_stage0_iter0;
reg    ap_block_state11_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [11:0] x1_i_i_i_i_reg_533;
wire   [59:0] tmp_683_cast_i_i_fu_554_p1;
reg   [59:0] tmp_683_cast_i_i_reg_1413;
reg    ap_block_state1;
wire   [15:0] tmp_85_fu_562_p1;
reg   [15:0] tmp_85_reg_1418;
wire   [11:0] loopWidth_cast6_i_i_i_i_fu_580_p4;
reg   [11:0] loopWidth_cast6_i_i_i_i_reg_1423;
wire   [0:0] tmp_i_i_i_i_209_fu_594_p2;
reg   [0:0] tmp_i_i_i_i_209_reg_1429;
wire   [26:0] tmp_31_cast_i_i_i_i_fu_618_p1;
reg   [26:0] tmp_31_cast_i_i_i_i_reg_1434;
wire  signed [12:0] tmp_32_cast_i_i_i_i_fu_628_p1;
reg  signed [12:0] tmp_32_cast_i_i_i_i_reg_1439;
wire   [0:0] tmp_81_i_i_i_i_fu_632_p2;
reg   [0:0] tmp_81_i_i_i_i_reg_1444;
wire   [0:0] icmp_fu_648_p2;
reg   [0:0] icmp_reg_1449;
wire   [0:0] tmp_81_2_i_i_i_i_fu_654_p2;
reg   [0:0] tmp_81_2_i_i_i_i_reg_1454;
wire   [0:0] icmp1_fu_670_p2;
reg   [0:0] icmp1_reg_1459;
wire   [0:0] tmp_81_4_i_i_i_i_fu_676_p2;
reg   [0:0] tmp_81_4_i_i_i_i_reg_1464;
wire   [0:0] tmp_81_5_i_i_i_i_fu_682_p2;
reg   [0:0] tmp_81_5_i_i_i_i_reg_1469;
wire   [0:0] tmp_81_6_i_i_i_i_fu_688_p2;
reg   [0:0] tmp_81_6_i_i_i_i_reg_1474;
wire   [0:0] icmp2_fu_704_p2;
reg   [0:0] icmp2_reg_1479;
wire   [0:0] tmp_81_8_i_i_i_i_fu_710_p2;
reg   [0:0] tmp_81_8_i_i_i_i_reg_1484;
wire   [0:0] tmp_81_9_i_i_i_i_fu_716_p2;
reg   [0:0] tmp_81_9_i_i_i_i_reg_1489;
wire   [0:0] tmp_81_i_i_i_i_210_fu_722_p2;
reg   [0:0] tmp_81_i_i_i_i_210_reg_1494;
wire   [0:0] tmp_81_10_i_i_i_i_fu_728_p2;
reg   [0:0] tmp_81_10_i_i_i_i_reg_1499;
wire   [0:0] tmp_81_11_i_i_i_i_fu_734_p2;
reg   [0:0] tmp_81_11_i_i_i_i_reg_1504;
wire   [0:0] tmp_81_12_i_i_i_i_fu_740_p2;
reg   [0:0] tmp_81_12_i_i_i_i_reg_1509;
wire   [0:0] tmp_81_13_i_i_i_i_fu_746_p2;
reg   [0:0] tmp_81_13_i_i_i_i_reg_1514;
wire   [0:0] icmp3_fu_762_p2;
reg   [0:0] icmp3_reg_1519;
wire   [0:0] tmp_81_15_i_i_i_i_fu_768_p2;
reg   [0:0] tmp_81_15_i_i_i_i_reg_1524;
wire   [0:0] tmp_81_16_i_i_i_i_fu_774_p2;
reg   [0:0] tmp_81_16_i_i_i_i_reg_1529;
wire   [0:0] tmp_81_17_i_i_i_i_fu_780_p2;
reg   [0:0] tmp_81_17_i_i_i_i_reg_1534;
wire   [0:0] tmp_81_18_i_i_i_i_fu_786_p2;
reg   [0:0] tmp_81_18_i_i_i_i_reg_1539;
wire   [0:0] tmp_81_19_i_i_i_i_fu_792_p2;
reg   [0:0] tmp_81_19_i_i_i_i_reg_1544;
wire   [0:0] tmp_81_20_i_i_i_i_fu_798_p2;
reg   [0:0] tmp_81_20_i_i_i_i_reg_1549;
wire   [0:0] tmp_81_21_i_i_i_i_fu_804_p2;
reg   [0:0] tmp_81_21_i_i_i_i_reg_1554;
wire   [0:0] tmp_81_22_i_i_i_i_fu_810_p2;
reg   [0:0] tmp_81_22_i_i_i_i_reg_1559;
wire   [0:0] tmp_81_23_i_i_i_i_fu_816_p2;
reg   [0:0] tmp_81_23_i_i_i_i_reg_1564;
wire   [0:0] tmp_81_24_i_i_i_i_fu_822_p2;
reg   [0:0] tmp_81_24_i_i_i_i_reg_1569;
wire   [0:0] tmp_81_25_i_i_i_i_fu_828_p2;
reg   [0:0] tmp_81_25_i_i_i_i_reg_1574;
wire   [0:0] tmp_81_26_i_i_i_i_fu_834_p2;
reg   [0:0] tmp_81_26_i_i_i_i_reg_1579;
wire   [0:0] tmp_81_27_i_i_i_i_fu_840_p2;
reg   [0:0] tmp_81_27_i_i_i_i_reg_1584;
wire   [0:0] tmp_81_28_i_i_i_i_fu_846_p2;
reg   [0:0] tmp_81_28_i_i_i_i_reg_1589;
wire   [0:0] tmp_81_29_i_i_i_i_fu_852_p2;
reg   [0:0] tmp_81_29_i_i_i_i_reg_1594;
wire   [31:0] tmp_i_i_fu_858_p1;
reg   [31:0] tmp_i_i_reg_1599;
wire   [15:0] y_fu_867_p2;
reg   [15:0] y_reg_1607;
wire    ap_CS_fsm_state2;
wire   [59:0] sum_i_i_fu_877_p2;
reg   [59:0] sum_i_i_reg_1612;
wire   [0:0] exitcond2_i_i_i_i_fu_862_p2;
reg    ap_sig_ioackin_m_axi_axi_V_ARREADY;
wire   [0:0] exitcond1_i_i_fu_892_p2;
reg   [0:0] ap_reg_pp0_iter1_exitcond1_i_i_reg_1623;
wire   [11:0] x_fu_897_p2;
reg   [11:0] x_reg_1627;
reg    ap_enable_reg_pp0_iter0;
reg   [255:0] axi_V_addr_read_reg_1632;
wire   [26:0] yoffset_fu_908_p2;
reg   [26:0] yoffset_reg_1637;
wire    ap_CS_fsm_state13;
wire   [0:0] exitcond_i_i_fu_913_p2;
wire    ap_block_state14_pp1_stage0_iter0;
reg    ap_block_state46_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [11:0] x_2_fu_918_p2;
reg   [11:0] x_2_reg_1646;
wire   [0:0] or_cond_i_i_i_i_fu_938_p2;
wire   [0:0] or_cond_1_i_i_i_i_fu_943_p2;
wire   [0:0] or_cond_2_i_i_i_i_fu_948_p2;
wire   [0:0] or_cond_3_i_i_i_i_fu_953_p2;
wire   [0:0] or_cond_4_i_i_i_i_fu_958_p2;
wire   [0:0] or_cond_5_i_i_i_i_fu_963_p2;
wire   [0:0] or_cond_6_i_i_i_i_fu_968_p2;
wire   [0:0] or_cond_7_i_i_i_i_fu_973_p2;
wire   [0:0] or_cond_8_i_i_i_i_fu_978_p2;
wire   [0:0] or_cond_9_i_i_i_i_fu_983_p2;
wire   [0:0] or_cond_10_i_i_i_i_fu_988_p2;
wire   [0:0] or_cond_11_i_i_i_i_fu_993_p2;
wire   [0:0] or_cond_12_i_i_i_i_fu_998_p2;
wire   [0:0] or_cond_13_i_i_i_i_fu_1003_p2;
wire   [0:0] or_cond_14_i_i_i_i_fu_1008_p2;
wire   [0:0] or_cond_15_i_i_i_i_fu_1013_p2;
wire   [0:0] or_cond_16_i_i_i_i_fu_1018_p2;
wire   [0:0] or_cond_17_i_i_i_i_fu_1023_p2;
wire   [0:0] or_cond_18_i_i_i_i_fu_1028_p2;
wire   [0:0] or_cond_19_i_i_i_i_fu_1033_p2;
wire   [0:0] or_cond_20_i_i_i_i_fu_1038_p2;
wire   [0:0] or_cond_21_i_i_i_i_fu_1043_p2;
wire   [0:0] or_cond_22_i_i_i_i_fu_1048_p2;
wire   [0:0] or_cond_23_i_i_i_i_fu_1053_p2;
wire   [0:0] or_cond_24_i_i_i_i_fu_1058_p2;
wire   [0:0] or_cond_25_i_i_i_i_fu_1063_p2;
wire   [0:0] or_cond_26_i_i_i_i_fu_1068_p2;
wire   [0:0] or_cond_27_i_i_i_i_fu_1073_p2;
wire   [0:0] or_cond_28_i_i_i_i_fu_1078_p2;
wire   [0:0] or_cond_29_i_i_i_i_fu_1083_p2;
wire   [0:0] or_cond_30_i_i_i_i_fu_1088_p2;
wire   [0:0] or_cond_i_i_i_i_211_fu_1093_p2;
reg   [7:0] tmp_92_reg_1784;
reg    ap_predicate_op256_write_state15;
reg    ap_block_state15_pp1_stage1_iter0;
reg    ap_block_pp1_stage1_11001;
reg   [7:0] tmp_93_reg_1789;
reg   [7:0] tmp_94_reg_1794;
reg   [7:0] tmp_95_reg_1799;
reg   [7:0] tmp_96_reg_1804;
reg   [7:0] tmp_97_reg_1809;
reg   [7:0] tmp_98_reg_1814;
reg   [7:0] tmp_99_reg_1819;
reg   [7:0] tmp_100_reg_1824;
reg   [7:0] tmp_101_reg_1829;
reg   [7:0] tmp_102_reg_1834;
reg   [7:0] tmp_103_reg_1839;
reg   [7:0] tmp_104_reg_1844;
reg   [7:0] tmp_105_reg_1849;
reg   [7:0] tmp_106_reg_1854;
reg   [7:0] tmp_107_reg_1859;
reg   [7:0] tmp_108_reg_1864;
reg   [7:0] tmp_109_reg_1869;
reg   [7:0] tmp_110_reg_1874;
reg   [7:0] tmp_111_reg_1879;
reg   [7:0] tmp_112_reg_1884;
reg   [7:0] tmp_113_reg_1889;
reg   [7:0] tmp_114_reg_1894;
reg   [7:0] tmp_115_reg_1899;
reg   [7:0] tmp_116_reg_1904;
reg   [7:0] tmp_117_reg_1909;
reg   [7:0] tmp_118_reg_1914;
reg   [7:0] tmp_119_reg_1919;
reg   [7:0] tmp_120_reg_1924;
reg   [7:0] tmp_121_reg_1929;
reg   [7:0] tmp_122_reg_1934;
wire    ap_CS_fsm_state9;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state10;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state14;
reg    ap_predicate_op347_write_state45;
reg    ap_block_state45_pp1_stage31_iter0;
reg    ap_block_pp1_stage31_subdone;
reg   [5:0] buff_V_address0;
reg    buff_V_ce0;
reg    buff_V_we0;
wire   [255:0] buff_V_q0;
reg   [26:0] yoffset_i_i_i_i_reg_498;
wire    ap_CS_fsm_state47;
reg   [15:0] y_i_i_i_i_reg_510;
reg   [11:0] x_i_i_i_i_phi_fu_525_p4;
reg   [11:0] x1_i_i_i_i_phi_fu_537_p4;
wire   [63:0] tmp_36_i_i_i_i_fu_903_p1;
wire   [63:0] tmp_41_i_i_i_i_fu_928_p1;
wire   [63:0] sum_cast_i_i_fu_882_p1;
reg    ap_reg_ioackin_m_axi_axi_V_ARREADY;
reg    ap_predicate_op289_write_state16;
reg    ap_block_state16_pp1_stage2_iter0;
reg    ap_block_pp1_stage2_11001;
reg    ap_predicate_op291_write_state17;
reg    ap_block_state17_pp1_stage3_iter0;
reg    ap_block_pp1_stage3_11001;
reg    ap_predicate_op293_write_state18;
reg    ap_block_state18_pp1_stage4_iter0;
reg    ap_block_pp1_stage4_11001;
reg    ap_predicate_op295_write_state19;
reg    ap_block_state19_pp1_stage5_iter0;
reg    ap_block_pp1_stage5_11001;
reg    ap_predicate_op297_write_state20;
reg    ap_block_state20_pp1_stage6_iter0;
reg    ap_block_pp1_stage6_11001;
reg    ap_predicate_op299_write_state21;
reg    ap_block_state21_pp1_stage7_iter0;
reg    ap_block_pp1_stage7_11001;
reg    ap_predicate_op301_write_state22;
reg    ap_block_state22_pp1_stage8_iter0;
reg    ap_block_pp1_stage8_11001;
reg    ap_predicate_op303_write_state23;
reg    ap_block_state23_pp1_stage9_iter0;
reg    ap_block_pp1_stage9_11001;
reg    ap_predicate_op305_write_state24;
reg    ap_block_state24_pp1_stage10_iter0;
reg    ap_block_pp1_stage10_11001;
reg    ap_predicate_op307_write_state25;
reg    ap_block_state25_pp1_stage11_iter0;
reg    ap_block_pp1_stage11_11001;
reg    ap_predicate_op309_write_state26;
reg    ap_block_state26_pp1_stage12_iter0;
reg    ap_block_pp1_stage12_11001;
reg    ap_predicate_op311_write_state27;
reg    ap_block_state27_pp1_stage13_iter0;
reg    ap_block_pp1_stage13_11001;
reg    ap_predicate_op313_write_state28;
reg    ap_block_state28_pp1_stage14_iter0;
reg    ap_block_pp1_stage14_11001;
reg    ap_predicate_op315_write_state29;
reg    ap_block_state29_pp1_stage15_iter0;
reg    ap_block_pp1_stage15_11001;
reg    ap_predicate_op317_write_state30;
reg    ap_block_state30_pp1_stage16_iter0;
reg    ap_block_pp1_stage16_11001;
reg    ap_predicate_op319_write_state31;
reg    ap_block_state31_pp1_stage17_iter0;
reg    ap_block_pp1_stage17_11001;
reg    ap_predicate_op321_write_state32;
reg    ap_block_state32_pp1_stage18_iter0;
reg    ap_block_pp1_stage18_11001;
reg    ap_predicate_op323_write_state33;
reg    ap_block_state33_pp1_stage19_iter0;
reg    ap_block_pp1_stage19_11001;
reg    ap_predicate_op325_write_state34;
reg    ap_block_state34_pp1_stage20_iter0;
reg    ap_block_pp1_stage20_11001;
reg    ap_predicate_op327_write_state35;
reg    ap_block_state35_pp1_stage21_iter0;
reg    ap_block_pp1_stage21_11001;
reg    ap_predicate_op329_write_state36;
reg    ap_block_state36_pp1_stage22_iter0;
reg    ap_block_pp1_stage22_11001;
reg    ap_predicate_op331_write_state37;
reg    ap_block_state37_pp1_stage23_iter0;
reg    ap_block_pp1_stage23_11001;
reg    ap_predicate_op333_write_state38;
reg    ap_block_state38_pp1_stage24_iter0;
reg    ap_block_pp1_stage24_11001;
reg    ap_predicate_op335_write_state39;
reg    ap_block_state39_pp1_stage25_iter0;
reg    ap_block_pp1_stage25_11001;
reg    ap_predicate_op337_write_state40;
reg    ap_block_state40_pp1_stage26_iter0;
reg    ap_block_pp1_stage26_11001;
reg    ap_predicate_op339_write_state41;
reg    ap_block_state41_pp1_stage27_iter0;
reg    ap_block_pp1_stage27_11001;
reg    ap_predicate_op341_write_state42;
reg    ap_block_state42_pp1_stage28_iter0;
reg    ap_block_pp1_stage28_11001;
reg    ap_predicate_op343_write_state43;
reg    ap_block_state43_pp1_stage29_iter0;
reg    ap_block_pp1_stage29_11001;
reg    ap_predicate_op345_write_state44;
reg    ap_block_state44_pp1_stage30_iter0;
reg    ap_block_pp1_stage30_11001;
reg    ap_block_pp1_stage31_11001;
wire   [7:0] tmp_91_fu_1098_p1;
reg    ap_block_pp1_stage1_01001;
reg    ap_block_pp1_stage2_01001;
reg    ap_block_pp1_stage3_01001;
reg    ap_block_pp1_stage4_01001;
reg    ap_block_pp1_stage5_01001;
reg    ap_block_pp1_stage6_01001;
reg    ap_block_pp1_stage7_01001;
reg    ap_block_pp1_stage8_01001;
reg    ap_block_pp1_stage9_01001;
reg    ap_block_pp1_stage10_01001;
reg    ap_block_pp1_stage11_01001;
reg    ap_block_pp1_stage12_01001;
reg    ap_block_pp1_stage13_01001;
reg    ap_block_pp1_stage14_01001;
reg    ap_block_pp1_stage15_01001;
reg    ap_block_pp1_stage16_01001;
reg    ap_block_pp1_stage17_01001;
reg    ap_block_pp1_stage18_01001;
reg    ap_block_pp1_stage19_01001;
reg    ap_block_pp1_stage20_01001;
reg    ap_block_pp1_stage21_01001;
reg    ap_block_pp1_stage22_01001;
reg    ap_block_pp1_stage23_01001;
reg    ap_block_pp1_stage24_01001;
reg    ap_block_pp1_stage25_01001;
reg    ap_block_pp1_stage26_01001;
reg    ap_block_pp1_stage27_01001;
reg    ap_block_pp1_stage28_01001;
reg    ap_block_pp1_stage29_01001;
reg    ap_block_pp1_stage30_01001;
reg    ap_block_pp1_stage31_01001;
reg    ap_block_pp1_stage0_01001;
wire   [58:0] tmp_fu_544_p4;
wire   [15:0] tmp_84_fu_558_p1;
wire   [16:0] widthInPix_cast7_i_i_i_i_fu_566_p1;
wire   [16:0] tmp_i_i_i_i_fu_574_p2;
wire   [4:0] remainPix_fu_570_p1;
wire   [5:0] remainPix_cast_i_i_i_i_fu_590_p1;
wire   [10:0] tmp_31_i_i_i_i_fu_608_p4;
wire   [11:0] tmp_32_i_i_i_i_fu_622_p2;
wire   [5:0] remainPix_2_fu_600_p3;
wire   [4:0] tmp_87_fu_638_p4;
wire   [3:0] tmp_88_fu_660_p4;
wire   [2:0] tmp_89_fu_694_p4;
wire   [1:0] tmp_90_fu_752_p4;
wire   [59:0] tmp_1_cast_i_i_fu_873_p1;
wire   [12:0] x1_cast_i_i_i_i_fu_924_p1;
wire   [0:0] tmp_42_i_i_i_i_fu_933_p2;
reg   [43:0] ap_NS_fsm;
reg    ap_block_pp1_stage1_subdone;
reg    ap_block_pp1_stage2_subdone;
reg    ap_block_pp1_stage3_subdone;
reg    ap_block_pp1_stage4_subdone;
reg    ap_block_pp1_stage5_subdone;
reg    ap_block_pp1_stage6_subdone;
reg    ap_block_pp1_stage7_subdone;
reg    ap_block_pp1_stage8_subdone;
reg    ap_block_pp1_stage9_subdone;
reg    ap_block_pp1_stage10_subdone;
reg    ap_block_pp1_stage11_subdone;
reg    ap_block_pp1_stage12_subdone;
reg    ap_block_pp1_stage13_subdone;
reg    ap_block_pp1_stage14_subdone;
reg    ap_block_pp1_stage15_subdone;
reg    ap_block_pp1_stage16_subdone;
reg    ap_block_pp1_stage17_subdone;
reg    ap_block_pp1_stage18_subdone;
reg    ap_block_pp1_stage19_subdone;
reg    ap_block_pp1_stage20_subdone;
reg    ap_block_pp1_stage21_subdone;
reg    ap_block_pp1_stage22_subdone;
reg    ap_block_pp1_stage23_subdone;
reg    ap_block_pp1_stage24_subdone;
reg    ap_block_pp1_stage25_subdone;
reg    ap_block_pp1_stage26_subdone;
reg    ap_block_pp1_stage27_subdone;
reg    ap_block_pp1_stage28_subdone;
reg    ap_block_pp1_stage29_subdone;
reg    ap_block_pp1_stage30_subdone;
wire    ap_ext_blocking_cur_n;
wire    ap_int_blocking_cur_n;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 44'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_reg_ioackin_m_axi_axi_V_ARREADY = 1'b0;
end

AXIBursts2PixelStream8_buff_V #(
    .DataWidth( 256 ),
    .AddressRange( 60 ),
    .AddressWidth( 6 ))
buff_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buff_V_address0),
    .ce0(buff_V_ce0),
    .we0(buff_V_we0),
    .d0(axi_V_addr_read_reg_1632),
    .q0(buff_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond2_i_i_i_i_fu_862_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state10))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state10)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state10 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp1_exit_iter0_state14))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state14) & (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_subdone == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage31) & (ap_block_pp1_stage31_subdone == 1'b0))))) begin
            ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state14 ^ 1'b1);
        end else if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_subdone == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage31) & (ap_block_pp1_stage31_subdone == 1'b0)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_axi_V_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            if ((ap_sig_ioackin_m_axi_axi_V_ARREADY == 1'b1)) begin
                ap_reg_ioackin_m_axi_axi_V_ARREADY <= 1'b0;
            end else if ((1'b1 == m_axi_axi_V_ARREADY)) begin
                ap_reg_ioackin_m_axi_axi_V_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0_11001 == 1'b0))) begin
        x1_i_i_i_i_reg_533 <= x_2_reg_1646;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        x1_i_i_i_i_reg_533 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == exitcond1_i_i_reg_1623) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        x_i_i_i_i_reg_521 <= x_reg_1627;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        x_i_i_i_i_reg_521 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        y_i_i_i_i_reg_510 <= y_reg_1607;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == coeffs_out_full_n) | (1'b0 == dst_V_out_full_n) | (1'b0 == width_out_full_n) | (1'b0 == height_out_full_n) | (1'b0 == stride_out_full_n)))) begin
        y_i_i_i_i_reg_510 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        yoffset_i_i_i_i_reg_498 <= yoffset_reg_1637;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == coeffs_out_full_n) | (1'b0 == dst_V_out_full_n) | (1'b0 == width_out_full_n) | (1'b0 == height_out_full_n) | (1'b0 == stride_out_full_n)))) begin
        yoffset_i_i_i_i_reg_498 <= 27'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond1_i_i_reg_1623 <= exitcond1_i_i_reg_1623;
        ap_reg_pp0_iter1_x_i_i_i_i_reg_521 <= x_i_i_i_i_reg_521;
        exitcond1_i_i_reg_1623 <= exitcond1_i_i_fu_892_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == exitcond1_i_i_reg_1623) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        axi_V_addr_read_reg_1632 <= m_axi_axi_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0))) begin
        exitcond_i_i_reg_1642 <= exitcond_i_i_fu_913_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == coeffs_out_full_n) | (1'b0 == dst_V_out_full_n) | (1'b0 == width_out_full_n) | (1'b0 == height_out_full_n) | (1'b0 == stride_out_full_n)))) begin
        icmp1_reg_1459 <= icmp1_fu_670_p2;
        icmp2_reg_1479 <= icmp2_fu_704_p2;
        icmp3_reg_1519 <= icmp3_fu_762_p2;
        icmp_reg_1449 <= icmp_fu_648_p2;
        loopWidth_cast6_i_i_i_i_reg_1423 <= {{tmp_i_i_i_i_fu_574_p2[16:5]}};
        tmp_31_cast_i_i_i_i_reg_1434[10 : 0] <= tmp_31_cast_i_i_i_i_fu_618_p1[10 : 0];
        tmp_32_cast_i_i_i_i_reg_1439 <= tmp_32_cast_i_i_i_i_fu_628_p1;
        tmp_683_cast_i_i_reg_1413[58 : 0] <= tmp_683_cast_i_i_fu_554_p1[58 : 0];
        tmp_81_10_i_i_i_i_reg_1499 <= tmp_81_10_i_i_i_i_fu_728_p2;
        tmp_81_11_i_i_i_i_reg_1504 <= tmp_81_11_i_i_i_i_fu_734_p2;
        tmp_81_12_i_i_i_i_reg_1509 <= tmp_81_12_i_i_i_i_fu_740_p2;
        tmp_81_13_i_i_i_i_reg_1514 <= tmp_81_13_i_i_i_i_fu_746_p2;
        tmp_81_15_i_i_i_i_reg_1524 <= tmp_81_15_i_i_i_i_fu_768_p2;
        tmp_81_16_i_i_i_i_reg_1529 <= tmp_81_16_i_i_i_i_fu_774_p2;
        tmp_81_17_i_i_i_i_reg_1534 <= tmp_81_17_i_i_i_i_fu_780_p2;
        tmp_81_18_i_i_i_i_reg_1539 <= tmp_81_18_i_i_i_i_fu_786_p2;
        tmp_81_19_i_i_i_i_reg_1544 <= tmp_81_19_i_i_i_i_fu_792_p2;
        tmp_81_20_i_i_i_i_reg_1549 <= tmp_81_20_i_i_i_i_fu_798_p2;
        tmp_81_21_i_i_i_i_reg_1554 <= tmp_81_21_i_i_i_i_fu_804_p2;
        tmp_81_22_i_i_i_i_reg_1559 <= tmp_81_22_i_i_i_i_fu_810_p2;
        tmp_81_23_i_i_i_i_reg_1564 <= tmp_81_23_i_i_i_i_fu_816_p2;
        tmp_81_24_i_i_i_i_reg_1569 <= tmp_81_24_i_i_i_i_fu_822_p2;
        tmp_81_25_i_i_i_i_reg_1574 <= tmp_81_25_i_i_i_i_fu_828_p2;
        tmp_81_26_i_i_i_i_reg_1579 <= tmp_81_26_i_i_i_i_fu_834_p2;
        tmp_81_27_i_i_i_i_reg_1584 <= tmp_81_27_i_i_i_i_fu_840_p2;
        tmp_81_28_i_i_i_i_reg_1589 <= tmp_81_28_i_i_i_i_fu_846_p2;
        tmp_81_29_i_i_i_i_reg_1594 <= tmp_81_29_i_i_i_i_fu_852_p2;
        tmp_81_2_i_i_i_i_reg_1454 <= tmp_81_2_i_i_i_i_fu_654_p2;
        tmp_81_4_i_i_i_i_reg_1464 <= tmp_81_4_i_i_i_i_fu_676_p2;
        tmp_81_5_i_i_i_i_reg_1469 <= tmp_81_5_i_i_i_i_fu_682_p2;
        tmp_81_6_i_i_i_i_reg_1474 <= tmp_81_6_i_i_i_i_fu_688_p2;
        tmp_81_8_i_i_i_i_reg_1484 <= tmp_81_8_i_i_i_i_fu_710_p2;
        tmp_81_9_i_i_i_i_reg_1489 <= tmp_81_9_i_i_i_i_fu_716_p2;
        tmp_81_i_i_i_i_210_reg_1494 <= tmp_81_i_i_i_i_210_fu_722_p2;
        tmp_81_i_i_i_i_reg_1444 <= tmp_81_i_i_i_i_fu_632_p2;
        tmp_85_reg_1418 <= tmp_85_fu_562_p1;
        tmp_i_i_i_i_209_reg_1429 <= tmp_i_i_i_i_209_fu_594_p2;
        tmp_i_i_reg_1599[11 : 0] <= tmp_i_i_fu_858_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0) & (1'd0 == exitcond_i_i_fu_913_p2))) begin
        or_cond_10_i_i_i_i_reg_1696 <= or_cond_10_i_i_i_i_fu_988_p2;
        or_cond_11_i_i_i_i_reg_1700 <= or_cond_11_i_i_i_i_fu_993_p2;
        or_cond_12_i_i_i_i_reg_1704 <= or_cond_12_i_i_i_i_fu_998_p2;
        or_cond_13_i_i_i_i_reg_1708 <= or_cond_13_i_i_i_i_fu_1003_p2;
        or_cond_14_i_i_i_i_reg_1712 <= or_cond_14_i_i_i_i_fu_1008_p2;
        or_cond_15_i_i_i_i_reg_1716 <= or_cond_15_i_i_i_i_fu_1013_p2;
        or_cond_16_i_i_i_i_reg_1720 <= or_cond_16_i_i_i_i_fu_1018_p2;
        or_cond_17_i_i_i_i_reg_1724 <= or_cond_17_i_i_i_i_fu_1023_p2;
        or_cond_18_i_i_i_i_reg_1728 <= or_cond_18_i_i_i_i_fu_1028_p2;
        or_cond_19_i_i_i_i_reg_1732 <= or_cond_19_i_i_i_i_fu_1033_p2;
        or_cond_1_i_i_i_i_reg_1660 <= or_cond_1_i_i_i_i_fu_943_p2;
        or_cond_20_i_i_i_i_reg_1736 <= or_cond_20_i_i_i_i_fu_1038_p2;
        or_cond_21_i_i_i_i_reg_1740 <= or_cond_21_i_i_i_i_fu_1043_p2;
        or_cond_22_i_i_i_i_reg_1744 <= or_cond_22_i_i_i_i_fu_1048_p2;
        or_cond_23_i_i_i_i_reg_1748 <= or_cond_23_i_i_i_i_fu_1053_p2;
        or_cond_24_i_i_i_i_reg_1752 <= or_cond_24_i_i_i_i_fu_1058_p2;
        or_cond_25_i_i_i_i_reg_1756 <= or_cond_25_i_i_i_i_fu_1063_p2;
        or_cond_26_i_i_i_i_reg_1760 <= or_cond_26_i_i_i_i_fu_1068_p2;
        or_cond_27_i_i_i_i_reg_1764 <= or_cond_27_i_i_i_i_fu_1073_p2;
        or_cond_28_i_i_i_i_reg_1768 <= or_cond_28_i_i_i_i_fu_1078_p2;
        or_cond_29_i_i_i_i_reg_1772 <= or_cond_29_i_i_i_i_fu_1083_p2;
        or_cond_2_i_i_i_i_reg_1664 <= or_cond_2_i_i_i_i_fu_948_p2;
        or_cond_30_i_i_i_i_reg_1776 <= or_cond_30_i_i_i_i_fu_1088_p2;
        or_cond_3_i_i_i_i_reg_1668 <= or_cond_3_i_i_i_i_fu_953_p2;
        or_cond_4_i_i_i_i_reg_1672 <= or_cond_4_i_i_i_i_fu_958_p2;
        or_cond_5_i_i_i_i_reg_1676 <= or_cond_5_i_i_i_i_fu_963_p2;
        or_cond_6_i_i_i_i_reg_1680 <= or_cond_6_i_i_i_i_fu_968_p2;
        or_cond_7_i_i_i_i_reg_1684 <= or_cond_7_i_i_i_i_fu_973_p2;
        or_cond_8_i_i_i_i_reg_1688 <= or_cond_8_i_i_i_i_fu_978_p2;
        or_cond_9_i_i_i_i_reg_1692 <= or_cond_9_i_i_i_i_fu_983_p2;
        or_cond_i_i_i_i_211_reg_1780 <= or_cond_i_i_i_i_211_fu_1093_p2;
        or_cond_i_i_i_i_reg_1656 <= or_cond_i_i_i_i_fu_938_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd0 == exitcond2_i_i_i_i_fu_862_p2))) begin
        sum_i_i_reg_1612 <= sum_i_i_fu_877_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'd0 == exitcond_i_i_reg_1642) & (ap_block_pp1_stage1_11001 == 1'b0))) begin
        tmp_100_reg_1824 <= {{buff_V_q0[79:72]}};
        tmp_101_reg_1829 <= {{buff_V_q0[87:80]}};
        tmp_102_reg_1834 <= {{buff_V_q0[95:88]}};
        tmp_103_reg_1839 <= {{buff_V_q0[103:96]}};
        tmp_104_reg_1844 <= {{buff_V_q0[111:104]}};
        tmp_105_reg_1849 <= {{buff_V_q0[119:112]}};
        tmp_106_reg_1854 <= {{buff_V_q0[127:120]}};
        tmp_107_reg_1859 <= {{buff_V_q0[135:128]}};
        tmp_108_reg_1864 <= {{buff_V_q0[143:136]}};
        tmp_109_reg_1869 <= {{buff_V_q0[151:144]}};
        tmp_110_reg_1874 <= {{buff_V_q0[159:152]}};
        tmp_111_reg_1879 <= {{buff_V_q0[167:160]}};
        tmp_112_reg_1884 <= {{buff_V_q0[175:168]}};
        tmp_113_reg_1889 <= {{buff_V_q0[183:176]}};
        tmp_114_reg_1894 <= {{buff_V_q0[191:184]}};
        tmp_115_reg_1899 <= {{buff_V_q0[199:192]}};
        tmp_116_reg_1904 <= {{buff_V_q0[207:200]}};
        tmp_117_reg_1909 <= {{buff_V_q0[215:208]}};
        tmp_118_reg_1914 <= {{buff_V_q0[223:216]}};
        tmp_119_reg_1919 <= {{buff_V_q0[231:224]}};
        tmp_120_reg_1924 <= {{buff_V_q0[239:232]}};
        tmp_121_reg_1929 <= {{buff_V_q0[247:240]}};
        tmp_122_reg_1934 <= {{buff_V_q0[255:248]}};
        tmp_92_reg_1784 <= {{buff_V_q0[15:8]}};
        tmp_93_reg_1789 <= {{buff_V_q0[23:16]}};
        tmp_94_reg_1794 <= {{buff_V_q0[31:24]}};
        tmp_95_reg_1799 <= {{buff_V_q0[39:32]}};
        tmp_96_reg_1804 <= {{buff_V_q0[47:40]}};
        tmp_97_reg_1809 <= {{buff_V_q0[55:48]}};
        tmp_98_reg_1814 <= {{buff_V_q0[63:56]}};
        tmp_99_reg_1819 <= {{buff_V_q0[71:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0))) begin
        x_2_reg_1646 <= x_2_fu_918_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        x_reg_1627 <= x_fu_897_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y_reg_1607 <= y_fu_867_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        yoffset_reg_1637 <= yoffset_fu_908_p2;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond1_i_i_fu_892_p2)) begin
        ap_condition_pp0_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == exitcond_i_i_fu_913_p2)) begin
        ap_condition_pp1_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond2_i_i_i_i_fu_862_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp1_iter0) & (1'b0 == ap_enable_reg_pp1_iter1))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond2_i_i_i_i_fu_862_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_m_axi_axi_V_ARREADY)) begin
        ap_sig_ioackin_m_axi_axi_V_ARREADY = m_axi_axi_V_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_axi_V_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        axi_V_blk_n_AR = m_axi_axi_V_ARREADY;
    end else begin
        axi_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (1'd0 == exitcond1_i_i_reg_1623))) begin
        axi_V_blk_n_R = m_axi_axi_V_RVALID;
    end else begin
        axi_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0 == 1'b0))) begin
        buff_V_address0 = tmp_41_i_i_i_i_fu_928_p1;
    end else if (((ap_block_pp0_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        buff_V_address0 = tmp_36_i_i_i_i_fu_903_p1;
    end else begin
        buff_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_block_pp1_stage0_11001 == 1'b0)) | ((ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)))) begin
        buff_V_ce0 = 1'b1;
    end else begin
        buff_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter1_exitcond1_i_i_reg_1623))) begin
        buff_V_we0 = 1'b1;
    end else begin
        buff_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        coeffs_out_blk_n = coeffs_out_full_n;
    end else begin
        coeffs_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == coeffs_out_full_n) | (1'b0 == dst_V_out_full_n) | (1'b0 == width_out_full_n) | (1'b0 == height_out_full_n) | (1'b0 == stride_out_full_n)))) begin
        coeffs_out_write = 1'b1;
    end else begin
        coeffs_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        dst_V_out_blk_n = dst_V_out_full_n;
    end else begin
        dst_V_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == coeffs_out_full_n) | (1'b0 == dst_V_out_full_n) | (1'b0 == width_out_full_n) | (1'b0 == height_out_full_n) | (1'b0 == stride_out_full_n)))) begin
        dst_V_out_write = 1'b1;
    end else begin
        dst_V_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        height_out_blk_n = height_out_full_n;
    end else begin
        height_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == coeffs_out_full_n) | (1'b0 == dst_V_out_full_n) | (1'b0 == width_out_full_n) | (1'b0 == height_out_full_n) | (1'b0 == stride_out_full_n)))) begin
        height_out_write = 1'b1;
    end else begin
        height_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_reg_ioackin_m_axi_axi_V_ARREADY))) begin
        m_axi_axi_V_ARVALID = 1'b1;
    end else begin
        m_axi_axi_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == exitcond1_i_i_reg_1623) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        m_axi_axi_V_RREADY = 1'b1;
    end else begin
        m_axi_axi_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage1 == 1'b0) & (1'd0 == exitcond_i_i_reg_1642) & (or_cond_i_i_i_i_reg_1656 == 1'd1)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_block_pp1_stage2 == 1'b0) & (1'd1 == or_cond_1_i_i_i_i_reg_1660)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_block_pp1_stage3 == 1'b0) & (1'd1 == or_cond_2_i_i_i_i_reg_1664)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_block_pp1_stage4 == 1'b0) & (1'd1 == or_cond_3_i_i_i_i_reg_1668)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage5) & (ap_block_pp1_stage5 == 1'b0) & (1'd1 == or_cond_4_i_i_i_i_reg_1672)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage6) & (ap_block_pp1_stage6 == 1'b0) & (1'd1 == or_cond_5_i_i_i_i_reg_1676)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage7) & (ap_block_pp1_stage7 == 1'b0) & (1'd1 == or_cond_6_i_i_i_i_reg_1680)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage8) & (ap_block_pp1_stage8 == 1'b0) & (1'd1 == or_cond_7_i_i_i_i_reg_1684)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage9) & (ap_block_pp1_stage9 == 1'b0) & (1'd1 == or_cond_8_i_i_i_i_reg_1688)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage10) & (ap_block_pp1_stage10 == 1'b0) & (1'd1 == or_cond_9_i_i_i_i_reg_1692)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage11) & (ap_block_pp1_stage11 == 1'b0) & (1'd1 == or_cond_10_i_i_i_i_reg_1696)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage12) & (ap_block_pp1_stage12 == 1'b0) & (1'd1 == or_cond_11_i_i_i_i_reg_1700)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage13) & (ap_block_pp1_stage13 == 1'b0) & (1'd1 == or_cond_12_i_i_i_i_reg_1704)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage14) & (ap_block_pp1_stage14 == 1'b0) & (1'd1 == or_cond_13_i_i_i_i_reg_1708)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage15) & (ap_block_pp1_stage15 == 1'b0) & (1'd1 == or_cond_14_i_i_i_i_reg_1712)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage16) & (ap_block_pp1_stage16 == 1'b0) & (1'd1 == or_cond_15_i_i_i_i_reg_1716)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage17) & (ap_block_pp1_stage17 == 1'b0) & (1'd1 == or_cond_16_i_i_i_i_reg_1720)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage18) & (ap_block_pp1_stage18 == 1'b0) & (1'd1 == or_cond_17_i_i_i_i_reg_1724)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage19) & (ap_block_pp1_stage19 == 1'b0) & (1'd1 == or_cond_18_i_i_i_i_reg_1728)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage20) & (ap_block_pp1_stage20 == 1'b0) & (1'd1 == or_cond_19_i_i_i_i_reg_1732)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage21) & (ap_block_pp1_stage21 == 1'b0) & (1'd1 == or_cond_20_i_i_i_i_reg_1736)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage22) & (ap_block_pp1_stage22 == 1'b0) & (1'd1 == or_cond_21_i_i_i_i_reg_1740)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage23) & (ap_block_pp1_stage23 == 1'b0) & (1'd1 == or_cond_22_i_i_i_i_reg_1744)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage24) & (ap_block_pp1_stage24 == 1'b0) & (1'd1 == or_cond_23_i_i_i_i_reg_1748)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage25) & (ap_block_pp1_stage25 == 1'b0) & (1'd1 == or_cond_24_i_i_i_i_reg_1752)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage26) & (ap_block_pp1_stage26 == 1'b0) & (1'd1 == or_cond_25_i_i_i_i_reg_1756)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage27) & (ap_block_pp1_stage27 == 1'b0) & (1'd1 == or_cond_26_i_i_i_i_reg_1760)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage28) & (ap_block_pp1_stage28 == 1'b0) & (1'd1 == or_cond_27_i_i_i_i_reg_1764)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage29) & (ap_block_pp1_stage29 == 1'b0) & (1'd1 == or_cond_28_i_i_i_i_reg_1768)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage30) & (ap_block_pp1_stage30 == 1'b0) & (1'd1 == or_cond_29_i_i_i_i_reg_1772)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage31) & (ap_block_pp1_stage31 == 1'b0) & (1'd1 == or_cond_30_i_i_i_i_reg_1776)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0 == 1'b0) & (1'd1 == or_cond_i_i_i_i_211_reg_1780)))) begin
        stream_V_blk_n = stream_V_full_n;
    end else begin
        stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == or_cond_i_i_i_i_211_reg_1780) & (ap_block_pp1_stage0_01001 == 1'b0))) begin
        stream_V_din = tmp_122_reg_1934;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage31) & (1'b1 == ap_predicate_op347_write_state45) & (ap_block_pp1_stage31_01001 == 1'b0))) begin
        stream_V_din = tmp_121_reg_1929;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage30) & (1'b1 == ap_predicate_op345_write_state44) & (ap_block_pp1_stage30_01001 == 1'b0))) begin
        stream_V_din = tmp_120_reg_1924;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage29) & (1'b1 == ap_predicate_op343_write_state43) & (ap_block_pp1_stage29_01001 == 1'b0))) begin
        stream_V_din = tmp_119_reg_1919;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage28) & (1'b1 == ap_predicate_op341_write_state42) & (ap_block_pp1_stage28_01001 == 1'b0))) begin
        stream_V_din = tmp_118_reg_1914;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage27) & (1'b1 == ap_predicate_op339_write_state41) & (ap_block_pp1_stage27_01001 == 1'b0))) begin
        stream_V_din = tmp_117_reg_1909;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage26) & (1'b1 == ap_predicate_op337_write_state40) & (ap_block_pp1_stage26_01001 == 1'b0))) begin
        stream_V_din = tmp_116_reg_1904;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage25) & (1'b1 == ap_predicate_op335_write_state39) & (ap_block_pp1_stage25_01001 == 1'b0))) begin
        stream_V_din = tmp_115_reg_1899;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage24) & (1'b1 == ap_predicate_op333_write_state38) & (ap_block_pp1_stage24_01001 == 1'b0))) begin
        stream_V_din = tmp_114_reg_1894;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage23) & (1'b1 == ap_predicate_op331_write_state37) & (ap_block_pp1_stage23_01001 == 1'b0))) begin
        stream_V_din = tmp_113_reg_1889;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage22) & (1'b1 == ap_predicate_op329_write_state36) & (ap_block_pp1_stage22_01001 == 1'b0))) begin
        stream_V_din = tmp_112_reg_1884;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage21) & (1'b1 == ap_predicate_op327_write_state35) & (ap_block_pp1_stage21_01001 == 1'b0))) begin
        stream_V_din = tmp_111_reg_1879;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage20) & (1'b1 == ap_predicate_op325_write_state34) & (ap_block_pp1_stage20_01001 == 1'b0))) begin
        stream_V_din = tmp_110_reg_1874;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage19) & (1'b1 == ap_predicate_op323_write_state33) & (ap_block_pp1_stage19_01001 == 1'b0))) begin
        stream_V_din = tmp_109_reg_1869;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage18) & (1'b1 == ap_predicate_op321_write_state32) & (ap_block_pp1_stage18_01001 == 1'b0))) begin
        stream_V_din = tmp_108_reg_1864;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage17) & (1'b1 == ap_predicate_op319_write_state31) & (ap_block_pp1_stage17_01001 == 1'b0))) begin
        stream_V_din = tmp_107_reg_1859;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage16) & (1'b1 == ap_predicate_op317_write_state30) & (ap_block_pp1_stage16_01001 == 1'b0))) begin
        stream_V_din = tmp_106_reg_1854;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage15) & (1'b1 == ap_predicate_op315_write_state29) & (ap_block_pp1_stage15_01001 == 1'b0))) begin
        stream_V_din = tmp_105_reg_1849;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage14) & (1'b1 == ap_predicate_op313_write_state28) & (ap_block_pp1_stage14_01001 == 1'b0))) begin
        stream_V_din = tmp_104_reg_1844;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage13) & (1'b1 == ap_predicate_op311_write_state27) & (ap_block_pp1_stage13_01001 == 1'b0))) begin
        stream_V_din = tmp_103_reg_1839;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage12) & (1'b1 == ap_predicate_op309_write_state26) & (ap_block_pp1_stage12_01001 == 1'b0))) begin
        stream_V_din = tmp_102_reg_1834;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage11) & (1'b1 == ap_predicate_op307_write_state25) & (ap_block_pp1_stage11_01001 == 1'b0))) begin
        stream_V_din = tmp_101_reg_1829;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage10) & (1'b1 == ap_predicate_op305_write_state24) & (ap_block_pp1_stage10_01001 == 1'b0))) begin
        stream_V_din = tmp_100_reg_1824;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage9) & (1'b1 == ap_predicate_op303_write_state23) & (ap_block_pp1_stage9_01001 == 1'b0))) begin
        stream_V_din = tmp_99_reg_1819;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage8) & (1'b1 == ap_predicate_op301_write_state22) & (ap_block_pp1_stage8_01001 == 1'b0))) begin
        stream_V_din = tmp_98_reg_1814;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage7) & (1'b1 == ap_predicate_op299_write_state21) & (ap_block_pp1_stage7_01001 == 1'b0))) begin
        stream_V_din = tmp_97_reg_1809;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b1 == ap_predicate_op297_write_state20) & (ap_block_pp1_stage6_01001 == 1'b0))) begin
        stream_V_din = tmp_96_reg_1804;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b1 == ap_predicate_op295_write_state19) & (ap_block_pp1_stage5_01001 == 1'b0))) begin
        stream_V_din = tmp_95_reg_1799;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b1 == ap_predicate_op293_write_state18) & (ap_block_pp1_stage4_01001 == 1'b0))) begin
        stream_V_din = tmp_94_reg_1794;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b1 == ap_predicate_op291_write_state17) & (ap_block_pp1_stage3_01001 == 1'b0))) begin
        stream_V_din = tmp_93_reg_1789;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b1 == ap_predicate_op289_write_state16) & (ap_block_pp1_stage2_01001 == 1'b0))) begin
        stream_V_din = tmp_92_reg_1784;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_predicate_op256_write_state15) & (ap_block_pp1_stage1_01001 == 1'b0))) begin
        stream_V_din = tmp_91_fu_1098_p1;
    end else begin
        stream_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_predicate_op256_write_state15) & (ap_block_pp1_stage1_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b1 == ap_predicate_op289_write_state16) & (ap_block_pp1_stage2_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b1 == ap_predicate_op291_write_state17) & (ap_block_pp1_stage3_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b1 == ap_predicate_op293_write_state18) & (ap_block_pp1_stage4_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b1 == ap_predicate_op295_write_state19) & (ap_block_pp1_stage5_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b1 == ap_predicate_op297_write_state20) & (ap_block_pp1_stage6_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage7) & (1'b1 == ap_predicate_op299_write_state21) & (ap_block_pp1_stage7_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage8) & (1'b1 == ap_predicate_op301_write_state22) & (ap_block_pp1_stage8_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage9) & (1'b1 == ap_predicate_op303_write_state23) & (ap_block_pp1_stage9_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage10) & (1'b1 == ap_predicate_op305_write_state24) & (ap_block_pp1_stage10_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage11) & (1'b1 == ap_predicate_op307_write_state25) & (ap_block_pp1_stage11_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage12) & (1'b1 == ap_predicate_op309_write_state26) & (ap_block_pp1_stage12_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage13) & (1'b1 == ap_predicate_op311_write_state27) & (ap_block_pp1_stage13_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage14) & (1'b1 == ap_predicate_op313_write_state28) & (ap_block_pp1_stage14_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage15) & (1'b1 == ap_predicate_op315_write_state29) & (ap_block_pp1_stage15_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage16) & (1'b1 == ap_predicate_op317_write_state30) & (ap_block_pp1_stage16_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage17) & (1'b1 == ap_predicate_op319_write_state31) & (ap_block_pp1_stage17_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage18) & (1'b1 == ap_predicate_op321_write_state32) & (ap_block_pp1_stage18_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage19) & (1'b1 == ap_predicate_op323_write_state33) & (ap_block_pp1_stage19_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage20) & (1'b1 == ap_predicate_op325_write_state34) & (ap_block_pp1_stage20_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage21) & (1'b1 == ap_predicate_op327_write_state35) & (ap_block_pp1_stage21_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage22) & (1'b1 == ap_predicate_op329_write_state36) & (ap_block_pp1_stage22_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage23) & (1'b1 == ap_predicate_op331_write_state37) & (ap_block_pp1_stage23_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage24) & (1'b1 == ap_predicate_op333_write_state38) & (ap_block_pp1_stage24_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage25) & (1'b1 == ap_predicate_op335_write_state39) & (ap_block_pp1_stage25_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage26) & (1'b1 == ap_predicate_op337_write_state40) & (ap_block_pp1_stage26_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage27) & (1'b1 == ap_predicate_op339_write_state41) & (ap_block_pp1_stage27_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage28) & (1'b1 == ap_predicate_op341_write_state42) & (ap_block_pp1_stage28_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage29) & (1'b1 == ap_predicate_op343_write_state43) & (ap_block_pp1_stage29_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage30) & (1'b1 == ap_predicate_op345_write_state44) & (ap_block_pp1_stage30_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b1 == ap_CS_fsm_pp1_stage31) & (1'b1 == ap_predicate_op347_write_state45) & (ap_block_pp1_stage31_11001 == 1'b0)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == or_cond_i_i_i_i_211_reg_1780) & (ap_block_pp1_stage0_11001 == 1'b0)))) begin
        stream_V_write = 1'b1;
    end else begin
        stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        stride_out_blk_n = stride_out_full_n;
    end else begin
        stride_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == coeffs_out_full_n) | (1'b0 == dst_V_out_full_n) | (1'b0 == width_out_full_n) | (1'b0 == height_out_full_n) | (1'b0 == stride_out_full_n)))) begin
        stride_out_write = 1'b1;
    end else begin
        stride_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        width_out_blk_n = width_out_full_n;
    end else begin
        width_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == coeffs_out_full_n) | (1'b0 == dst_V_out_full_n) | (1'b0 == width_out_full_n) | (1'b0 == height_out_full_n) | (1'b0 == stride_out_full_n)))) begin
        width_out_write = 1'b1;
    end else begin
        width_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == exitcond_i_i_reg_1642) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (ap_block_pp1_stage0 == 1'b0))) begin
        x1_i_i_i_i_phi_fu_537_p4 = x_2_reg_1646;
    end else begin
        x1_i_i_i_i_phi_fu_537_p4 = x1_i_i_i_i_reg_533;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (1'd0 == exitcond1_i_i_reg_1623))) begin
        x_i_i_i_i_phi_fu_525_p4 = x_reg_1627;
    end else begin
        x_i_i_i_i_phi_fu_525_p4 = x_i_i_i_i_reg_521;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == coeffs_out_full_n) | (1'b0 == dst_V_out_full_n) | (1'b0 == width_out_full_n) | (1'b0 == height_out_full_n) | (1'b0 == stride_out_full_n)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond2_i_i_i_i_fu_862_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (ap_sig_ioackin_m_axi_axi_V_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'd1 == exitcond1_i_i_fu_892_p2) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'd1 == exitcond1_i_i_fu_892_p2) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (((ap_block_pp1_stage0_subdone == 1'b0) & ~((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_subdone == 1'b0) & (1'd1 == exitcond_i_i_fu_913_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (ap_block_pp1_stage0_subdone == 1'b0) & (1'd1 == exitcond_i_i_fu_913_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((ap_block_pp1_stage1_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((ap_block_pp1_stage2_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((ap_block_pp1_stage3_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((ap_block_pp1_stage4_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_pp1_stage5 : begin
            if ((ap_block_pp1_stage5_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end
        end
        ap_ST_fsm_pp1_stage6 : begin
            if ((ap_block_pp1_stage6_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end
        end
        ap_ST_fsm_pp1_stage7 : begin
            if ((ap_block_pp1_stage7_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end
        end
        ap_ST_fsm_pp1_stage8 : begin
            if ((ap_block_pp1_stage8_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end
        end
        ap_ST_fsm_pp1_stage9 : begin
            if ((ap_block_pp1_stage9_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage9;
            end
        end
        ap_ST_fsm_pp1_stage10 : begin
            if ((ap_block_pp1_stage10_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage10;
            end
        end
        ap_ST_fsm_pp1_stage11 : begin
            if ((ap_block_pp1_stage11_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage11;
            end
        end
        ap_ST_fsm_pp1_stage12 : begin
            if ((ap_block_pp1_stage12_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage12;
            end
        end
        ap_ST_fsm_pp1_stage13 : begin
            if ((ap_block_pp1_stage13_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage13;
            end
        end
        ap_ST_fsm_pp1_stage14 : begin
            if ((ap_block_pp1_stage14_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage14;
            end
        end
        ap_ST_fsm_pp1_stage15 : begin
            if ((ap_block_pp1_stage15_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage15;
            end
        end
        ap_ST_fsm_pp1_stage16 : begin
            if ((ap_block_pp1_stage16_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage16;
            end
        end
        ap_ST_fsm_pp1_stage17 : begin
            if ((ap_block_pp1_stage17_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage17;
            end
        end
        ap_ST_fsm_pp1_stage18 : begin
            if ((ap_block_pp1_stage18_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage18;
            end
        end
        ap_ST_fsm_pp1_stage19 : begin
            if ((ap_block_pp1_stage19_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage19;
            end
        end
        ap_ST_fsm_pp1_stage20 : begin
            if ((ap_block_pp1_stage20_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage20;
            end
        end
        ap_ST_fsm_pp1_stage21 : begin
            if ((ap_block_pp1_stage21_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage21;
            end
        end
        ap_ST_fsm_pp1_stage22 : begin
            if ((ap_block_pp1_stage22_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage22;
            end
        end
        ap_ST_fsm_pp1_stage23 : begin
            if ((ap_block_pp1_stage23_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage23;
            end
        end
        ap_ST_fsm_pp1_stage24 : begin
            if ((ap_block_pp1_stage24_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage24;
            end
        end
        ap_ST_fsm_pp1_stage25 : begin
            if ((ap_block_pp1_stage25_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage25;
            end
        end
        ap_ST_fsm_pp1_stage26 : begin
            if ((ap_block_pp1_stage26_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage26;
            end
        end
        ap_ST_fsm_pp1_stage27 : begin
            if ((ap_block_pp1_stage27_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage27;
            end
        end
        ap_ST_fsm_pp1_stage28 : begin
            if ((ap_block_pp1_stage28_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage28;
            end
        end
        ap_ST_fsm_pp1_stage29 : begin
            if ((ap_block_pp1_stage29_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage29;
            end
        end
        ap_ST_fsm_pp1_stage30 : begin
            if ((ap_block_pp1_stage30_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage30;
            end
        end
        ap_ST_fsm_pp1_stage31 : begin
            if ((ap_block_pp1_stage31_subdone == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage31;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp1_stage10 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp1_stage11 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp1_stage12 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp1_stage13 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp1_stage14 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp1_stage15 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp1_stage16 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp1_stage17 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp1_stage18 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp1_stage19 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp1_stage20 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp1_stage21 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp1_stage22 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp1_stage23 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp1_stage24 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp1_stage25 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp1_stage26 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp1_stage27 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp1_stage28 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp1_stage29 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp1_stage30 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp1_stage31 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp1_stage5 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage6 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp1_stage7 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp1_stage8 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp1_stage9 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == exitcond1_i_i_reg_1623) & (1'b0 == m_axi_axi_V_RVALID));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'd0 == exitcond1_i_i_reg_1623) & (1'b0 == m_axi_axi_V_RVALID));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == or_cond_i_i_i_i_211_reg_1780) & (1'b0 == stream_V_full_n));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == or_cond_i_i_i_i_211_reg_1780) & (1'b0 == stream_V_full_n));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((1'b1 == ap_enable_reg_pp1_iter1) & (1'd1 == or_cond_i_i_i_i_211_reg_1780) & (1'b0 == stream_V_full_n));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage10_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op305_write_state24));
end

always @ (*) begin
    ap_block_pp1_stage10_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op305_write_state24));
end

always @ (*) begin
    ap_block_pp1_stage10_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op305_write_state24));
end

assign ap_block_pp1_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage11_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op307_write_state25));
end

always @ (*) begin
    ap_block_pp1_stage11_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op307_write_state25));
end

always @ (*) begin
    ap_block_pp1_stage11_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op307_write_state25));
end

assign ap_block_pp1_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage12_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op309_write_state26));
end

always @ (*) begin
    ap_block_pp1_stage12_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op309_write_state26));
end

always @ (*) begin
    ap_block_pp1_stage12_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op309_write_state26));
end

assign ap_block_pp1_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage13_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op311_write_state27));
end

always @ (*) begin
    ap_block_pp1_stage13_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op311_write_state27));
end

always @ (*) begin
    ap_block_pp1_stage13_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op311_write_state27));
end

assign ap_block_pp1_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage14_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op313_write_state28));
end

always @ (*) begin
    ap_block_pp1_stage14_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op313_write_state28));
end

always @ (*) begin
    ap_block_pp1_stage14_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op313_write_state28));
end

assign ap_block_pp1_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage15_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op315_write_state29));
end

always @ (*) begin
    ap_block_pp1_stage15_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op315_write_state29));
end

always @ (*) begin
    ap_block_pp1_stage15_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op315_write_state29));
end

assign ap_block_pp1_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage16_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op317_write_state30));
end

always @ (*) begin
    ap_block_pp1_stage16_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op317_write_state30));
end

always @ (*) begin
    ap_block_pp1_stage16_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op317_write_state30));
end

assign ap_block_pp1_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage17_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op319_write_state31));
end

always @ (*) begin
    ap_block_pp1_stage17_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op319_write_state31));
end

always @ (*) begin
    ap_block_pp1_stage17_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op319_write_state31));
end

assign ap_block_pp1_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage18_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op321_write_state32));
end

always @ (*) begin
    ap_block_pp1_stage18_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op321_write_state32));
end

always @ (*) begin
    ap_block_pp1_stage18_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op321_write_state32));
end

assign ap_block_pp1_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage19_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op323_write_state33));
end

always @ (*) begin
    ap_block_pp1_stage19_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op323_write_state33));
end

always @ (*) begin
    ap_block_pp1_stage19_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op323_write_state33));
end

always @ (*) begin
    ap_block_pp1_stage1_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op256_write_state15));
end

always @ (*) begin
    ap_block_pp1_stage1_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op256_write_state15));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op256_write_state15));
end

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage20_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op325_write_state34));
end

always @ (*) begin
    ap_block_pp1_stage20_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op325_write_state34));
end

always @ (*) begin
    ap_block_pp1_stage20_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op325_write_state34));
end

assign ap_block_pp1_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage21_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op327_write_state35));
end

always @ (*) begin
    ap_block_pp1_stage21_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op327_write_state35));
end

always @ (*) begin
    ap_block_pp1_stage21_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op327_write_state35));
end

assign ap_block_pp1_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage22_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op329_write_state36));
end

always @ (*) begin
    ap_block_pp1_stage22_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op329_write_state36));
end

always @ (*) begin
    ap_block_pp1_stage22_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op329_write_state36));
end

assign ap_block_pp1_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage23_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op331_write_state37));
end

always @ (*) begin
    ap_block_pp1_stage23_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op331_write_state37));
end

always @ (*) begin
    ap_block_pp1_stage23_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op331_write_state37));
end

assign ap_block_pp1_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage24_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op333_write_state38));
end

always @ (*) begin
    ap_block_pp1_stage24_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op333_write_state38));
end

always @ (*) begin
    ap_block_pp1_stage24_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op333_write_state38));
end

assign ap_block_pp1_stage25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage25_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op335_write_state39));
end

always @ (*) begin
    ap_block_pp1_stage25_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op335_write_state39));
end

always @ (*) begin
    ap_block_pp1_stage25_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op335_write_state39));
end

assign ap_block_pp1_stage26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage26_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op337_write_state40));
end

always @ (*) begin
    ap_block_pp1_stage26_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op337_write_state40));
end

always @ (*) begin
    ap_block_pp1_stage26_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op337_write_state40));
end

assign ap_block_pp1_stage27 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage27_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op339_write_state41));
end

always @ (*) begin
    ap_block_pp1_stage27_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op339_write_state41));
end

always @ (*) begin
    ap_block_pp1_stage27_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op339_write_state41));
end

assign ap_block_pp1_stage28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage28_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op341_write_state42));
end

always @ (*) begin
    ap_block_pp1_stage28_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op341_write_state42));
end

always @ (*) begin
    ap_block_pp1_stage28_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op341_write_state42));
end

assign ap_block_pp1_stage29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage29_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op343_write_state43));
end

always @ (*) begin
    ap_block_pp1_stage29_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op343_write_state43));
end

always @ (*) begin
    ap_block_pp1_stage29_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op343_write_state43));
end

always @ (*) begin
    ap_block_pp1_stage2_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op289_write_state16));
end

always @ (*) begin
    ap_block_pp1_stage2_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op289_write_state16));
end

always @ (*) begin
    ap_block_pp1_stage2_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op289_write_state16));
end

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage30_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op345_write_state44));
end

always @ (*) begin
    ap_block_pp1_stage30_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op345_write_state44));
end

always @ (*) begin
    ap_block_pp1_stage30_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op345_write_state44));
end

assign ap_block_pp1_stage31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage31_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op347_write_state45));
end

always @ (*) begin
    ap_block_pp1_stage31_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op347_write_state45));
end

always @ (*) begin
    ap_block_pp1_stage31_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op347_write_state45));
end

always @ (*) begin
    ap_block_pp1_stage3_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op291_write_state17));
end

always @ (*) begin
    ap_block_pp1_stage3_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op291_write_state17));
end

always @ (*) begin
    ap_block_pp1_stage3_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op291_write_state17));
end

assign ap_block_pp1_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage4_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op293_write_state18));
end

always @ (*) begin
    ap_block_pp1_stage4_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op293_write_state18));
end

always @ (*) begin
    ap_block_pp1_stage4_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op293_write_state18));
end

assign ap_block_pp1_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage5_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op295_write_state19));
end

always @ (*) begin
    ap_block_pp1_stage5_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op295_write_state19));
end

always @ (*) begin
    ap_block_pp1_stage5_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op295_write_state19));
end

assign ap_block_pp1_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage6_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op297_write_state20));
end

always @ (*) begin
    ap_block_pp1_stage6_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op297_write_state20));
end

always @ (*) begin
    ap_block_pp1_stage6_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op297_write_state20));
end

assign ap_block_pp1_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage7_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op299_write_state21));
end

always @ (*) begin
    ap_block_pp1_stage7_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op299_write_state21));
end

always @ (*) begin
    ap_block_pp1_stage7_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op299_write_state21));
end

assign ap_block_pp1_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage8_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op301_write_state22));
end

always @ (*) begin
    ap_block_pp1_stage8_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op301_write_state22));
end

always @ (*) begin
    ap_block_pp1_stage8_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op301_write_state22));
end

assign ap_block_pp1_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage9_01001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op303_write_state23));
end

always @ (*) begin
    ap_block_pp1_stage9_11001 = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op303_write_state23));
end

always @ (*) begin
    ap_block_pp1_stage9_subdone = ((1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op303_write_state23));
end

always @ (*) begin
    ap_block_state1 = ((1'b0 == ap_start) | (ap_done_reg == 1'b1) | (1'b0 == coeffs_out_full_n) | (1'b0 == dst_V_out_full_n) | (1'b0 == width_out_full_n) | (1'b0 == height_out_full_n) | (1'b0 == stride_out_full_n));
end

assign ap_block_state10_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter1 = ((1'd0 == exitcond1_i_i_reg_1623) & (1'b0 == m_axi_axi_V_RVALID));
end

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp1_stage1_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op256_write_state15));
end

always @ (*) begin
    ap_block_state16_pp1_stage2_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op289_write_state16));
end

always @ (*) begin
    ap_block_state17_pp1_stage3_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op291_write_state17));
end

always @ (*) begin
    ap_block_state18_pp1_stage4_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op293_write_state18));
end

always @ (*) begin
    ap_block_state19_pp1_stage5_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op295_write_state19));
end

always @ (*) begin
    ap_block_state20_pp1_stage6_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op297_write_state20));
end

always @ (*) begin
    ap_block_state21_pp1_stage7_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op299_write_state21));
end

always @ (*) begin
    ap_block_state22_pp1_stage8_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op301_write_state22));
end

always @ (*) begin
    ap_block_state23_pp1_stage9_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op303_write_state23));
end

always @ (*) begin
    ap_block_state24_pp1_stage10_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op305_write_state24));
end

always @ (*) begin
    ap_block_state25_pp1_stage11_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op307_write_state25));
end

always @ (*) begin
    ap_block_state26_pp1_stage12_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op309_write_state26));
end

always @ (*) begin
    ap_block_state27_pp1_stage13_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op311_write_state27));
end

always @ (*) begin
    ap_block_state28_pp1_stage14_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op313_write_state28));
end

always @ (*) begin
    ap_block_state29_pp1_stage15_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op315_write_state29));
end

always @ (*) begin
    ap_block_state30_pp1_stage16_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op317_write_state30));
end

always @ (*) begin
    ap_block_state31_pp1_stage17_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op319_write_state31));
end

always @ (*) begin
    ap_block_state32_pp1_stage18_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op321_write_state32));
end

always @ (*) begin
    ap_block_state33_pp1_stage19_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op323_write_state33));
end

always @ (*) begin
    ap_block_state34_pp1_stage20_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op325_write_state34));
end

always @ (*) begin
    ap_block_state35_pp1_stage21_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op327_write_state35));
end

always @ (*) begin
    ap_block_state36_pp1_stage22_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op329_write_state36));
end

always @ (*) begin
    ap_block_state37_pp1_stage23_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op331_write_state37));
end

always @ (*) begin
    ap_block_state38_pp1_stage24_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op333_write_state38));
end

always @ (*) begin
    ap_block_state39_pp1_stage25_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op335_write_state39));
end

always @ (*) begin
    ap_block_state40_pp1_stage26_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op337_write_state40));
end

always @ (*) begin
    ap_block_state41_pp1_stage27_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op339_write_state41));
end

always @ (*) begin
    ap_block_state42_pp1_stage28_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op341_write_state42));
end

always @ (*) begin
    ap_block_state43_pp1_stage29_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op343_write_state43));
end

always @ (*) begin
    ap_block_state44_pp1_stage30_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op345_write_state44));
end

always @ (*) begin
    ap_block_state45_pp1_stage31_iter0 = ((1'b0 == stream_V_full_n) & (1'b1 == ap_predicate_op347_write_state45));
end

always @ (*) begin
    ap_block_state46_pp1_stage0_iter1 = ((1'd1 == or_cond_i_i_i_i_211_reg_1780) & (1'b0 == stream_V_full_n));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_ext_blocking_cur_n = (axi_V_blk_n_AR & axi_V_blk_n_R);

assign ap_ext_blocking_n = (ap_ext_blocking_cur_n & 1'b1);

assign ap_int_blocking_cur_n = (stream_V_blk_n & width_out_blk_n & height_out_blk_n & stride_out_blk_n & coeffs_out_blk_n & dst_V_out_blk_n);

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

always @ (*) begin
    ap_predicate_op256_write_state15 = ((1'd0 == exitcond_i_i_reg_1642) & (or_cond_i_i_i_i_reg_1656 == 1'd1));
end

always @ (*) begin
    ap_predicate_op289_write_state16 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_1_i_i_i_i_reg_1660));
end

always @ (*) begin
    ap_predicate_op291_write_state17 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_2_i_i_i_i_reg_1664));
end

always @ (*) begin
    ap_predicate_op293_write_state18 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_3_i_i_i_i_reg_1668));
end

always @ (*) begin
    ap_predicate_op295_write_state19 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_4_i_i_i_i_reg_1672));
end

always @ (*) begin
    ap_predicate_op297_write_state20 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_5_i_i_i_i_reg_1676));
end

always @ (*) begin
    ap_predicate_op299_write_state21 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_6_i_i_i_i_reg_1680));
end

always @ (*) begin
    ap_predicate_op301_write_state22 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_7_i_i_i_i_reg_1684));
end

always @ (*) begin
    ap_predicate_op303_write_state23 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_8_i_i_i_i_reg_1688));
end

always @ (*) begin
    ap_predicate_op305_write_state24 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_9_i_i_i_i_reg_1692));
end

always @ (*) begin
    ap_predicate_op307_write_state25 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_10_i_i_i_i_reg_1696));
end

always @ (*) begin
    ap_predicate_op309_write_state26 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_11_i_i_i_i_reg_1700));
end

always @ (*) begin
    ap_predicate_op311_write_state27 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_12_i_i_i_i_reg_1704));
end

always @ (*) begin
    ap_predicate_op313_write_state28 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_13_i_i_i_i_reg_1708));
end

always @ (*) begin
    ap_predicate_op315_write_state29 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_14_i_i_i_i_reg_1712));
end

always @ (*) begin
    ap_predicate_op317_write_state30 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_15_i_i_i_i_reg_1716));
end

always @ (*) begin
    ap_predicate_op319_write_state31 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_16_i_i_i_i_reg_1720));
end

always @ (*) begin
    ap_predicate_op321_write_state32 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_17_i_i_i_i_reg_1724));
end

always @ (*) begin
    ap_predicate_op323_write_state33 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_18_i_i_i_i_reg_1728));
end

always @ (*) begin
    ap_predicate_op325_write_state34 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_19_i_i_i_i_reg_1732));
end

always @ (*) begin
    ap_predicate_op327_write_state35 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_20_i_i_i_i_reg_1736));
end

always @ (*) begin
    ap_predicate_op329_write_state36 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_21_i_i_i_i_reg_1740));
end

always @ (*) begin
    ap_predicate_op331_write_state37 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_22_i_i_i_i_reg_1744));
end

always @ (*) begin
    ap_predicate_op333_write_state38 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_23_i_i_i_i_reg_1748));
end

always @ (*) begin
    ap_predicate_op335_write_state39 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_24_i_i_i_i_reg_1752));
end

always @ (*) begin
    ap_predicate_op337_write_state40 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_25_i_i_i_i_reg_1756));
end

always @ (*) begin
    ap_predicate_op339_write_state41 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_26_i_i_i_i_reg_1760));
end

always @ (*) begin
    ap_predicate_op341_write_state42 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_27_i_i_i_i_reg_1764));
end

always @ (*) begin
    ap_predicate_op343_write_state43 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_28_i_i_i_i_reg_1768));
end

always @ (*) begin
    ap_predicate_op345_write_state44 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_29_i_i_i_i_reg_1772));
end

always @ (*) begin
    ap_predicate_op347_write_state45 = ((1'd0 == exitcond_i_i_reg_1642) & (1'd1 == or_cond_30_i_i_i_i_reg_1776));
end

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign coeffs_out_din = coeffs;

assign dst_V_out_din = dst_V;

assign exitcond1_i_i_fu_892_p2 = ((x_i_i_i_i_phi_fu_525_p4 == loopWidth_cast6_i_i_i_i_reg_1423) ? 1'b1 : 1'b0);

assign exitcond2_i_i_i_i_fu_862_p2 = ((y_i_i_i_i_reg_510 == tmp_85_reg_1418) ? 1'b1 : 1'b0);

assign exitcond_i_i_fu_913_p2 = ((x1_i_i_i_i_phi_fu_537_p4 == loopWidth_cast6_i_i_i_i_reg_1423) ? 1'b1 : 1'b0);

assign height_out_din = height;

assign icmp1_fu_670_p2 = ((tmp_88_fu_660_p4 != 4'd0) ? 1'b1 : 1'b0);

assign icmp2_fu_704_p2 = ((tmp_89_fu_694_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp3_fu_762_p2 = ((tmp_90_fu_752_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_fu_648_p2 = ((tmp_87_fu_638_p4 != 5'd0) ? 1'b1 : 1'b0);

assign loopWidth_cast6_i_i_i_i_fu_580_p4 = {{tmp_i_i_i_i_fu_574_p2[16:5]}};

assign m_axi_axi_V_ARADDR = sum_cast_i_i_fu_882_p1;

assign m_axi_axi_V_ARBURST = 2'd0;

assign m_axi_axi_V_ARCACHE = 4'd0;

assign m_axi_axi_V_ARID = 1'd0;

assign m_axi_axi_V_ARLEN = tmp_i_i_reg_1599;

assign m_axi_axi_V_ARLOCK = 2'd0;

assign m_axi_axi_V_ARPROT = 3'd0;

assign m_axi_axi_V_ARQOS = 4'd0;

assign m_axi_axi_V_ARREGION = 4'd0;

assign m_axi_axi_V_ARSIZE = 3'd0;

assign m_axi_axi_V_ARUSER = 1'd0;

assign m_axi_axi_V_AWADDR = 64'd0;

assign m_axi_axi_V_AWBURST = 2'd0;

assign m_axi_axi_V_AWCACHE = 4'd0;

assign m_axi_axi_V_AWID = 1'd0;

assign m_axi_axi_V_AWLEN = 32'd0;

assign m_axi_axi_V_AWLOCK = 2'd0;

assign m_axi_axi_V_AWPROT = 3'd0;

assign m_axi_axi_V_AWQOS = 4'd0;

assign m_axi_axi_V_AWREGION = 4'd0;

assign m_axi_axi_V_AWSIZE = 3'd0;

assign m_axi_axi_V_AWUSER = 1'd0;

assign m_axi_axi_V_AWVALID = 1'b0;

assign m_axi_axi_V_BREADY = 1'b0;

assign m_axi_axi_V_WDATA = 256'd0;

assign m_axi_axi_V_WID = 1'd0;

assign m_axi_axi_V_WLAST = 1'b0;

assign m_axi_axi_V_WSTRB = 32'd0;

assign m_axi_axi_V_WUSER = 1'd0;

assign m_axi_axi_V_WVALID = 1'b0;

assign or_cond_10_i_i_i_i_fu_988_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_i_i_i_i_210_reg_1494);

assign or_cond_11_i_i_i_i_fu_993_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_10_i_i_i_i_reg_1499);

assign or_cond_12_i_i_i_i_fu_998_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_11_i_i_i_i_reg_1504);

assign or_cond_13_i_i_i_i_fu_1003_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_12_i_i_i_i_reg_1509);

assign or_cond_14_i_i_i_i_fu_1008_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_13_i_i_i_i_reg_1514);

assign or_cond_15_i_i_i_i_fu_1013_p2 = (tmp_42_i_i_i_i_fu_933_p2 | icmp3_reg_1519);

assign or_cond_16_i_i_i_i_fu_1018_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_15_i_i_i_i_reg_1524);

assign or_cond_17_i_i_i_i_fu_1023_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_16_i_i_i_i_reg_1529);

assign or_cond_18_i_i_i_i_fu_1028_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_17_i_i_i_i_reg_1534);

assign or_cond_19_i_i_i_i_fu_1033_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_18_i_i_i_i_reg_1539);

assign or_cond_1_i_i_i_i_fu_943_p2 = (tmp_42_i_i_i_i_fu_933_p2 | icmp_reg_1449);

assign or_cond_20_i_i_i_i_fu_1038_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_19_i_i_i_i_reg_1544);

assign or_cond_21_i_i_i_i_fu_1043_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_20_i_i_i_i_reg_1549);

assign or_cond_22_i_i_i_i_fu_1048_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_21_i_i_i_i_reg_1554);

assign or_cond_23_i_i_i_i_fu_1053_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_22_i_i_i_i_reg_1559);

assign or_cond_24_i_i_i_i_fu_1058_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_23_i_i_i_i_reg_1564);

assign or_cond_25_i_i_i_i_fu_1063_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_24_i_i_i_i_reg_1569);

assign or_cond_26_i_i_i_i_fu_1068_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_25_i_i_i_i_reg_1574);

assign or_cond_27_i_i_i_i_fu_1073_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_26_i_i_i_i_reg_1579);

assign or_cond_28_i_i_i_i_fu_1078_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_27_i_i_i_i_reg_1584);

assign or_cond_29_i_i_i_i_fu_1083_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_28_i_i_i_i_reg_1589);

assign or_cond_2_i_i_i_i_fu_948_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_2_i_i_i_i_reg_1454);

assign or_cond_30_i_i_i_i_fu_1088_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_29_i_i_i_i_reg_1594);

assign or_cond_3_i_i_i_i_fu_953_p2 = (tmp_42_i_i_i_i_fu_933_p2 | icmp1_reg_1459);

assign or_cond_4_i_i_i_i_fu_958_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_4_i_i_i_i_reg_1464);

assign or_cond_5_i_i_i_i_fu_963_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_5_i_i_i_i_reg_1469);

assign or_cond_6_i_i_i_i_fu_968_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_6_i_i_i_i_reg_1474);

assign or_cond_7_i_i_i_i_fu_973_p2 = (tmp_42_i_i_i_i_fu_933_p2 | icmp2_reg_1479);

assign or_cond_8_i_i_i_i_fu_978_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_8_i_i_i_i_reg_1484);

assign or_cond_9_i_i_i_i_fu_983_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_9_i_i_i_i_reg_1489);

assign or_cond_i_i_i_i_211_fu_1093_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_i_i_i_i_209_reg_1429);

assign or_cond_i_i_i_i_fu_938_p2 = (tmp_42_i_i_i_i_fu_933_p2 | tmp_81_i_i_i_i_reg_1444);

assign remainPix_2_fu_600_p3 = ((tmp_i_i_i_i_209_fu_594_p2[0:0] === 1'b1) ? 6'd32 : remainPix_cast_i_i_i_i_fu_590_p1);

assign remainPix_cast_i_i_i_i_fu_590_p1 = remainPix_fu_570_p1;

assign remainPix_fu_570_p1 = width[4:0];

assign stride_out_din = stride;

assign sum_cast_i_i_fu_882_p1 = sum_i_i_reg_1612;

assign sum_i_i_fu_877_p2 = (tmp_683_cast_i_i_reg_1413 + tmp_1_cast_i_i_fu_873_p1);

assign tmp_1_cast_i_i_fu_873_p1 = yoffset_i_i_i_i_reg_498;

assign tmp_31_cast_i_i_i_i_fu_618_p1 = tmp_31_i_i_i_i_fu_608_p4;

assign tmp_31_i_i_i_i_fu_608_p4 = {{stride[15:5]}};

assign tmp_32_cast_i_i_i_i_fu_628_p1 = $signed(tmp_32_i_i_i_i_fu_622_p2);

assign tmp_32_i_i_i_i_fu_622_p2 = ($signed(12'd4095) + $signed(loopWidth_cast6_i_i_i_i_fu_580_p4));

assign tmp_36_i_i_i_i_fu_903_p1 = ap_reg_pp0_iter1_x_i_i_i_i_reg_521;

assign tmp_41_i_i_i_i_fu_928_p1 = x1_i_i_i_i_phi_fu_537_p4;

assign tmp_42_i_i_i_i_fu_933_p2 = (($signed(x1_cast_i_i_i_i_fu_924_p1) < $signed(tmp_32_cast_i_i_i_i_reg_1439)) ? 1'b1 : 1'b0);

assign tmp_683_cast_i_i_fu_554_p1 = tmp_fu_544_p4;

assign tmp_81_10_i_i_i_i_fu_728_p2 = ((remainPix_2_fu_600_p3 > 6'd11) ? 1'b1 : 1'b0);

assign tmp_81_11_i_i_i_i_fu_734_p2 = ((remainPix_2_fu_600_p3 > 6'd12) ? 1'b1 : 1'b0);

assign tmp_81_12_i_i_i_i_fu_740_p2 = ((remainPix_2_fu_600_p3 > 6'd13) ? 1'b1 : 1'b0);

assign tmp_81_13_i_i_i_i_fu_746_p2 = ((remainPix_2_fu_600_p3 > 6'd14) ? 1'b1 : 1'b0);

assign tmp_81_15_i_i_i_i_fu_768_p2 = ((remainPix_2_fu_600_p3 > 6'd16) ? 1'b1 : 1'b0);

assign tmp_81_16_i_i_i_i_fu_774_p2 = ((remainPix_2_fu_600_p3 > 6'd17) ? 1'b1 : 1'b0);

assign tmp_81_17_i_i_i_i_fu_780_p2 = ((remainPix_2_fu_600_p3 > 6'd18) ? 1'b1 : 1'b0);

assign tmp_81_18_i_i_i_i_fu_786_p2 = ((remainPix_2_fu_600_p3 > 6'd19) ? 1'b1 : 1'b0);

assign tmp_81_19_i_i_i_i_fu_792_p2 = ((remainPix_2_fu_600_p3 > 6'd20) ? 1'b1 : 1'b0);

assign tmp_81_20_i_i_i_i_fu_798_p2 = ((remainPix_2_fu_600_p3 > 6'd21) ? 1'b1 : 1'b0);

assign tmp_81_21_i_i_i_i_fu_804_p2 = ((remainPix_2_fu_600_p3 > 6'd22) ? 1'b1 : 1'b0);

assign tmp_81_22_i_i_i_i_fu_810_p2 = ((remainPix_2_fu_600_p3 > 6'd23) ? 1'b1 : 1'b0);

assign tmp_81_23_i_i_i_i_fu_816_p2 = ((remainPix_2_fu_600_p3 > 6'd24) ? 1'b1 : 1'b0);

assign tmp_81_24_i_i_i_i_fu_822_p2 = ((remainPix_2_fu_600_p3 > 6'd25) ? 1'b1 : 1'b0);

assign tmp_81_25_i_i_i_i_fu_828_p2 = ((remainPix_2_fu_600_p3 > 6'd26) ? 1'b1 : 1'b0);

assign tmp_81_26_i_i_i_i_fu_834_p2 = ((remainPix_2_fu_600_p3 > 6'd27) ? 1'b1 : 1'b0);

assign tmp_81_27_i_i_i_i_fu_840_p2 = ((remainPix_2_fu_600_p3 > 6'd28) ? 1'b1 : 1'b0);

assign tmp_81_28_i_i_i_i_fu_846_p2 = ((remainPix_2_fu_600_p3 > 6'd29) ? 1'b1 : 1'b0);

assign tmp_81_29_i_i_i_i_fu_852_p2 = ((remainPix_2_fu_600_p3 > 6'd30) ? 1'b1 : 1'b0);

assign tmp_81_2_i_i_i_i_fu_654_p2 = ((remainPix_2_fu_600_p3 > 6'd2) ? 1'b1 : 1'b0);

assign tmp_81_4_i_i_i_i_fu_676_p2 = ((remainPix_2_fu_600_p3 > 6'd4) ? 1'b1 : 1'b0);

assign tmp_81_5_i_i_i_i_fu_682_p2 = ((remainPix_2_fu_600_p3 > 6'd5) ? 1'b1 : 1'b0);

assign tmp_81_6_i_i_i_i_fu_688_p2 = ((remainPix_2_fu_600_p3 > 6'd6) ? 1'b1 : 1'b0);

assign tmp_81_8_i_i_i_i_fu_710_p2 = ((remainPix_2_fu_600_p3 > 6'd8) ? 1'b1 : 1'b0);

assign tmp_81_9_i_i_i_i_fu_716_p2 = ((remainPix_2_fu_600_p3 > 6'd9) ? 1'b1 : 1'b0);

assign tmp_81_i_i_i_i_210_fu_722_p2 = ((remainPix_2_fu_600_p3 > 6'd10) ? 1'b1 : 1'b0);

assign tmp_81_i_i_i_i_fu_632_p2 = ((remainPix_2_fu_600_p3 != 6'd0) ? 1'b1 : 1'b0);

assign tmp_84_fu_558_p1 = width[15:0];

assign tmp_85_fu_562_p1 = height[15:0];

assign tmp_87_fu_638_p4 = {{remainPix_2_fu_600_p3[5:1]}};

assign tmp_88_fu_660_p4 = {{remainPix_2_fu_600_p3[5:2]}};

assign tmp_89_fu_694_p4 = {{remainPix_2_fu_600_p3[5:3]}};

assign tmp_90_fu_752_p4 = {{remainPix_2_fu_600_p3[5:4]}};

assign tmp_91_fu_1098_p1 = buff_V_q0[7:0];

assign tmp_fu_544_p4 = {{axi_V_offset[63:5]}};

assign tmp_i_i_fu_858_p1 = loopWidth_cast6_i_i_i_i_fu_580_p4;

assign tmp_i_i_i_i_209_fu_594_p2 = ((remainPix_fu_570_p1 == 5'd0) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i_fu_574_p2 = (17'd31 + widthInPix_cast7_i_i_i_i_fu_566_p1);

assign widthInPix_cast7_i_i_i_i_fu_566_p1 = tmp_84_fu_558_p1;

assign width_out_din = width;

assign x1_cast_i_i_i_i_fu_924_p1 = x1_i_i_i_i_phi_fu_537_p4;

assign x_2_fu_918_p2 = (x1_i_i_i_i_phi_fu_537_p4 + 12'd1);

assign x_fu_897_p2 = (x_i_i_i_i_phi_fu_525_p4 + 12'd1);

assign y_fu_867_p2 = (y_i_i_i_i_reg_510 + 16'd1);

assign yoffset_fu_908_p2 = (tmp_31_cast_i_i_i_i_reg_1434 + yoffset_i_i_i_i_reg_498);

always @ (posedge ap_clk) begin
    tmp_683_cast_i_i_reg_1413[59] <= 1'b0;
    tmp_31_cast_i_i_i_i_reg_1434[26:11] <= 16'b0000000000000000;
    tmp_i_i_reg_1599[31:12] <= 20'b00000000000000000000;
end

endmodule //AXIBursts2PixelStream8
