// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Filter2DKernel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int Filter2DKernel::C_S_AXI_DATA_WIDTH = "100000";
const int Filter2DKernel::C_S_AXI_WSTRB_WIDTH = "100";
const int Filter2DKernel::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic Filter2DKernel::ap_const_logic_1 = sc_dt::Log_1;
const int Filter2DKernel::C_M_AXI_GMEM1_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int Filter2DKernel::C_M_AXI_GMEM1_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int Filter2DKernel::C_M_AXI_GMEM1_CACHE_VALUE = "11";
const int Filter2DKernel::C_M_AXI_ID_WIDTH = "1";
const int Filter2DKernel::C_M_AXI_ADDR_WIDTH = "1000000";
const int Filter2DKernel::C_M_AXI_DATA_WIDTH = "100000";
const int Filter2DKernel::C_M_AXI_WSTRB_WIDTH = "100";
const int Filter2DKernel::C_M_AXI_AWUSER_WIDTH = "1";
const int Filter2DKernel::C_M_AXI_ARUSER_WIDTH = "1";
const int Filter2DKernel::C_M_AXI_WUSER_WIDTH = "1";
const int Filter2DKernel::C_M_AXI_RUSER_WIDTH = "1";
const int Filter2DKernel::C_M_AXI_BUSER_WIDTH = "1";
const int Filter2DKernel::C_M_AXI_GMEM0_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int Filter2DKernel::C_M_AXI_GMEM0_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int Filter2DKernel::C_M_AXI_GMEM0_CACHE_VALUE = "11";
const sc_logic Filter2DKernel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> Filter2DKernel::ap_const_lv2_0 = "00";
const sc_lv<2> Filter2DKernel::ap_const_lv2_1 = "1";
const bool Filter2DKernel::ap_const_boolean_1 = true;
const sc_lv<64> Filter2DKernel::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> Filter2DKernel::ap_const_lv64_1 = "1";
const sc_lv<1> Filter2DKernel::ap_const_lv1_0 = "0";
const sc_lv<1> Filter2DKernel::ap_const_lv1_1 = "1";
const sc_lv<32> Filter2DKernel::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Filter2DKernel::ap_const_lv32_1 = "1";
const sc_lv<3> Filter2DKernel::ap_const_lv3_0 = "000";
const sc_lv<3> Filter2DKernel::ap_const_lv3_1 = "1";
const sc_lv<4> Filter2DKernel::ap_const_lv4_0 = "0000";
const sc_lv<4> Filter2DKernel::ap_const_lv4_1 = "1";
const sc_lv<256> Filter2DKernel::ap_const_lv256_lc_1 = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<256> Filter2DKernel::ap_const_lv256_lc_2 = "1";

Filter2DKernel::Filter2DKernel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Filter2DKernel_control_s_axi_U = new Filter2DKernel_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("Filter2DKernel_control_s_axi_U");
    Filter2DKernel_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    Filter2DKernel_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    Filter2DKernel_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    Filter2DKernel_control_s_axi_U->WVALID(s_axi_control_WVALID);
    Filter2DKernel_control_s_axi_U->WREADY(s_axi_control_WREADY);
    Filter2DKernel_control_s_axi_U->WDATA(s_axi_control_WDATA);
    Filter2DKernel_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    Filter2DKernel_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    Filter2DKernel_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    Filter2DKernel_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    Filter2DKernel_control_s_axi_U->RVALID(s_axi_control_RVALID);
    Filter2DKernel_control_s_axi_U->RREADY(s_axi_control_RREADY);
    Filter2DKernel_control_s_axi_U->RDATA(s_axi_control_RDATA);
    Filter2DKernel_control_s_axi_U->RRESP(s_axi_control_RRESP);
    Filter2DKernel_control_s_axi_U->BVALID(s_axi_control_BVALID);
    Filter2DKernel_control_s_axi_U->BREADY(s_axi_control_BREADY);
    Filter2DKernel_control_s_axi_U->BRESP(s_axi_control_BRESP);
    Filter2DKernel_control_s_axi_U->ACLK(ap_clk);
    Filter2DKernel_control_s_axi_U->ARESET(ap_rst_n_inv);
    Filter2DKernel_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    Filter2DKernel_control_s_axi_U->ap_start(ap_start);
    Filter2DKernel_control_s_axi_U->interrupt(interrupt);
    Filter2DKernel_control_s_axi_U->ap_ready(ap_ready);
    Filter2DKernel_control_s_axi_U->ap_done(ap_done);
    Filter2DKernel_control_s_axi_U->ap_idle(ap_idle);
    Filter2DKernel_control_s_axi_U->coeffs(coeffs);
    Filter2DKernel_control_s_axi_U->src_V(src_V);
    Filter2DKernel_control_s_axi_U->width(width);
    Filter2DKernel_control_s_axi_U->height(height);
    Filter2DKernel_control_s_axi_U->stride(stride);
    Filter2DKernel_control_s_axi_U->dst_V(dst_V);
    Filter2DKernel_gmem1_m_axi_U = new Filter2DKernel_gmem1_m_axi<256,64,5,16,16,16,16,C_M_AXI_GMEM1_ID_WIDTH,C_M_AXI_GMEM1_ADDR_WIDTH,C_M_AXI_GMEM1_DATA_WIDTH,C_M_AXI_GMEM1_AWUSER_WIDTH,C_M_AXI_GMEM1_ARUSER_WIDTH,C_M_AXI_GMEM1_WUSER_WIDTH,C_M_AXI_GMEM1_RUSER_WIDTH,C_M_AXI_GMEM1_BUSER_WIDTH,C_M_AXI_GMEM1_USER_VALUE,C_M_AXI_GMEM1_PROT_VALUE,C_M_AXI_GMEM1_CACHE_VALUE>("Filter2DKernel_gmem1_m_axi_U");
    Filter2DKernel_gmem1_m_axi_U->AWVALID(m_axi_gmem1_AWVALID);
    Filter2DKernel_gmem1_m_axi_U->AWREADY(m_axi_gmem1_AWREADY);
    Filter2DKernel_gmem1_m_axi_U->AWADDR(m_axi_gmem1_AWADDR);
    Filter2DKernel_gmem1_m_axi_U->AWID(m_axi_gmem1_AWID);
    Filter2DKernel_gmem1_m_axi_U->AWLEN(m_axi_gmem1_AWLEN);
    Filter2DKernel_gmem1_m_axi_U->AWSIZE(m_axi_gmem1_AWSIZE);
    Filter2DKernel_gmem1_m_axi_U->AWBURST(m_axi_gmem1_AWBURST);
    Filter2DKernel_gmem1_m_axi_U->AWLOCK(m_axi_gmem1_AWLOCK);
    Filter2DKernel_gmem1_m_axi_U->AWCACHE(m_axi_gmem1_AWCACHE);
    Filter2DKernel_gmem1_m_axi_U->AWPROT(m_axi_gmem1_AWPROT);
    Filter2DKernel_gmem1_m_axi_U->AWQOS(m_axi_gmem1_AWQOS);
    Filter2DKernel_gmem1_m_axi_U->AWREGION(m_axi_gmem1_AWREGION);
    Filter2DKernel_gmem1_m_axi_U->AWUSER(m_axi_gmem1_AWUSER);
    Filter2DKernel_gmem1_m_axi_U->WVALID(m_axi_gmem1_WVALID);
    Filter2DKernel_gmem1_m_axi_U->WREADY(m_axi_gmem1_WREADY);
    Filter2DKernel_gmem1_m_axi_U->WDATA(m_axi_gmem1_WDATA);
    Filter2DKernel_gmem1_m_axi_U->WSTRB(m_axi_gmem1_WSTRB);
    Filter2DKernel_gmem1_m_axi_U->WLAST(m_axi_gmem1_WLAST);
    Filter2DKernel_gmem1_m_axi_U->WID(m_axi_gmem1_WID);
    Filter2DKernel_gmem1_m_axi_U->WUSER(m_axi_gmem1_WUSER);
    Filter2DKernel_gmem1_m_axi_U->ARVALID(m_axi_gmem1_ARVALID);
    Filter2DKernel_gmem1_m_axi_U->ARREADY(m_axi_gmem1_ARREADY);
    Filter2DKernel_gmem1_m_axi_U->ARADDR(m_axi_gmem1_ARADDR);
    Filter2DKernel_gmem1_m_axi_U->ARID(m_axi_gmem1_ARID);
    Filter2DKernel_gmem1_m_axi_U->ARLEN(m_axi_gmem1_ARLEN);
    Filter2DKernel_gmem1_m_axi_U->ARSIZE(m_axi_gmem1_ARSIZE);
    Filter2DKernel_gmem1_m_axi_U->ARBURST(m_axi_gmem1_ARBURST);
    Filter2DKernel_gmem1_m_axi_U->ARLOCK(m_axi_gmem1_ARLOCK);
    Filter2DKernel_gmem1_m_axi_U->ARCACHE(m_axi_gmem1_ARCACHE);
    Filter2DKernel_gmem1_m_axi_U->ARPROT(m_axi_gmem1_ARPROT);
    Filter2DKernel_gmem1_m_axi_U->ARQOS(m_axi_gmem1_ARQOS);
    Filter2DKernel_gmem1_m_axi_U->ARREGION(m_axi_gmem1_ARREGION);
    Filter2DKernel_gmem1_m_axi_U->ARUSER(m_axi_gmem1_ARUSER);
    Filter2DKernel_gmem1_m_axi_U->RVALID(m_axi_gmem1_RVALID);
    Filter2DKernel_gmem1_m_axi_U->RREADY(m_axi_gmem1_RREADY);
    Filter2DKernel_gmem1_m_axi_U->RDATA(m_axi_gmem1_RDATA);
    Filter2DKernel_gmem1_m_axi_U->RLAST(m_axi_gmem1_RLAST);
    Filter2DKernel_gmem1_m_axi_U->RID(m_axi_gmem1_RID);
    Filter2DKernel_gmem1_m_axi_U->RUSER(m_axi_gmem1_RUSER);
    Filter2DKernel_gmem1_m_axi_U->RRESP(m_axi_gmem1_RRESP);
    Filter2DKernel_gmem1_m_axi_U->BVALID(m_axi_gmem1_BVALID);
    Filter2DKernel_gmem1_m_axi_U->BREADY(m_axi_gmem1_BREADY);
    Filter2DKernel_gmem1_m_axi_U->BRESP(m_axi_gmem1_BRESP);
    Filter2DKernel_gmem1_m_axi_U->BID(m_axi_gmem1_BID);
    Filter2DKernel_gmem1_m_axi_U->BUSER(m_axi_gmem1_BUSER);
    Filter2DKernel_gmem1_m_axi_U->ACLK(ap_clk);
    Filter2DKernel_gmem1_m_axi_U->ARESET(ap_rst_n_inv);
    Filter2DKernel_gmem1_m_axi_U->ACLK_EN(ap_var_for_const0);
    Filter2DKernel_gmem1_m_axi_U->I_ARVALID(Filter2D_U0_m_axi_srcCoeffs_ARVALID);
    Filter2DKernel_gmem1_m_axi_U->I_ARREADY(gmem1_ARREADY);
    Filter2DKernel_gmem1_m_axi_U->I_ARADDR(Filter2D_U0_m_axi_srcCoeffs_ARADDR);
    Filter2DKernel_gmem1_m_axi_U->I_ARID(Filter2D_U0_m_axi_srcCoeffs_ARID);
    Filter2DKernel_gmem1_m_axi_U->I_ARLEN(Filter2D_U0_m_axi_srcCoeffs_ARLEN);
    Filter2DKernel_gmem1_m_axi_U->I_ARSIZE(Filter2D_U0_m_axi_srcCoeffs_ARSIZE);
    Filter2DKernel_gmem1_m_axi_U->I_ARLOCK(Filter2D_U0_m_axi_srcCoeffs_ARLOCK);
    Filter2DKernel_gmem1_m_axi_U->I_ARCACHE(Filter2D_U0_m_axi_srcCoeffs_ARCACHE);
    Filter2DKernel_gmem1_m_axi_U->I_ARQOS(Filter2D_U0_m_axi_srcCoeffs_ARQOS);
    Filter2DKernel_gmem1_m_axi_U->I_ARPROT(Filter2D_U0_m_axi_srcCoeffs_ARPROT);
    Filter2DKernel_gmem1_m_axi_U->I_ARUSER(Filter2D_U0_m_axi_srcCoeffs_ARUSER);
    Filter2DKernel_gmem1_m_axi_U->I_ARBURST(Filter2D_U0_m_axi_srcCoeffs_ARBURST);
    Filter2DKernel_gmem1_m_axi_U->I_ARREGION(Filter2D_U0_m_axi_srcCoeffs_ARREGION);
    Filter2DKernel_gmem1_m_axi_U->I_RVALID(gmem1_RVALID);
    Filter2DKernel_gmem1_m_axi_U->I_RREADY(Filter2D_U0_m_axi_srcCoeffs_RREADY);
    Filter2DKernel_gmem1_m_axi_U->I_RDATA(gmem1_RDATA);
    Filter2DKernel_gmem1_m_axi_U->I_RID(gmem1_RID);
    Filter2DKernel_gmem1_m_axi_U->I_RUSER(gmem1_RUSER);
    Filter2DKernel_gmem1_m_axi_U->I_RRESP(gmem1_RRESP);
    Filter2DKernel_gmem1_m_axi_U->I_RLAST(gmem1_RLAST);
    Filter2DKernel_gmem1_m_axi_U->I_AWVALID(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWVALID);
    Filter2DKernel_gmem1_m_axi_U->I_AWREADY(gmem1_AWREADY);
    Filter2DKernel_gmem1_m_axi_U->I_AWADDR(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWADDR);
    Filter2DKernel_gmem1_m_axi_U->I_AWID(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWID);
    Filter2DKernel_gmem1_m_axi_U->I_AWLEN(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWLEN);
    Filter2DKernel_gmem1_m_axi_U->I_AWSIZE(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWSIZE);
    Filter2DKernel_gmem1_m_axi_U->I_AWLOCK(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWLOCK);
    Filter2DKernel_gmem1_m_axi_U->I_AWCACHE(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWCACHE);
    Filter2DKernel_gmem1_m_axi_U->I_AWQOS(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWQOS);
    Filter2DKernel_gmem1_m_axi_U->I_AWPROT(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWPROT);
    Filter2DKernel_gmem1_m_axi_U->I_AWUSER(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWUSER);
    Filter2DKernel_gmem1_m_axi_U->I_AWBURST(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWBURST);
    Filter2DKernel_gmem1_m_axi_U->I_AWREGION(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWREGION);
    Filter2DKernel_gmem1_m_axi_U->I_WVALID(PixelStream2AXIBursts_U0_m_axi_aximm_V_WVALID);
    Filter2DKernel_gmem1_m_axi_U->I_WREADY(gmem1_WREADY);
    Filter2DKernel_gmem1_m_axi_U->I_WDATA(PixelStream2AXIBursts_U0_m_axi_aximm_V_WDATA);
    Filter2DKernel_gmem1_m_axi_U->I_WID(PixelStream2AXIBursts_U0_m_axi_aximm_V_WID);
    Filter2DKernel_gmem1_m_axi_U->I_WUSER(PixelStream2AXIBursts_U0_m_axi_aximm_V_WUSER);
    Filter2DKernel_gmem1_m_axi_U->I_WLAST(PixelStream2AXIBursts_U0_m_axi_aximm_V_WLAST);
    Filter2DKernel_gmem1_m_axi_U->I_WSTRB(PixelStream2AXIBursts_U0_m_axi_aximm_V_WSTRB);
    Filter2DKernel_gmem1_m_axi_U->I_BVALID(gmem1_BVALID);
    Filter2DKernel_gmem1_m_axi_U->I_BREADY(PixelStream2AXIBursts_U0_m_axi_aximm_V_BREADY);
    Filter2DKernel_gmem1_m_axi_U->I_BRESP(gmem1_BRESP);
    Filter2DKernel_gmem1_m_axi_U->I_BID(gmem1_BID);
    Filter2DKernel_gmem1_m_axi_U->I_BUSER(gmem1_BUSER);
    Filter2DKernel_gmem0_m_axi_U = new Filter2DKernel_gmem0_m_axi<256,64,5,16,16,16,16,C_M_AXI_GMEM0_ID_WIDTH,C_M_AXI_GMEM0_ADDR_WIDTH,C_M_AXI_GMEM0_DATA_WIDTH,C_M_AXI_GMEM0_AWUSER_WIDTH,C_M_AXI_GMEM0_ARUSER_WIDTH,C_M_AXI_GMEM0_WUSER_WIDTH,C_M_AXI_GMEM0_RUSER_WIDTH,C_M_AXI_GMEM0_BUSER_WIDTH,C_M_AXI_GMEM0_USER_VALUE,C_M_AXI_GMEM0_PROT_VALUE,C_M_AXI_GMEM0_CACHE_VALUE>("Filter2DKernel_gmem0_m_axi_U");
    Filter2DKernel_gmem0_m_axi_U->AWVALID(m_axi_gmem0_AWVALID);
    Filter2DKernel_gmem0_m_axi_U->AWREADY(m_axi_gmem0_AWREADY);
    Filter2DKernel_gmem0_m_axi_U->AWADDR(m_axi_gmem0_AWADDR);
    Filter2DKernel_gmem0_m_axi_U->AWID(m_axi_gmem0_AWID);
    Filter2DKernel_gmem0_m_axi_U->AWLEN(m_axi_gmem0_AWLEN);
    Filter2DKernel_gmem0_m_axi_U->AWSIZE(m_axi_gmem0_AWSIZE);
    Filter2DKernel_gmem0_m_axi_U->AWBURST(m_axi_gmem0_AWBURST);
    Filter2DKernel_gmem0_m_axi_U->AWLOCK(m_axi_gmem0_AWLOCK);
    Filter2DKernel_gmem0_m_axi_U->AWCACHE(m_axi_gmem0_AWCACHE);
    Filter2DKernel_gmem0_m_axi_U->AWPROT(m_axi_gmem0_AWPROT);
    Filter2DKernel_gmem0_m_axi_U->AWQOS(m_axi_gmem0_AWQOS);
    Filter2DKernel_gmem0_m_axi_U->AWREGION(m_axi_gmem0_AWREGION);
    Filter2DKernel_gmem0_m_axi_U->AWUSER(m_axi_gmem0_AWUSER);
    Filter2DKernel_gmem0_m_axi_U->WVALID(m_axi_gmem0_WVALID);
    Filter2DKernel_gmem0_m_axi_U->WREADY(m_axi_gmem0_WREADY);
    Filter2DKernel_gmem0_m_axi_U->WDATA(m_axi_gmem0_WDATA);
    Filter2DKernel_gmem0_m_axi_U->WSTRB(m_axi_gmem0_WSTRB);
    Filter2DKernel_gmem0_m_axi_U->WLAST(m_axi_gmem0_WLAST);
    Filter2DKernel_gmem0_m_axi_U->WID(m_axi_gmem0_WID);
    Filter2DKernel_gmem0_m_axi_U->WUSER(m_axi_gmem0_WUSER);
    Filter2DKernel_gmem0_m_axi_U->ARVALID(m_axi_gmem0_ARVALID);
    Filter2DKernel_gmem0_m_axi_U->ARREADY(m_axi_gmem0_ARREADY);
    Filter2DKernel_gmem0_m_axi_U->ARADDR(m_axi_gmem0_ARADDR);
    Filter2DKernel_gmem0_m_axi_U->ARID(m_axi_gmem0_ARID);
    Filter2DKernel_gmem0_m_axi_U->ARLEN(m_axi_gmem0_ARLEN);
    Filter2DKernel_gmem0_m_axi_U->ARSIZE(m_axi_gmem0_ARSIZE);
    Filter2DKernel_gmem0_m_axi_U->ARBURST(m_axi_gmem0_ARBURST);
    Filter2DKernel_gmem0_m_axi_U->ARLOCK(m_axi_gmem0_ARLOCK);
    Filter2DKernel_gmem0_m_axi_U->ARCACHE(m_axi_gmem0_ARCACHE);
    Filter2DKernel_gmem0_m_axi_U->ARPROT(m_axi_gmem0_ARPROT);
    Filter2DKernel_gmem0_m_axi_U->ARQOS(m_axi_gmem0_ARQOS);
    Filter2DKernel_gmem0_m_axi_U->ARREGION(m_axi_gmem0_ARREGION);
    Filter2DKernel_gmem0_m_axi_U->ARUSER(m_axi_gmem0_ARUSER);
    Filter2DKernel_gmem0_m_axi_U->RVALID(m_axi_gmem0_RVALID);
    Filter2DKernel_gmem0_m_axi_U->RREADY(m_axi_gmem0_RREADY);
    Filter2DKernel_gmem0_m_axi_U->RDATA(m_axi_gmem0_RDATA);
    Filter2DKernel_gmem0_m_axi_U->RLAST(m_axi_gmem0_RLAST);
    Filter2DKernel_gmem0_m_axi_U->RID(m_axi_gmem0_RID);
    Filter2DKernel_gmem0_m_axi_U->RUSER(m_axi_gmem0_RUSER);
    Filter2DKernel_gmem0_m_axi_U->RRESP(m_axi_gmem0_RRESP);
    Filter2DKernel_gmem0_m_axi_U->BVALID(m_axi_gmem0_BVALID);
    Filter2DKernel_gmem0_m_axi_U->BREADY(m_axi_gmem0_BREADY);
    Filter2DKernel_gmem0_m_axi_U->BRESP(m_axi_gmem0_BRESP);
    Filter2DKernel_gmem0_m_axi_U->BID(m_axi_gmem0_BID);
    Filter2DKernel_gmem0_m_axi_U->BUSER(m_axi_gmem0_BUSER);
    Filter2DKernel_gmem0_m_axi_U->ACLK(ap_clk);
    Filter2DKernel_gmem0_m_axi_U->ARESET(ap_rst_n_inv);
    Filter2DKernel_gmem0_m_axi_U->ACLK_EN(ap_var_for_const0);
    Filter2DKernel_gmem0_m_axi_U->I_ARVALID(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARVALID);
    Filter2DKernel_gmem0_m_axi_U->I_ARREADY(gmem0_ARREADY);
    Filter2DKernel_gmem0_m_axi_U->I_ARADDR(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARADDR);
    Filter2DKernel_gmem0_m_axi_U->I_ARID(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARID);
    Filter2DKernel_gmem0_m_axi_U->I_ARLEN(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARLEN);
    Filter2DKernel_gmem0_m_axi_U->I_ARSIZE(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARSIZE);
    Filter2DKernel_gmem0_m_axi_U->I_ARLOCK(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARLOCK);
    Filter2DKernel_gmem0_m_axi_U->I_ARCACHE(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARCACHE);
    Filter2DKernel_gmem0_m_axi_U->I_ARQOS(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARQOS);
    Filter2DKernel_gmem0_m_axi_U->I_ARPROT(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARPROT);
    Filter2DKernel_gmem0_m_axi_U->I_ARUSER(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARUSER);
    Filter2DKernel_gmem0_m_axi_U->I_ARBURST(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARBURST);
    Filter2DKernel_gmem0_m_axi_U->I_ARREGION(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARREGION);
    Filter2DKernel_gmem0_m_axi_U->I_RVALID(gmem0_RVALID);
    Filter2DKernel_gmem0_m_axi_U->I_RREADY(AXIBursts2PixelStream8_U0_m_axi_axi_V_RREADY);
    Filter2DKernel_gmem0_m_axi_U->I_RDATA(gmem0_RDATA);
    Filter2DKernel_gmem0_m_axi_U->I_RID(gmem0_RID);
    Filter2DKernel_gmem0_m_axi_U->I_RUSER(gmem0_RUSER);
    Filter2DKernel_gmem0_m_axi_U->I_RRESP(gmem0_RRESP);
    Filter2DKernel_gmem0_m_axi_U->I_RLAST(gmem0_RLAST);
    Filter2DKernel_gmem0_m_axi_U->I_AWVALID(ap_var_for_const1);
    Filter2DKernel_gmem0_m_axi_U->I_AWREADY(gmem0_AWREADY);
    Filter2DKernel_gmem0_m_axi_U->I_AWADDR(ap_var_for_const2);
    Filter2DKernel_gmem0_m_axi_U->I_AWID(ap_var_for_const3);
    Filter2DKernel_gmem0_m_axi_U->I_AWLEN(ap_var_for_const4);
    Filter2DKernel_gmem0_m_axi_U->I_AWSIZE(ap_var_for_const5);
    Filter2DKernel_gmem0_m_axi_U->I_AWLOCK(ap_var_for_const6);
    Filter2DKernel_gmem0_m_axi_U->I_AWCACHE(ap_var_for_const7);
    Filter2DKernel_gmem0_m_axi_U->I_AWQOS(ap_var_for_const7);
    Filter2DKernel_gmem0_m_axi_U->I_AWPROT(ap_var_for_const5);
    Filter2DKernel_gmem0_m_axi_U->I_AWUSER(ap_var_for_const3);
    Filter2DKernel_gmem0_m_axi_U->I_AWBURST(ap_var_for_const6);
    Filter2DKernel_gmem0_m_axi_U->I_AWREGION(ap_var_for_const7);
    Filter2DKernel_gmem0_m_axi_U->I_WVALID(ap_var_for_const1);
    Filter2DKernel_gmem0_m_axi_U->I_WREADY(gmem0_WREADY);
    Filter2DKernel_gmem0_m_axi_U->I_WDATA(ap_var_for_const8);
    Filter2DKernel_gmem0_m_axi_U->I_WID(ap_var_for_const3);
    Filter2DKernel_gmem0_m_axi_U->I_WUSER(ap_var_for_const3);
    Filter2DKernel_gmem0_m_axi_U->I_WLAST(ap_var_for_const1);
    Filter2DKernel_gmem0_m_axi_U->I_WSTRB(ap_var_for_const4);
    Filter2DKernel_gmem0_m_axi_U->I_BVALID(gmem0_BVALID);
    Filter2DKernel_gmem0_m_axi_U->I_BREADY(ap_var_for_const1);
    Filter2DKernel_gmem0_m_axi_U->I_BRESP(gmem0_BRESP);
    Filter2DKernel_gmem0_m_axi_U->I_BID(gmem0_BID);
    Filter2DKernel_gmem0_m_axi_U->I_BUSER(gmem0_BUSER);
    AXIBursts2PixelStream8_U0 = new AXIBursts2PixelStream8("AXIBursts2PixelStream8_U0");
    AXIBursts2PixelStream8_U0->ap_clk(ap_clk);
    AXIBursts2PixelStream8_U0->ap_rst(ap_rst_n_inv);
    AXIBursts2PixelStream8_U0->ap_start(AXIBursts2PixelStream8_U0_ap_start);
    AXIBursts2PixelStream8_U0->ap_done(AXIBursts2PixelStream8_U0_ap_done);
    AXIBursts2PixelStream8_U0->ap_continue(AXIBursts2PixelStream8_U0_ap_continue);
    AXIBursts2PixelStream8_U0->ap_idle(AXIBursts2PixelStream8_U0_ap_idle);
    AXIBursts2PixelStream8_U0->ap_ready(AXIBursts2PixelStream8_U0_ap_ready);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_AWVALID(AXIBursts2PixelStream8_U0_m_axi_axi_V_AWVALID);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_AWREADY(ap_var_for_const1);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_AWADDR(AXIBursts2PixelStream8_U0_m_axi_axi_V_AWADDR);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_AWID(AXIBursts2PixelStream8_U0_m_axi_axi_V_AWID);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_AWLEN(AXIBursts2PixelStream8_U0_m_axi_axi_V_AWLEN);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_AWSIZE(AXIBursts2PixelStream8_U0_m_axi_axi_V_AWSIZE);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_AWBURST(AXIBursts2PixelStream8_U0_m_axi_axi_V_AWBURST);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_AWLOCK(AXIBursts2PixelStream8_U0_m_axi_axi_V_AWLOCK);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_AWCACHE(AXIBursts2PixelStream8_U0_m_axi_axi_V_AWCACHE);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_AWPROT(AXIBursts2PixelStream8_U0_m_axi_axi_V_AWPROT);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_AWQOS(AXIBursts2PixelStream8_U0_m_axi_axi_V_AWQOS);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_AWREGION(AXIBursts2PixelStream8_U0_m_axi_axi_V_AWREGION);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_AWUSER(AXIBursts2PixelStream8_U0_m_axi_axi_V_AWUSER);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_WVALID(AXIBursts2PixelStream8_U0_m_axi_axi_V_WVALID);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_WREADY(ap_var_for_const1);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_WDATA(AXIBursts2PixelStream8_U0_m_axi_axi_V_WDATA);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_WSTRB(AXIBursts2PixelStream8_U0_m_axi_axi_V_WSTRB);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_WLAST(AXIBursts2PixelStream8_U0_m_axi_axi_V_WLAST);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_WID(AXIBursts2PixelStream8_U0_m_axi_axi_V_WID);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_WUSER(AXIBursts2PixelStream8_U0_m_axi_axi_V_WUSER);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_ARVALID(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARVALID);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_ARREADY(gmem0_ARREADY);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_ARADDR(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARADDR);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_ARID(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARID);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_ARLEN(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARLEN);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_ARSIZE(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARSIZE);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_ARBURST(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARBURST);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_ARLOCK(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARLOCK);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_ARCACHE(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARCACHE);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_ARPROT(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARPROT);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_ARQOS(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARQOS);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_ARREGION(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARREGION);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_ARUSER(AXIBursts2PixelStream8_U0_m_axi_axi_V_ARUSER);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_RVALID(gmem0_RVALID);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_RREADY(AXIBursts2PixelStream8_U0_m_axi_axi_V_RREADY);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_RDATA(gmem0_RDATA);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_RLAST(gmem0_RLAST);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_RID(gmem0_RID);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_RUSER(gmem0_RUSER);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_RRESP(gmem0_RRESP);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_BVALID(ap_var_for_const1);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_BREADY(AXIBursts2PixelStream8_U0_m_axi_axi_V_BREADY);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_BRESP(ap_var_for_const6);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_BID(ap_var_for_const3);
    AXIBursts2PixelStream8_U0->m_axi_axi_V_BUSER(ap_var_for_const3);
    AXIBursts2PixelStream8_U0->axi_V_offset(src_V);
    AXIBursts2PixelStream8_U0->width(width);
    AXIBursts2PixelStream8_U0->height(height);
    AXIBursts2PixelStream8_U0->stride(stride);
    AXIBursts2PixelStream8_U0->stream_V_din(AXIBursts2PixelStream8_U0_stream_V_din);
    AXIBursts2PixelStream8_U0->stream_V_full_n(src_pixels_V_full_n);
    AXIBursts2PixelStream8_U0->stream_V_write(AXIBursts2PixelStream8_U0_stream_V_write);
    AXIBursts2PixelStream8_U0->width_out_din(AXIBursts2PixelStream8_U0_width_out_din);
    AXIBursts2PixelStream8_U0->width_out_full_n(width_c_full_n);
    AXIBursts2PixelStream8_U0->width_out_write(AXIBursts2PixelStream8_U0_width_out_write);
    AXIBursts2PixelStream8_U0->height_out_din(AXIBursts2PixelStream8_U0_height_out_din);
    AXIBursts2PixelStream8_U0->height_out_full_n(height_c_full_n);
    AXIBursts2PixelStream8_U0->height_out_write(AXIBursts2PixelStream8_U0_height_out_write);
    AXIBursts2PixelStream8_U0->stride_out_din(AXIBursts2PixelStream8_U0_stride_out_din);
    AXIBursts2PixelStream8_U0->stride_out_full_n(stride_c_full_n);
    AXIBursts2PixelStream8_U0->stride_out_write(AXIBursts2PixelStream8_U0_stride_out_write);
    AXIBursts2PixelStream8_U0->coeffs(coeffs);
    AXIBursts2PixelStream8_U0->dst_V(dst_V);
    AXIBursts2PixelStream8_U0->coeffs_out_din(AXIBursts2PixelStream8_U0_coeffs_out_din);
    AXIBursts2PixelStream8_U0->coeffs_out_full_n(coeffs_c_full_n);
    AXIBursts2PixelStream8_U0->coeffs_out_write(AXIBursts2PixelStream8_U0_coeffs_out_write);
    AXIBursts2PixelStream8_U0->dst_V_out_din(AXIBursts2PixelStream8_U0_dst_V_out_din);
    AXIBursts2PixelStream8_U0->dst_V_out_full_n(dst_V_c_full_n);
    AXIBursts2PixelStream8_U0->dst_V_out_write(AXIBursts2PixelStream8_U0_dst_V_out_write);
    AXIBursts2PixelStream8_U0->ap_ext_blocking_n(AXIBursts2PixelStream8_U0_ap_ext_blocking_n);
    AXIBursts2PixelStream8_U0->ap_str_blocking_n(AXIBursts2PixelStream8_U0_ap_str_blocking_n);
    AXIBursts2PixelStream8_U0->ap_int_blocking_n(AXIBursts2PixelStream8_U0_ap_int_blocking_n);
    Filter2D_U0 = new Filter2D("Filter2D_U0");
    Filter2D_U0->ap_clk(ap_clk);
    Filter2D_U0->ap_rst(ap_rst_n_inv);
    Filter2D_U0->ap_start(Filter2D_U0_ap_start);
    Filter2D_U0->ap_done(Filter2D_U0_ap_done);
    Filter2D_U0->ap_continue(Filter2D_U0_ap_continue);
    Filter2D_U0->ap_idle(Filter2D_U0_ap_idle);
    Filter2D_U0->ap_ready(Filter2D_U0_ap_ready);
    Filter2D_U0->m_axi_srcCoeffs_AWVALID(Filter2D_U0_m_axi_srcCoeffs_AWVALID);
    Filter2D_U0->m_axi_srcCoeffs_AWREADY(ap_var_for_const1);
    Filter2D_U0->m_axi_srcCoeffs_AWADDR(Filter2D_U0_m_axi_srcCoeffs_AWADDR);
    Filter2D_U0->m_axi_srcCoeffs_AWID(Filter2D_U0_m_axi_srcCoeffs_AWID);
    Filter2D_U0->m_axi_srcCoeffs_AWLEN(Filter2D_U0_m_axi_srcCoeffs_AWLEN);
    Filter2D_U0->m_axi_srcCoeffs_AWSIZE(Filter2D_U0_m_axi_srcCoeffs_AWSIZE);
    Filter2D_U0->m_axi_srcCoeffs_AWBURST(Filter2D_U0_m_axi_srcCoeffs_AWBURST);
    Filter2D_U0->m_axi_srcCoeffs_AWLOCK(Filter2D_U0_m_axi_srcCoeffs_AWLOCK);
    Filter2D_U0->m_axi_srcCoeffs_AWCACHE(Filter2D_U0_m_axi_srcCoeffs_AWCACHE);
    Filter2D_U0->m_axi_srcCoeffs_AWPROT(Filter2D_U0_m_axi_srcCoeffs_AWPROT);
    Filter2D_U0->m_axi_srcCoeffs_AWQOS(Filter2D_U0_m_axi_srcCoeffs_AWQOS);
    Filter2D_U0->m_axi_srcCoeffs_AWREGION(Filter2D_U0_m_axi_srcCoeffs_AWREGION);
    Filter2D_U0->m_axi_srcCoeffs_AWUSER(Filter2D_U0_m_axi_srcCoeffs_AWUSER);
    Filter2D_U0->m_axi_srcCoeffs_WVALID(Filter2D_U0_m_axi_srcCoeffs_WVALID);
    Filter2D_U0->m_axi_srcCoeffs_WREADY(ap_var_for_const1);
    Filter2D_U0->m_axi_srcCoeffs_WDATA(Filter2D_U0_m_axi_srcCoeffs_WDATA);
    Filter2D_U0->m_axi_srcCoeffs_WSTRB(Filter2D_U0_m_axi_srcCoeffs_WSTRB);
    Filter2D_U0->m_axi_srcCoeffs_WLAST(Filter2D_U0_m_axi_srcCoeffs_WLAST);
    Filter2D_U0->m_axi_srcCoeffs_WID(Filter2D_U0_m_axi_srcCoeffs_WID);
    Filter2D_U0->m_axi_srcCoeffs_WUSER(Filter2D_U0_m_axi_srcCoeffs_WUSER);
    Filter2D_U0->m_axi_srcCoeffs_ARVALID(Filter2D_U0_m_axi_srcCoeffs_ARVALID);
    Filter2D_U0->m_axi_srcCoeffs_ARREADY(gmem1_ARREADY);
    Filter2D_U0->m_axi_srcCoeffs_ARADDR(Filter2D_U0_m_axi_srcCoeffs_ARADDR);
    Filter2D_U0->m_axi_srcCoeffs_ARID(Filter2D_U0_m_axi_srcCoeffs_ARID);
    Filter2D_U0->m_axi_srcCoeffs_ARLEN(Filter2D_U0_m_axi_srcCoeffs_ARLEN);
    Filter2D_U0->m_axi_srcCoeffs_ARSIZE(Filter2D_U0_m_axi_srcCoeffs_ARSIZE);
    Filter2D_U0->m_axi_srcCoeffs_ARBURST(Filter2D_U0_m_axi_srcCoeffs_ARBURST);
    Filter2D_U0->m_axi_srcCoeffs_ARLOCK(Filter2D_U0_m_axi_srcCoeffs_ARLOCK);
    Filter2D_U0->m_axi_srcCoeffs_ARCACHE(Filter2D_U0_m_axi_srcCoeffs_ARCACHE);
    Filter2D_U0->m_axi_srcCoeffs_ARPROT(Filter2D_U0_m_axi_srcCoeffs_ARPROT);
    Filter2D_U0->m_axi_srcCoeffs_ARQOS(Filter2D_U0_m_axi_srcCoeffs_ARQOS);
    Filter2D_U0->m_axi_srcCoeffs_ARREGION(Filter2D_U0_m_axi_srcCoeffs_ARREGION);
    Filter2D_U0->m_axi_srcCoeffs_ARUSER(Filter2D_U0_m_axi_srcCoeffs_ARUSER);
    Filter2D_U0->m_axi_srcCoeffs_RVALID(gmem1_RVALID);
    Filter2D_U0->m_axi_srcCoeffs_RREADY(Filter2D_U0_m_axi_srcCoeffs_RREADY);
    Filter2D_U0->m_axi_srcCoeffs_RDATA(gmem1_RDATA);
    Filter2D_U0->m_axi_srcCoeffs_RLAST(gmem1_RLAST);
    Filter2D_U0->m_axi_srcCoeffs_RID(gmem1_RID);
    Filter2D_U0->m_axi_srcCoeffs_RUSER(gmem1_RUSER);
    Filter2D_U0->m_axi_srcCoeffs_RRESP(gmem1_RRESP);
    Filter2D_U0->m_axi_srcCoeffs_BVALID(ap_var_for_const1);
    Filter2D_U0->m_axi_srcCoeffs_BREADY(Filter2D_U0_m_axi_srcCoeffs_BREADY);
    Filter2D_U0->m_axi_srcCoeffs_BRESP(ap_var_for_const6);
    Filter2D_U0->m_axi_srcCoeffs_BID(ap_var_for_const3);
    Filter2D_U0->m_axi_srcCoeffs_BUSER(ap_var_for_const3);
    Filter2D_U0->srcCoeffs_offset_dout(coeffs_c_dout);
    Filter2D_U0->srcCoeffs_offset_empty_n(coeffs_c_empty_n);
    Filter2D_U0->srcCoeffs_offset_read(Filter2D_U0_srcCoeffs_offset_read);
    Filter2D_U0->srcImg_V_dout(src_pixels_V_dout);
    Filter2D_U0->srcImg_V_empty_n(src_pixels_V_empty_n);
    Filter2D_U0->srcImg_V_read(Filter2D_U0_srcImg_V_read);
    Filter2D_U0->width_dout(width_c_dout);
    Filter2D_U0->width_empty_n(width_c_empty_n);
    Filter2D_U0->width_read(Filter2D_U0_width_read);
    Filter2D_U0->height_dout(height_c_dout);
    Filter2D_U0->height_empty_n(height_c_empty_n);
    Filter2D_U0->height_read(Filter2D_U0_height_read);
    Filter2D_U0->dstImg_V_din(Filter2D_U0_dstImg_V_din);
    Filter2D_U0->dstImg_V_full_n(dst_pixels_V_full_n);
    Filter2D_U0->dstImg_V_write(Filter2D_U0_dstImg_V_write);
    Filter2D_U0->width_out_din(Filter2D_U0_width_out_din);
    Filter2D_U0->width_out_full_n(width_c1_full_n);
    Filter2D_U0->width_out_write(Filter2D_U0_width_out_write);
    Filter2D_U0->height_out_din(Filter2D_U0_height_out_din);
    Filter2D_U0->height_out_full_n(height_c2_full_n);
    Filter2D_U0->height_out_write(Filter2D_U0_height_out_write);
    Filter2D_U0->ap_ext_blocking_n(Filter2D_U0_ap_ext_blocking_n);
    Filter2D_U0->ap_str_blocking_n(Filter2D_U0_ap_str_blocking_n);
    Filter2D_U0->ap_int_blocking_n(Filter2D_U0_ap_int_blocking_n);
    PixelStream2AXIBursts_U0 = new PixelStream2AXIBursts("PixelStream2AXIBursts_U0");
    PixelStream2AXIBursts_U0->ap_clk(ap_clk);
    PixelStream2AXIBursts_U0->ap_rst(ap_rst_n_inv);
    PixelStream2AXIBursts_U0->ap_start(PixelStream2AXIBursts_U0_ap_start);
    PixelStream2AXIBursts_U0->ap_done(PixelStream2AXIBursts_U0_ap_done);
    PixelStream2AXIBursts_U0->ap_continue(PixelStream2AXIBursts_U0_ap_continue);
    PixelStream2AXIBursts_U0->ap_idle(PixelStream2AXIBursts_U0_ap_idle);
    PixelStream2AXIBursts_U0->ap_ready(PixelStream2AXIBursts_U0_ap_ready);
    PixelStream2AXIBursts_U0->stream_V_dout(dst_pixels_V_dout);
    PixelStream2AXIBursts_U0->stream_V_empty_n(dst_pixels_V_empty_n);
    PixelStream2AXIBursts_U0->stream_V_read(PixelStream2AXIBursts_U0_stream_V_read);
    PixelStream2AXIBursts_U0->width_dout(width_c1_dout);
    PixelStream2AXIBursts_U0->width_empty_n(width_c1_empty_n);
    PixelStream2AXIBursts_U0->width_read(PixelStream2AXIBursts_U0_width_read);
    PixelStream2AXIBursts_U0->height_dout(height_c2_dout);
    PixelStream2AXIBursts_U0->height_empty_n(height_c2_empty_n);
    PixelStream2AXIBursts_U0->height_read(PixelStream2AXIBursts_U0_height_read);
    PixelStream2AXIBursts_U0->stride_dout(stride_c_dout);
    PixelStream2AXIBursts_U0->stride_empty_n(stride_c_empty_n);
    PixelStream2AXIBursts_U0->stride_read(PixelStream2AXIBursts_U0_stride_read);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_AWVALID(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWVALID);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_AWREADY(gmem1_AWREADY);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_AWADDR(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWADDR);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_AWID(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWID);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_AWLEN(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWLEN);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_AWSIZE(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWSIZE);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_AWBURST(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWBURST);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_AWLOCK(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWLOCK);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_AWCACHE(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWCACHE);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_AWPROT(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWPROT);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_AWQOS(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWQOS);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_AWREGION(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWREGION);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_AWUSER(PixelStream2AXIBursts_U0_m_axi_aximm_V_AWUSER);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_WVALID(PixelStream2AXIBursts_U0_m_axi_aximm_V_WVALID);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_WREADY(gmem1_WREADY);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_WDATA(PixelStream2AXIBursts_U0_m_axi_aximm_V_WDATA);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_WSTRB(PixelStream2AXIBursts_U0_m_axi_aximm_V_WSTRB);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_WLAST(PixelStream2AXIBursts_U0_m_axi_aximm_V_WLAST);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_WID(PixelStream2AXIBursts_U0_m_axi_aximm_V_WID);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_WUSER(PixelStream2AXIBursts_U0_m_axi_aximm_V_WUSER);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_ARVALID(PixelStream2AXIBursts_U0_m_axi_aximm_V_ARVALID);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_ARREADY(ap_var_for_const1);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_ARADDR(PixelStream2AXIBursts_U0_m_axi_aximm_V_ARADDR);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_ARID(PixelStream2AXIBursts_U0_m_axi_aximm_V_ARID);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_ARLEN(PixelStream2AXIBursts_U0_m_axi_aximm_V_ARLEN);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_ARSIZE(PixelStream2AXIBursts_U0_m_axi_aximm_V_ARSIZE);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_ARBURST(PixelStream2AXIBursts_U0_m_axi_aximm_V_ARBURST);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_ARLOCK(PixelStream2AXIBursts_U0_m_axi_aximm_V_ARLOCK);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_ARCACHE(PixelStream2AXIBursts_U0_m_axi_aximm_V_ARCACHE);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_ARPROT(PixelStream2AXIBursts_U0_m_axi_aximm_V_ARPROT);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_ARQOS(PixelStream2AXIBursts_U0_m_axi_aximm_V_ARQOS);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_ARREGION(PixelStream2AXIBursts_U0_m_axi_aximm_V_ARREGION);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_ARUSER(PixelStream2AXIBursts_U0_m_axi_aximm_V_ARUSER);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_RVALID(ap_var_for_const1);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_RREADY(PixelStream2AXIBursts_U0_m_axi_aximm_V_RREADY);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_RDATA(ap_var_for_const8);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_RLAST(ap_var_for_const1);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_RID(ap_var_for_const3);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_RUSER(ap_var_for_const3);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_RRESP(ap_var_for_const6);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_BVALID(gmem1_BVALID);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_BREADY(PixelStream2AXIBursts_U0_m_axi_aximm_V_BREADY);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_BRESP(gmem1_BRESP);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_BID(gmem1_BID);
    PixelStream2AXIBursts_U0->m_axi_aximm_V_BUSER(gmem1_BUSER);
    PixelStream2AXIBursts_U0->aximm_V_offset_dout(dst_V_c_dout);
    PixelStream2AXIBursts_U0->aximm_V_offset_empty_n(dst_V_c_empty_n);
    PixelStream2AXIBursts_U0->aximm_V_offset_read(PixelStream2AXIBursts_U0_aximm_V_offset_read);
    PixelStream2AXIBursts_U0->ap_ext_blocking_n(PixelStream2AXIBursts_U0_ap_ext_blocking_n);
    PixelStream2AXIBursts_U0->ap_str_blocking_n(PixelStream2AXIBursts_U0_ap_str_blocking_n);
    PixelStream2AXIBursts_U0->ap_int_blocking_n(PixelStream2AXIBursts_U0_ap_int_blocking_n);
    src_pixels_V_U = new fifo_w8_d64_A("src_pixels_V_U");
    src_pixels_V_U->clk(ap_clk);
    src_pixels_V_U->reset(ap_rst_n_inv);
    src_pixels_V_U->if_read_ce(ap_var_for_const0);
    src_pixels_V_U->if_write_ce(ap_var_for_const0);
    src_pixels_V_U->if_din(AXIBursts2PixelStream8_U0_stream_V_din);
    src_pixels_V_U->if_full_n(src_pixels_V_full_n);
    src_pixels_V_U->if_write(AXIBursts2PixelStream8_U0_stream_V_write);
    src_pixels_V_U->if_dout(src_pixels_V_dout);
    src_pixels_V_U->if_empty_n(src_pixels_V_empty_n);
    src_pixels_V_U->if_read(Filter2D_U0_srcImg_V_read);
    width_c_U = new fifo_w32_d1_A("width_c_U");
    width_c_U->clk(ap_clk);
    width_c_U->reset(ap_rst_n_inv);
    width_c_U->if_read_ce(ap_var_for_const0);
    width_c_U->if_write_ce(ap_var_for_const0);
    width_c_U->if_din(AXIBursts2PixelStream8_U0_width_out_din);
    width_c_U->if_full_n(width_c_full_n);
    width_c_U->if_write(AXIBursts2PixelStream8_U0_width_out_write);
    width_c_U->if_dout(width_c_dout);
    width_c_U->if_empty_n(width_c_empty_n);
    width_c_U->if_read(Filter2D_U0_width_read);
    height_c_U = new fifo_w32_d1_A("height_c_U");
    height_c_U->clk(ap_clk);
    height_c_U->reset(ap_rst_n_inv);
    height_c_U->if_read_ce(ap_var_for_const0);
    height_c_U->if_write_ce(ap_var_for_const0);
    height_c_U->if_din(AXIBursts2PixelStream8_U0_height_out_din);
    height_c_U->if_full_n(height_c_full_n);
    height_c_U->if_write(AXIBursts2PixelStream8_U0_height_out_write);
    height_c_U->if_dout(height_c_dout);
    height_c_U->if_empty_n(height_c_empty_n);
    height_c_U->if_read(Filter2D_U0_height_read);
    stride_c_U = new fifo_w32_d2_A("stride_c_U");
    stride_c_U->clk(ap_clk);
    stride_c_U->reset(ap_rst_n_inv);
    stride_c_U->if_read_ce(ap_var_for_const0);
    stride_c_U->if_write_ce(ap_var_for_const0);
    stride_c_U->if_din(AXIBursts2PixelStream8_U0_stride_out_din);
    stride_c_U->if_full_n(stride_c_full_n);
    stride_c_U->if_write(AXIBursts2PixelStream8_U0_stride_out_write);
    stride_c_U->if_dout(stride_c_dout);
    stride_c_U->if_empty_n(stride_c_empty_n);
    stride_c_U->if_read(PixelStream2AXIBursts_U0_stride_read);
    coeffs_c_U = new fifo_w64_d1_A("coeffs_c_U");
    coeffs_c_U->clk(ap_clk);
    coeffs_c_U->reset(ap_rst_n_inv);
    coeffs_c_U->if_read_ce(ap_var_for_const0);
    coeffs_c_U->if_write_ce(ap_var_for_const0);
    coeffs_c_U->if_din(AXIBursts2PixelStream8_U0_coeffs_out_din);
    coeffs_c_U->if_full_n(coeffs_c_full_n);
    coeffs_c_U->if_write(AXIBursts2PixelStream8_U0_coeffs_out_write);
    coeffs_c_U->if_dout(coeffs_c_dout);
    coeffs_c_U->if_empty_n(coeffs_c_empty_n);
    coeffs_c_U->if_read(Filter2D_U0_srcCoeffs_offset_read);
    dst_V_c_U = new fifo_w64_d2_A("dst_V_c_U");
    dst_V_c_U->clk(ap_clk);
    dst_V_c_U->reset(ap_rst_n_inv);
    dst_V_c_U->if_read_ce(ap_var_for_const0);
    dst_V_c_U->if_write_ce(ap_var_for_const0);
    dst_V_c_U->if_din(AXIBursts2PixelStream8_U0_dst_V_out_din);
    dst_V_c_U->if_full_n(dst_V_c_full_n);
    dst_V_c_U->if_write(AXIBursts2PixelStream8_U0_dst_V_out_write);
    dst_V_c_U->if_dout(dst_V_c_dout);
    dst_V_c_U->if_empty_n(dst_V_c_empty_n);
    dst_V_c_U->if_read(PixelStream2AXIBursts_U0_aximm_V_offset_read);
    dst_pixels_V_U = new fifo_w8_d64_A("dst_pixels_V_U");
    dst_pixels_V_U->clk(ap_clk);
    dst_pixels_V_U->reset(ap_rst_n_inv);
    dst_pixels_V_U->if_read_ce(ap_var_for_const0);
    dst_pixels_V_U->if_write_ce(ap_var_for_const0);
    dst_pixels_V_U->if_din(Filter2D_U0_dstImg_V_din);
    dst_pixels_V_U->if_full_n(dst_pixels_V_full_n);
    dst_pixels_V_U->if_write(Filter2D_U0_dstImg_V_write);
    dst_pixels_V_U->if_dout(dst_pixels_V_dout);
    dst_pixels_V_U->if_empty_n(dst_pixels_V_empty_n);
    dst_pixels_V_U->if_read(PixelStream2AXIBursts_U0_stream_V_read);
    width_c1_U = new fifo_w32_d1_A("width_c1_U");
    width_c1_U->clk(ap_clk);
    width_c1_U->reset(ap_rst_n_inv);
    width_c1_U->if_read_ce(ap_var_for_const0);
    width_c1_U->if_write_ce(ap_var_for_const0);
    width_c1_U->if_din(Filter2D_U0_width_out_din);
    width_c1_U->if_full_n(width_c1_full_n);
    width_c1_U->if_write(Filter2D_U0_width_out_write);
    width_c1_U->if_dout(width_c1_dout);
    width_c1_U->if_empty_n(width_c1_empty_n);
    width_c1_U->if_read(PixelStream2AXIBursts_U0_width_read);
    height_c2_U = new fifo_w32_d1_A("height_c2_U");
    height_c2_U->clk(ap_clk);
    height_c2_U->reset(ap_rst_n_inv);
    height_c2_U->if_read_ce(ap_var_for_const0);
    height_c2_U->if_write_ce(ap_var_for_const0);
    height_c2_U->if_din(Filter2D_U0_height_out_din);
    height_c2_U->if_full_n(height_c2_full_n);
    height_c2_U->if_write(Filter2D_U0_height_out_write);
    height_c2_U->if_dout(height_c2_dout);
    height_c2_U->if_empty_n(height_c2_empty_n);
    height_c2_U->if_read(PixelStream2AXIBursts_U0_height_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_AXIBursts2PixelStream8_U0_ap_continue);

    SC_METHOD(thread_AXIBursts2PixelStream8_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_AXIBursts2PixelStream8_U0_ap_ready );

    SC_METHOD(thread_AXIBursts2PixelStream8_U0_start_full_n);

    SC_METHOD(thread_AXIBursts2PixelStream8_U0_start_write);

    SC_METHOD(thread_Filter2D_U0_ap_continue);

    SC_METHOD(thread_Filter2D_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_Filter2D_U0_ap_ready );

    SC_METHOD(thread_Filter2D_U0_start_full_n);

    SC_METHOD(thread_Filter2D_U0_start_write);

    SC_METHOD(thread_PixelStream2AXIBursts_U0_ap_continue);

    SC_METHOD(thread_PixelStream2AXIBursts_U0_start_full_n);

    SC_METHOD(thread_PixelStream2AXIBursts_U0_start_write);

    SC_METHOD(thread_ap_done);
    sensitive << ( PixelStream2AXIBursts_U0_ap_done );

    SC_METHOD(thread_ap_ext_blocking_cur_n);

    SC_METHOD(thread_ap_ext_blocking_n);
    sensitive << ( ap_ext_blocking_cur_n );
    sensitive << ( ap_ext_blocking_sub_n );

    SC_METHOD(thread_ap_ext_blocking_sub_n);
    sensitive << ( AXIBursts2PixelStream8_U0_ap_ext_blocking_n );
    sensitive << ( Filter2D_U0_ap_ext_blocking_n );
    sensitive << ( PixelStream2AXIBursts_U0_ap_ext_blocking_n );

    SC_METHOD(thread_ap_idle);
    sensitive << ( AXIBursts2PixelStream8_U0_ap_idle );
    sensitive << ( Filter2D_U0_ap_idle );
    sensitive << ( PixelStream2AXIBursts_U0_ap_idle );

    SC_METHOD(thread_ap_int_blocking_cur_n);

    SC_METHOD(thread_ap_int_blocking_n);
    sensitive << ( ap_int_blocking_cur_n );
    sensitive << ( ap_int_blocking_sub_n );

    SC_METHOD(thread_ap_int_blocking_sub_n);
    sensitive << ( AXIBursts2PixelStream8_U0_ap_int_blocking_n );
    sensitive << ( Filter2D_U0_ap_int_blocking_n );
    sensitive << ( PixelStream2AXIBursts_U0_ap_int_blocking_n );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_ap_str_blocking_cur_n);

    SC_METHOD(thread_ap_str_blocking_n);
    sensitive << ( ap_str_blocking_cur_n );
    sensitive << ( ap_str_blocking_sub_n );

    SC_METHOD(thread_ap_str_blocking_sub_n);
    sensitive << ( AXIBursts2PixelStream8_U0_ap_str_blocking_n );
    sensitive << ( Filter2D_U0_ap_str_blocking_n );
    sensitive << ( PixelStream2AXIBursts_U0_ap_str_blocking_n );

    SC_METHOD(thread_ap_sync_AXIBursts2PixelStream8_U0_ap_ready);
    sensitive << ( AXIBursts2PixelStream8_U0_ap_ready );
    sensitive << ( ap_sync_reg_AXIBursts2PixelStream8_U0_ap_ready );

    SC_METHOD(thread_ap_sync_Filter2D_U0_ap_ready);
    sensitive << ( Filter2D_U0_ap_ready );
    sensitive << ( ap_sync_reg_Filter2D_U0_ap_ready );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( PixelStream2AXIBursts_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_Filter2D_U0_ap_ready );
    sensitive << ( ap_sync_AXIBursts2PixelStream8_U0_ap_ready );

    SC_METHOD(thread_stall_done_ext);
    sensitive << ( ap_ext_blocking_n );
    sensitive << ( ap_ext_blocking_n_reg );

    SC_METHOD(thread_stall_done_int);
    sensitive << ( ap_int_blocking_n );
    sensitive << ( ap_int_blocking_n_reg );

    SC_METHOD(thread_stall_done_str);
    sensitive << ( ap_str_blocking_n );
    sensitive << ( ap_str_blocking_n_reg );

    SC_METHOD(thread_stall_start_ext);
    sensitive << ( ap_ext_blocking_n );
    sensitive << ( ap_ext_blocking_n_reg );

    SC_METHOD(thread_stall_start_int);
    sensitive << ( ap_int_blocking_n );
    sensitive << ( ap_int_blocking_n_reg );

    SC_METHOD(thread_stall_start_str);
    sensitive << ( ap_str_blocking_n );
    sensitive << ( ap_str_blocking_n_reg );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const8);

    ap_rst_n_inv = SC_LOGIC_1;
    PixelStream2AXIBursts_U0_ap_start = SC_LOGIC_0;
    ap_sync_reg_Filter2D_U0_ap_ready = SC_LOGIC_0;
    Filter2D_U0_ap_ready_count = "00";
    ap_sync_reg_AXIBursts2PixelStream8_U0_ap_ready = SC_LOGIC_0;
    AXIBursts2PixelStream8_U0_ap_ready_count = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Filter2DKernel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, m_axi_gmem1_AWVALID, "(port)m_axi_gmem1_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem1_AWREADY, "(port)m_axi_gmem1_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem1_AWADDR, "(port)m_axi_gmem1_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem1_AWID, "(port)m_axi_gmem1_AWID");
    sc_trace(mVcdFile, m_axi_gmem1_AWLEN, "(port)m_axi_gmem1_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem1_AWSIZE, "(port)m_axi_gmem1_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem1_AWBURST, "(port)m_axi_gmem1_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem1_AWLOCK, "(port)m_axi_gmem1_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem1_AWCACHE, "(port)m_axi_gmem1_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem1_AWPROT, "(port)m_axi_gmem1_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem1_AWQOS, "(port)m_axi_gmem1_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem1_AWREGION, "(port)m_axi_gmem1_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem1_AWUSER, "(port)m_axi_gmem1_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem1_WVALID, "(port)m_axi_gmem1_WVALID");
    sc_trace(mVcdFile, m_axi_gmem1_WREADY, "(port)m_axi_gmem1_WREADY");
    sc_trace(mVcdFile, m_axi_gmem1_WDATA, "(port)m_axi_gmem1_WDATA");
    sc_trace(mVcdFile, m_axi_gmem1_WSTRB, "(port)m_axi_gmem1_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem1_WLAST, "(port)m_axi_gmem1_WLAST");
    sc_trace(mVcdFile, m_axi_gmem1_WID, "(port)m_axi_gmem1_WID");
    sc_trace(mVcdFile, m_axi_gmem1_WUSER, "(port)m_axi_gmem1_WUSER");
    sc_trace(mVcdFile, m_axi_gmem1_ARVALID, "(port)m_axi_gmem1_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem1_ARREADY, "(port)m_axi_gmem1_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem1_ARADDR, "(port)m_axi_gmem1_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem1_ARID, "(port)m_axi_gmem1_ARID");
    sc_trace(mVcdFile, m_axi_gmem1_ARLEN, "(port)m_axi_gmem1_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem1_ARSIZE, "(port)m_axi_gmem1_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem1_ARBURST, "(port)m_axi_gmem1_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem1_ARLOCK, "(port)m_axi_gmem1_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem1_ARCACHE, "(port)m_axi_gmem1_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem1_ARPROT, "(port)m_axi_gmem1_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem1_ARQOS, "(port)m_axi_gmem1_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem1_ARREGION, "(port)m_axi_gmem1_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem1_ARUSER, "(port)m_axi_gmem1_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem1_RVALID, "(port)m_axi_gmem1_RVALID");
    sc_trace(mVcdFile, m_axi_gmem1_RREADY, "(port)m_axi_gmem1_RREADY");
    sc_trace(mVcdFile, m_axi_gmem1_RDATA, "(port)m_axi_gmem1_RDATA");
    sc_trace(mVcdFile, m_axi_gmem1_RLAST, "(port)m_axi_gmem1_RLAST");
    sc_trace(mVcdFile, m_axi_gmem1_RID, "(port)m_axi_gmem1_RID");
    sc_trace(mVcdFile, m_axi_gmem1_RUSER, "(port)m_axi_gmem1_RUSER");
    sc_trace(mVcdFile, m_axi_gmem1_RRESP, "(port)m_axi_gmem1_RRESP");
    sc_trace(mVcdFile, m_axi_gmem1_BVALID, "(port)m_axi_gmem1_BVALID");
    sc_trace(mVcdFile, m_axi_gmem1_BREADY, "(port)m_axi_gmem1_BREADY");
    sc_trace(mVcdFile, m_axi_gmem1_BRESP, "(port)m_axi_gmem1_BRESP");
    sc_trace(mVcdFile, m_axi_gmem1_BID, "(port)m_axi_gmem1_BID");
    sc_trace(mVcdFile, m_axi_gmem1_BUSER, "(port)m_axi_gmem1_BUSER");
    sc_trace(mVcdFile, m_axi_gmem0_AWVALID, "(port)m_axi_gmem0_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem0_AWREADY, "(port)m_axi_gmem0_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem0_AWADDR, "(port)m_axi_gmem0_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem0_AWID, "(port)m_axi_gmem0_AWID");
    sc_trace(mVcdFile, m_axi_gmem0_AWLEN, "(port)m_axi_gmem0_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem0_AWSIZE, "(port)m_axi_gmem0_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem0_AWBURST, "(port)m_axi_gmem0_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem0_AWLOCK, "(port)m_axi_gmem0_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem0_AWCACHE, "(port)m_axi_gmem0_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem0_AWPROT, "(port)m_axi_gmem0_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem0_AWQOS, "(port)m_axi_gmem0_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem0_AWREGION, "(port)m_axi_gmem0_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem0_AWUSER, "(port)m_axi_gmem0_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem0_WVALID, "(port)m_axi_gmem0_WVALID");
    sc_trace(mVcdFile, m_axi_gmem0_WREADY, "(port)m_axi_gmem0_WREADY");
    sc_trace(mVcdFile, m_axi_gmem0_WDATA, "(port)m_axi_gmem0_WDATA");
    sc_trace(mVcdFile, m_axi_gmem0_WSTRB, "(port)m_axi_gmem0_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem0_WLAST, "(port)m_axi_gmem0_WLAST");
    sc_trace(mVcdFile, m_axi_gmem0_WID, "(port)m_axi_gmem0_WID");
    sc_trace(mVcdFile, m_axi_gmem0_WUSER, "(port)m_axi_gmem0_WUSER");
    sc_trace(mVcdFile, m_axi_gmem0_ARVALID, "(port)m_axi_gmem0_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem0_ARREADY, "(port)m_axi_gmem0_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem0_ARADDR, "(port)m_axi_gmem0_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem0_ARID, "(port)m_axi_gmem0_ARID");
    sc_trace(mVcdFile, m_axi_gmem0_ARLEN, "(port)m_axi_gmem0_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem0_ARSIZE, "(port)m_axi_gmem0_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem0_ARBURST, "(port)m_axi_gmem0_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem0_ARLOCK, "(port)m_axi_gmem0_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem0_ARCACHE, "(port)m_axi_gmem0_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem0_ARPROT, "(port)m_axi_gmem0_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem0_ARQOS, "(port)m_axi_gmem0_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem0_ARREGION, "(port)m_axi_gmem0_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem0_ARUSER, "(port)m_axi_gmem0_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem0_RVALID, "(port)m_axi_gmem0_RVALID");
    sc_trace(mVcdFile, m_axi_gmem0_RREADY, "(port)m_axi_gmem0_RREADY");
    sc_trace(mVcdFile, m_axi_gmem0_RDATA, "(port)m_axi_gmem0_RDATA");
    sc_trace(mVcdFile, m_axi_gmem0_RLAST, "(port)m_axi_gmem0_RLAST");
    sc_trace(mVcdFile, m_axi_gmem0_RID, "(port)m_axi_gmem0_RID");
    sc_trace(mVcdFile, m_axi_gmem0_RUSER, "(port)m_axi_gmem0_RUSER");
    sc_trace(mVcdFile, m_axi_gmem0_RRESP, "(port)m_axi_gmem0_RRESP");
    sc_trace(mVcdFile, m_axi_gmem0_BVALID, "(port)m_axi_gmem0_BVALID");
    sc_trace(mVcdFile, m_axi_gmem0_BREADY, "(port)m_axi_gmem0_BREADY");
    sc_trace(mVcdFile, m_axi_gmem0_BRESP, "(port)m_axi_gmem0_BRESP");
    sc_trace(mVcdFile, m_axi_gmem0_BID, "(port)m_axi_gmem0_BID");
    sc_trace(mVcdFile, m_axi_gmem0_BUSER, "(port)m_axi_gmem0_BUSER");
    sc_trace(mVcdFile, stall_start_ext, "(port)stall_start_ext");
    sc_trace(mVcdFile, stall_done_ext, "(port)stall_done_ext");
    sc_trace(mVcdFile, stall_start_str, "(port)stall_start_str");
    sc_trace(mVcdFile, stall_done_str, "(port)stall_done_str");
    sc_trace(mVcdFile, stall_start_int, "(port)stall_start_int");
    sc_trace(mVcdFile, stall_done_int, "(port)stall_done_int");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, coeffs, "coeffs");
    sc_trace(mVcdFile, src_V, "src_V");
    sc_trace(mVcdFile, width, "width");
    sc_trace(mVcdFile, height, "height");
    sc_trace(mVcdFile, stride, "stride");
    sc_trace(mVcdFile, dst_V, "dst_V");
    sc_trace(mVcdFile, gmem1_AWREADY, "gmem1_AWREADY");
    sc_trace(mVcdFile, gmem1_WREADY, "gmem1_WREADY");
    sc_trace(mVcdFile, gmem1_ARREADY, "gmem1_ARREADY");
    sc_trace(mVcdFile, gmem1_RVALID, "gmem1_RVALID");
    sc_trace(mVcdFile, gmem1_RDATA, "gmem1_RDATA");
    sc_trace(mVcdFile, gmem1_RLAST, "gmem1_RLAST");
    sc_trace(mVcdFile, gmem1_RID, "gmem1_RID");
    sc_trace(mVcdFile, gmem1_RUSER, "gmem1_RUSER");
    sc_trace(mVcdFile, gmem1_RRESP, "gmem1_RRESP");
    sc_trace(mVcdFile, gmem1_BVALID, "gmem1_BVALID");
    sc_trace(mVcdFile, gmem1_BRESP, "gmem1_BRESP");
    sc_trace(mVcdFile, gmem1_BID, "gmem1_BID");
    sc_trace(mVcdFile, gmem1_BUSER, "gmem1_BUSER");
    sc_trace(mVcdFile, gmem0_AWREADY, "gmem0_AWREADY");
    sc_trace(mVcdFile, gmem0_WREADY, "gmem0_WREADY");
    sc_trace(mVcdFile, gmem0_ARREADY, "gmem0_ARREADY");
    sc_trace(mVcdFile, gmem0_RVALID, "gmem0_RVALID");
    sc_trace(mVcdFile, gmem0_RDATA, "gmem0_RDATA");
    sc_trace(mVcdFile, gmem0_RLAST, "gmem0_RLAST");
    sc_trace(mVcdFile, gmem0_RID, "gmem0_RID");
    sc_trace(mVcdFile, gmem0_RUSER, "gmem0_RUSER");
    sc_trace(mVcdFile, gmem0_RRESP, "gmem0_RRESP");
    sc_trace(mVcdFile, gmem0_BVALID, "gmem0_BVALID");
    sc_trace(mVcdFile, gmem0_BRESP, "gmem0_BRESP");
    sc_trace(mVcdFile, gmem0_BID, "gmem0_BID");
    sc_trace(mVcdFile, gmem0_BUSER, "gmem0_BUSER");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_ap_start, "AXIBursts2PixelStream8_U0_ap_start");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_ap_done, "AXIBursts2PixelStream8_U0_ap_done");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_ap_continue, "AXIBursts2PixelStream8_U0_ap_continue");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_ap_idle, "AXIBursts2PixelStream8_U0_ap_idle");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_ap_ready, "AXIBursts2PixelStream8_U0_ap_ready");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_AWVALID, "AXIBursts2PixelStream8_U0_m_axi_axi_V_AWVALID");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_AWADDR, "AXIBursts2PixelStream8_U0_m_axi_axi_V_AWADDR");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_AWID, "AXIBursts2PixelStream8_U0_m_axi_axi_V_AWID");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_AWLEN, "AXIBursts2PixelStream8_U0_m_axi_axi_V_AWLEN");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_AWSIZE, "AXIBursts2PixelStream8_U0_m_axi_axi_V_AWSIZE");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_AWBURST, "AXIBursts2PixelStream8_U0_m_axi_axi_V_AWBURST");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_AWLOCK, "AXIBursts2PixelStream8_U0_m_axi_axi_V_AWLOCK");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_AWCACHE, "AXIBursts2PixelStream8_U0_m_axi_axi_V_AWCACHE");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_AWPROT, "AXIBursts2PixelStream8_U0_m_axi_axi_V_AWPROT");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_AWQOS, "AXIBursts2PixelStream8_U0_m_axi_axi_V_AWQOS");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_AWREGION, "AXIBursts2PixelStream8_U0_m_axi_axi_V_AWREGION");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_AWUSER, "AXIBursts2PixelStream8_U0_m_axi_axi_V_AWUSER");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_WVALID, "AXIBursts2PixelStream8_U0_m_axi_axi_V_WVALID");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_WDATA, "AXIBursts2PixelStream8_U0_m_axi_axi_V_WDATA");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_WSTRB, "AXIBursts2PixelStream8_U0_m_axi_axi_V_WSTRB");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_WLAST, "AXIBursts2PixelStream8_U0_m_axi_axi_V_WLAST");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_WID, "AXIBursts2PixelStream8_U0_m_axi_axi_V_WID");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_WUSER, "AXIBursts2PixelStream8_U0_m_axi_axi_V_WUSER");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_ARVALID, "AXIBursts2PixelStream8_U0_m_axi_axi_V_ARVALID");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_ARADDR, "AXIBursts2PixelStream8_U0_m_axi_axi_V_ARADDR");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_ARID, "AXIBursts2PixelStream8_U0_m_axi_axi_V_ARID");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_ARLEN, "AXIBursts2PixelStream8_U0_m_axi_axi_V_ARLEN");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_ARSIZE, "AXIBursts2PixelStream8_U0_m_axi_axi_V_ARSIZE");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_ARBURST, "AXIBursts2PixelStream8_U0_m_axi_axi_V_ARBURST");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_ARLOCK, "AXIBursts2PixelStream8_U0_m_axi_axi_V_ARLOCK");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_ARCACHE, "AXIBursts2PixelStream8_U0_m_axi_axi_V_ARCACHE");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_ARPROT, "AXIBursts2PixelStream8_U0_m_axi_axi_V_ARPROT");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_ARQOS, "AXIBursts2PixelStream8_U0_m_axi_axi_V_ARQOS");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_ARREGION, "AXIBursts2PixelStream8_U0_m_axi_axi_V_ARREGION");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_ARUSER, "AXIBursts2PixelStream8_U0_m_axi_axi_V_ARUSER");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_RREADY, "AXIBursts2PixelStream8_U0_m_axi_axi_V_RREADY");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_m_axi_axi_V_BREADY, "AXIBursts2PixelStream8_U0_m_axi_axi_V_BREADY");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_stream_V_din, "AXIBursts2PixelStream8_U0_stream_V_din");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_stream_V_write, "AXIBursts2PixelStream8_U0_stream_V_write");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_width_out_din, "AXIBursts2PixelStream8_U0_width_out_din");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_width_out_write, "AXIBursts2PixelStream8_U0_width_out_write");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_height_out_din, "AXIBursts2PixelStream8_U0_height_out_din");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_height_out_write, "AXIBursts2PixelStream8_U0_height_out_write");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_stride_out_din, "AXIBursts2PixelStream8_U0_stride_out_din");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_stride_out_write, "AXIBursts2PixelStream8_U0_stride_out_write");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_coeffs_out_din, "AXIBursts2PixelStream8_U0_coeffs_out_din");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_coeffs_out_write, "AXIBursts2PixelStream8_U0_coeffs_out_write");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_dst_V_out_din, "AXIBursts2PixelStream8_U0_dst_V_out_din");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_dst_V_out_write, "AXIBursts2PixelStream8_U0_dst_V_out_write");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_ap_ext_blocking_n, "AXIBursts2PixelStream8_U0_ap_ext_blocking_n");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_ap_str_blocking_n, "AXIBursts2PixelStream8_U0_ap_str_blocking_n");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_ap_int_blocking_n, "AXIBursts2PixelStream8_U0_ap_int_blocking_n");
    sc_trace(mVcdFile, Filter2D_U0_ap_start, "Filter2D_U0_ap_start");
    sc_trace(mVcdFile, Filter2D_U0_ap_done, "Filter2D_U0_ap_done");
    sc_trace(mVcdFile, Filter2D_U0_ap_continue, "Filter2D_U0_ap_continue");
    sc_trace(mVcdFile, Filter2D_U0_ap_idle, "Filter2D_U0_ap_idle");
    sc_trace(mVcdFile, Filter2D_U0_ap_ready, "Filter2D_U0_ap_ready");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_AWVALID, "Filter2D_U0_m_axi_srcCoeffs_AWVALID");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_AWADDR, "Filter2D_U0_m_axi_srcCoeffs_AWADDR");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_AWID, "Filter2D_U0_m_axi_srcCoeffs_AWID");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_AWLEN, "Filter2D_U0_m_axi_srcCoeffs_AWLEN");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_AWSIZE, "Filter2D_U0_m_axi_srcCoeffs_AWSIZE");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_AWBURST, "Filter2D_U0_m_axi_srcCoeffs_AWBURST");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_AWLOCK, "Filter2D_U0_m_axi_srcCoeffs_AWLOCK");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_AWCACHE, "Filter2D_U0_m_axi_srcCoeffs_AWCACHE");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_AWPROT, "Filter2D_U0_m_axi_srcCoeffs_AWPROT");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_AWQOS, "Filter2D_U0_m_axi_srcCoeffs_AWQOS");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_AWREGION, "Filter2D_U0_m_axi_srcCoeffs_AWREGION");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_AWUSER, "Filter2D_U0_m_axi_srcCoeffs_AWUSER");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_WVALID, "Filter2D_U0_m_axi_srcCoeffs_WVALID");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_WDATA, "Filter2D_U0_m_axi_srcCoeffs_WDATA");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_WSTRB, "Filter2D_U0_m_axi_srcCoeffs_WSTRB");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_WLAST, "Filter2D_U0_m_axi_srcCoeffs_WLAST");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_WID, "Filter2D_U0_m_axi_srcCoeffs_WID");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_WUSER, "Filter2D_U0_m_axi_srcCoeffs_WUSER");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_ARVALID, "Filter2D_U0_m_axi_srcCoeffs_ARVALID");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_ARADDR, "Filter2D_U0_m_axi_srcCoeffs_ARADDR");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_ARID, "Filter2D_U0_m_axi_srcCoeffs_ARID");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_ARLEN, "Filter2D_U0_m_axi_srcCoeffs_ARLEN");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_ARSIZE, "Filter2D_U0_m_axi_srcCoeffs_ARSIZE");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_ARBURST, "Filter2D_U0_m_axi_srcCoeffs_ARBURST");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_ARLOCK, "Filter2D_U0_m_axi_srcCoeffs_ARLOCK");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_ARCACHE, "Filter2D_U0_m_axi_srcCoeffs_ARCACHE");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_ARPROT, "Filter2D_U0_m_axi_srcCoeffs_ARPROT");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_ARQOS, "Filter2D_U0_m_axi_srcCoeffs_ARQOS");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_ARREGION, "Filter2D_U0_m_axi_srcCoeffs_ARREGION");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_ARUSER, "Filter2D_U0_m_axi_srcCoeffs_ARUSER");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_RREADY, "Filter2D_U0_m_axi_srcCoeffs_RREADY");
    sc_trace(mVcdFile, Filter2D_U0_m_axi_srcCoeffs_BREADY, "Filter2D_U0_m_axi_srcCoeffs_BREADY");
    sc_trace(mVcdFile, Filter2D_U0_srcCoeffs_offset_read, "Filter2D_U0_srcCoeffs_offset_read");
    sc_trace(mVcdFile, Filter2D_U0_srcImg_V_read, "Filter2D_U0_srcImg_V_read");
    sc_trace(mVcdFile, Filter2D_U0_width_read, "Filter2D_U0_width_read");
    sc_trace(mVcdFile, Filter2D_U0_height_read, "Filter2D_U0_height_read");
    sc_trace(mVcdFile, Filter2D_U0_dstImg_V_din, "Filter2D_U0_dstImg_V_din");
    sc_trace(mVcdFile, Filter2D_U0_dstImg_V_write, "Filter2D_U0_dstImg_V_write");
    sc_trace(mVcdFile, Filter2D_U0_width_out_din, "Filter2D_U0_width_out_din");
    sc_trace(mVcdFile, Filter2D_U0_width_out_write, "Filter2D_U0_width_out_write");
    sc_trace(mVcdFile, Filter2D_U0_height_out_din, "Filter2D_U0_height_out_din");
    sc_trace(mVcdFile, Filter2D_U0_height_out_write, "Filter2D_U0_height_out_write");
    sc_trace(mVcdFile, Filter2D_U0_ap_ext_blocking_n, "Filter2D_U0_ap_ext_blocking_n");
    sc_trace(mVcdFile, Filter2D_U0_ap_str_blocking_n, "Filter2D_U0_ap_str_blocking_n");
    sc_trace(mVcdFile, Filter2D_U0_ap_int_blocking_n, "Filter2D_U0_ap_int_blocking_n");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_ap_start, "PixelStream2AXIBursts_U0_ap_start");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_ap_done, "PixelStream2AXIBursts_U0_ap_done");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_ap_continue, "PixelStream2AXIBursts_U0_ap_continue");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_ap_idle, "PixelStream2AXIBursts_U0_ap_idle");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_ap_ready, "PixelStream2AXIBursts_U0_ap_ready");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_stream_V_read, "PixelStream2AXIBursts_U0_stream_V_read");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_width_read, "PixelStream2AXIBursts_U0_width_read");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_height_read, "PixelStream2AXIBursts_U0_height_read");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_stride_read, "PixelStream2AXIBursts_U0_stride_read");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_AWVALID, "PixelStream2AXIBursts_U0_m_axi_aximm_V_AWVALID");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_AWADDR, "PixelStream2AXIBursts_U0_m_axi_aximm_V_AWADDR");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_AWID, "PixelStream2AXIBursts_U0_m_axi_aximm_V_AWID");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_AWLEN, "PixelStream2AXIBursts_U0_m_axi_aximm_V_AWLEN");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_AWSIZE, "PixelStream2AXIBursts_U0_m_axi_aximm_V_AWSIZE");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_AWBURST, "PixelStream2AXIBursts_U0_m_axi_aximm_V_AWBURST");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_AWLOCK, "PixelStream2AXIBursts_U0_m_axi_aximm_V_AWLOCK");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_AWCACHE, "PixelStream2AXIBursts_U0_m_axi_aximm_V_AWCACHE");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_AWPROT, "PixelStream2AXIBursts_U0_m_axi_aximm_V_AWPROT");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_AWQOS, "PixelStream2AXIBursts_U0_m_axi_aximm_V_AWQOS");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_AWREGION, "PixelStream2AXIBursts_U0_m_axi_aximm_V_AWREGION");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_AWUSER, "PixelStream2AXIBursts_U0_m_axi_aximm_V_AWUSER");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_WVALID, "PixelStream2AXIBursts_U0_m_axi_aximm_V_WVALID");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_WDATA, "PixelStream2AXIBursts_U0_m_axi_aximm_V_WDATA");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_WSTRB, "PixelStream2AXIBursts_U0_m_axi_aximm_V_WSTRB");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_WLAST, "PixelStream2AXIBursts_U0_m_axi_aximm_V_WLAST");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_WID, "PixelStream2AXIBursts_U0_m_axi_aximm_V_WID");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_WUSER, "PixelStream2AXIBursts_U0_m_axi_aximm_V_WUSER");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_ARVALID, "PixelStream2AXIBursts_U0_m_axi_aximm_V_ARVALID");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_ARADDR, "PixelStream2AXIBursts_U0_m_axi_aximm_V_ARADDR");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_ARID, "PixelStream2AXIBursts_U0_m_axi_aximm_V_ARID");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_ARLEN, "PixelStream2AXIBursts_U0_m_axi_aximm_V_ARLEN");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_ARSIZE, "PixelStream2AXIBursts_U0_m_axi_aximm_V_ARSIZE");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_ARBURST, "PixelStream2AXIBursts_U0_m_axi_aximm_V_ARBURST");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_ARLOCK, "PixelStream2AXIBursts_U0_m_axi_aximm_V_ARLOCK");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_ARCACHE, "PixelStream2AXIBursts_U0_m_axi_aximm_V_ARCACHE");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_ARPROT, "PixelStream2AXIBursts_U0_m_axi_aximm_V_ARPROT");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_ARQOS, "PixelStream2AXIBursts_U0_m_axi_aximm_V_ARQOS");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_ARREGION, "PixelStream2AXIBursts_U0_m_axi_aximm_V_ARREGION");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_ARUSER, "PixelStream2AXIBursts_U0_m_axi_aximm_V_ARUSER");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_RREADY, "PixelStream2AXIBursts_U0_m_axi_aximm_V_RREADY");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_m_axi_aximm_V_BREADY, "PixelStream2AXIBursts_U0_m_axi_aximm_V_BREADY");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_aximm_V_offset_read, "PixelStream2AXIBursts_U0_aximm_V_offset_read");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_ap_ext_blocking_n, "PixelStream2AXIBursts_U0_ap_ext_blocking_n");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_ap_str_blocking_n, "PixelStream2AXIBursts_U0_ap_str_blocking_n");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_ap_int_blocking_n, "PixelStream2AXIBursts_U0_ap_int_blocking_n");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, src_pixels_V_full_n, "src_pixels_V_full_n");
    sc_trace(mVcdFile, src_pixels_V_dout, "src_pixels_V_dout");
    sc_trace(mVcdFile, src_pixels_V_empty_n, "src_pixels_V_empty_n");
    sc_trace(mVcdFile, width_c_full_n, "width_c_full_n");
    sc_trace(mVcdFile, width_c_dout, "width_c_dout");
    sc_trace(mVcdFile, width_c_empty_n, "width_c_empty_n");
    sc_trace(mVcdFile, height_c_full_n, "height_c_full_n");
    sc_trace(mVcdFile, height_c_dout, "height_c_dout");
    sc_trace(mVcdFile, height_c_empty_n, "height_c_empty_n");
    sc_trace(mVcdFile, stride_c_full_n, "stride_c_full_n");
    sc_trace(mVcdFile, stride_c_dout, "stride_c_dout");
    sc_trace(mVcdFile, stride_c_empty_n, "stride_c_empty_n");
    sc_trace(mVcdFile, coeffs_c_full_n, "coeffs_c_full_n");
    sc_trace(mVcdFile, coeffs_c_dout, "coeffs_c_dout");
    sc_trace(mVcdFile, coeffs_c_empty_n, "coeffs_c_empty_n");
    sc_trace(mVcdFile, dst_V_c_full_n, "dst_V_c_full_n");
    sc_trace(mVcdFile, dst_V_c_dout, "dst_V_c_dout");
    sc_trace(mVcdFile, dst_V_c_empty_n, "dst_V_c_empty_n");
    sc_trace(mVcdFile, dst_pixels_V_full_n, "dst_pixels_V_full_n");
    sc_trace(mVcdFile, dst_pixels_V_dout, "dst_pixels_V_dout");
    sc_trace(mVcdFile, dst_pixels_V_empty_n, "dst_pixels_V_empty_n");
    sc_trace(mVcdFile, width_c1_full_n, "width_c1_full_n");
    sc_trace(mVcdFile, width_c1_dout, "width_c1_dout");
    sc_trace(mVcdFile, width_c1_empty_n, "width_c1_empty_n");
    sc_trace(mVcdFile, height_c2_full_n, "height_c2_full_n");
    sc_trace(mVcdFile, height_c2_dout, "height_c2_dout");
    sc_trace(mVcdFile, height_c2_empty_n, "height_c2_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, ap_sync_reg_Filter2D_U0_ap_ready, "ap_sync_reg_Filter2D_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_Filter2D_U0_ap_ready, "ap_sync_Filter2D_U0_ap_ready");
    sc_trace(mVcdFile, Filter2D_U0_ap_ready_count, "Filter2D_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_AXIBursts2PixelStream8_U0_ap_ready, "ap_sync_reg_AXIBursts2PixelStream8_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_AXIBursts2PixelStream8_U0_ap_ready, "ap_sync_AXIBursts2PixelStream8_U0_ap_ready");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_ap_ready_count, "AXIBursts2PixelStream8_U0_ap_ready_count");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_start_full_n, "AXIBursts2PixelStream8_U0_start_full_n");
    sc_trace(mVcdFile, AXIBursts2PixelStream8_U0_start_write, "AXIBursts2PixelStream8_U0_start_write");
    sc_trace(mVcdFile, Filter2D_U0_start_full_n, "Filter2D_U0_start_full_n");
    sc_trace(mVcdFile, Filter2D_U0_start_write, "Filter2D_U0_start_write");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_start_full_n, "PixelStream2AXIBursts_U0_start_full_n");
    sc_trace(mVcdFile, PixelStream2AXIBursts_U0_start_write, "PixelStream2AXIBursts_U0_start_write");
    sc_trace(mVcdFile, ap_ext_blocking_cur_n, "ap_ext_blocking_cur_n");
    sc_trace(mVcdFile, ap_str_blocking_cur_n, "ap_str_blocking_cur_n");
    sc_trace(mVcdFile, ap_int_blocking_cur_n, "ap_int_blocking_cur_n");
    sc_trace(mVcdFile, ap_ext_blocking_sub_n, "ap_ext_blocking_sub_n");
    sc_trace(mVcdFile, ap_str_blocking_sub_n, "ap_str_blocking_sub_n");
    sc_trace(mVcdFile, ap_int_blocking_sub_n, "ap_int_blocking_sub_n");
    sc_trace(mVcdFile, ap_ext_blocking_n, "ap_ext_blocking_n");
    sc_trace(mVcdFile, ap_str_blocking_n, "ap_str_blocking_n");
    sc_trace(mVcdFile, ap_int_blocking_n, "ap_int_blocking_n");
    sc_trace(mVcdFile, ap_ext_blocking_n_reg, "ap_ext_blocking_n_reg");
    sc_trace(mVcdFile, ap_str_blocking_n_reg, "ap_str_blocking_n_reg");
    sc_trace(mVcdFile, ap_int_blocking_n_reg, "ap_int_blocking_n_reg");
#endif

    }
    mHdltvinHandle.open("Filter2DKernel.hdltvin.dat");
    mHdltvoutHandle.open("Filter2DKernel.hdltvout.dat");
}

Filter2DKernel::~Filter2DKernel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete Filter2DKernel_control_s_axi_U;
    delete Filter2DKernel_gmem1_m_axi_U;
    delete Filter2DKernel_gmem0_m_axi_U;
    delete AXIBursts2PixelStream8_U0;
    delete Filter2D_U0;
    delete PixelStream2AXIBursts_U0;
    delete src_pixels_V_U;
    delete width_c_U;
    delete height_c_U;
    delete stride_c_U;
    delete coeffs_c_U;
    delete dst_V_c_U;
    delete dst_pixels_V_U;
    delete width_c1_U;
    delete height_c2_U;
}

void Filter2DKernel::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Filter2DKernel::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_0;
}

void Filter2DKernel::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv2_0;
}

void Filter2DKernel::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv64_0;
}

void Filter2DKernel::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv1_0;
}

void Filter2DKernel::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv32_0;
}

void Filter2DKernel::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv3_0;
}

void Filter2DKernel::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv4_0;
}

void Filter2DKernel::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv256_lc_1;
}

void Filter2DKernel::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(AXIBursts2PixelStream8_U0_ap_ready.read(), ap_const_logic_0))) {
        AXIBursts2PixelStream8_U0_ap_ready_count = (!AXIBursts2PixelStream8_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(AXIBursts2PixelStream8_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, AXIBursts2PixelStream8_U0_ap_ready.read()))) {
        AXIBursts2PixelStream8_U0_ap_ready_count = (!AXIBursts2PixelStream8_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(AXIBursts2PixelStream8_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_0, Filter2D_U0_ap_ready.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()))) {
        Filter2D_U0_ap_ready_count = (!Filter2D_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Filter2D_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, Filter2D_U0_ap_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()))) {
        Filter2D_U0_ap_ready_count = (!Filter2D_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Filter2D_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        PixelStream2AXIBursts_U0_ap_start = ap_const_logic_0;
    } else {
        PixelStream2AXIBursts_U0_ap_start = ap_const_logic_1;
    }
    ap_ext_blocking_n_reg = ap_ext_blocking_n.read();
    ap_int_blocking_n_reg = ap_int_blocking_n.read();
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
    ap_str_blocking_n_reg = ap_str_blocking_n.read();
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_AXIBursts2PixelStream8_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_AXIBursts2PixelStream8_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_AXIBursts2PixelStream8_U0_ap_ready = ap_sync_AXIBursts2PixelStream8_U0_ap_ready.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_Filter2D_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_Filter2D_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_Filter2D_U0_ap_ready = ap_sync_Filter2D_U0_ap_ready.read();
        }
    }
}

void Filter2DKernel::thread_AXIBursts2PixelStream8_U0_ap_continue() {
    AXIBursts2PixelStream8_U0_ap_continue = ap_const_logic_1;
}

void Filter2DKernel::thread_AXIBursts2PixelStream8_U0_ap_start() {
    AXIBursts2PixelStream8_U0_ap_start = (ap_start.read() & (ap_sync_reg_AXIBursts2PixelStream8_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void Filter2DKernel::thread_AXIBursts2PixelStream8_U0_start_full_n() {
    AXIBursts2PixelStream8_U0_start_full_n = ap_const_logic_0;
}

void Filter2DKernel::thread_AXIBursts2PixelStream8_U0_start_write() {
    AXIBursts2PixelStream8_U0_start_write = ap_const_logic_0;
}

void Filter2DKernel::thread_Filter2D_U0_ap_continue() {
    Filter2D_U0_ap_continue = ap_const_logic_1;
}

void Filter2DKernel::thread_Filter2D_U0_ap_start() {
    Filter2D_U0_ap_start = (ap_start.read() & (ap_sync_reg_Filter2D_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void Filter2DKernel::thread_Filter2D_U0_start_full_n() {
    Filter2D_U0_start_full_n = ap_const_logic_0;
}

void Filter2DKernel::thread_Filter2D_U0_start_write() {
    Filter2D_U0_start_write = ap_const_logic_0;
}

void Filter2DKernel::thread_PixelStream2AXIBursts_U0_ap_continue() {
    PixelStream2AXIBursts_U0_ap_continue = ap_const_logic_1;
}

void Filter2DKernel::thread_PixelStream2AXIBursts_U0_start_full_n() {
    PixelStream2AXIBursts_U0_start_full_n = ap_const_logic_0;
}

void Filter2DKernel::thread_PixelStream2AXIBursts_U0_start_write() {
    PixelStream2AXIBursts_U0_start_write = ap_const_logic_0;
}

void Filter2DKernel::thread_ap_done() {
    ap_done = PixelStream2AXIBursts_U0_ap_done.read();
}

void Filter2DKernel::thread_ap_ext_blocking_cur_n() {
    ap_ext_blocking_cur_n = ap_const_logic_1;
}

void Filter2DKernel::thread_ap_ext_blocking_n() {
    ap_ext_blocking_n = (ap_ext_blocking_cur_n.read() & ap_ext_blocking_sub_n.read());
}

void Filter2DKernel::thread_ap_ext_blocking_sub_n() {
    ap_ext_blocking_sub_n = (AXIBursts2PixelStream8_U0_ap_ext_blocking_n.read() & Filter2D_U0_ap_ext_blocking_n.read() & PixelStream2AXIBursts_U0_ap_ext_blocking_n.read());
}

void Filter2DKernel::thread_ap_idle() {
    ap_idle = (AXIBursts2PixelStream8_U0_ap_idle.read() & Filter2D_U0_ap_idle.read() & PixelStream2AXIBursts_U0_ap_idle.read());
}

void Filter2DKernel::thread_ap_int_blocking_cur_n() {
    ap_int_blocking_cur_n = ap_const_logic_1;
}

void Filter2DKernel::thread_ap_int_blocking_n() {
    ap_int_blocking_n = (ap_int_blocking_cur_n.read() & ap_int_blocking_sub_n.read());
}

void Filter2DKernel::thread_ap_int_blocking_sub_n() {
    ap_int_blocking_sub_n = (AXIBursts2PixelStream8_U0_ap_int_blocking_n.read() & Filter2D_U0_ap_int_blocking_n.read() & PixelStream2AXIBursts_U0_ap_int_blocking_n.read());
}

void Filter2DKernel::thread_ap_ready() {
    ap_ready = ap_sync_ready.read();
}

void Filter2DKernel::thread_ap_str_blocking_cur_n() {
    ap_str_blocking_cur_n = ap_const_logic_1;
}

void Filter2DKernel::thread_ap_str_blocking_n() {
    ap_str_blocking_n = (ap_str_blocking_cur_n.read() & ap_str_blocking_sub_n.read());
}

void Filter2DKernel::thread_ap_str_blocking_sub_n() {
    ap_str_blocking_sub_n = (AXIBursts2PixelStream8_U0_ap_str_blocking_n.read() & Filter2D_U0_ap_str_blocking_n.read() & PixelStream2AXIBursts_U0_ap_str_blocking_n.read());
}

void Filter2DKernel::thread_ap_sync_AXIBursts2PixelStream8_U0_ap_ready() {
    ap_sync_AXIBursts2PixelStream8_U0_ap_ready = (AXIBursts2PixelStream8_U0_ap_ready.read() | ap_sync_reg_AXIBursts2PixelStream8_U0_ap_ready.read());
}

void Filter2DKernel::thread_ap_sync_Filter2D_U0_ap_ready() {
    ap_sync_Filter2D_U0_ap_ready = (Filter2D_U0_ap_ready.read() | ap_sync_reg_Filter2D_U0_ap_ready.read());
}

void Filter2DKernel::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void Filter2DKernel::thread_ap_sync_done() {
    ap_sync_done = PixelStream2AXIBursts_U0_ap_done.read();
}

void Filter2DKernel::thread_ap_sync_ready() {
    ap_sync_ready = (ap_sync_Filter2D_U0_ap_ready.read() & ap_sync_AXIBursts2PixelStream8_U0_ap_ready.read());
}

void Filter2DKernel::thread_stall_done_ext() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_ext_blocking_n_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_ext_blocking_n.read()))) {
        stall_done_ext = ap_const_logic_1;
    } else {
        stall_done_ext = ap_const_logic_0;
    }
}

void Filter2DKernel::thread_stall_done_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_int_blocking_n_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_int_blocking_n.read()))) {
        stall_done_int = ap_const_logic_1;
    } else {
        stall_done_int = ap_const_logic_0;
    }
}

void Filter2DKernel::thread_stall_done_str() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_str_blocking_n_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_str_blocking_n.read()))) {
        stall_done_str = ap_const_logic_1;
    } else {
        stall_done_str = ap_const_logic_0;
    }
}

void Filter2DKernel::thread_stall_start_ext() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_ext_blocking_n_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_ext_blocking_n.read()))) {
        stall_start_ext = ap_const_logic_1;
    } else {
        stall_start_ext = ap_const_logic_0;
    }
}

void Filter2DKernel::thread_stall_start_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_int_blocking_n_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_int_blocking_n.read()))) {
        stall_start_int = ap_const_logic_1;
    } else {
        stall_start_int = ap_const_logic_0;
    }
}

void Filter2DKernel::thread_stall_start_str() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_str_blocking_n_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_str_blocking_n.read()))) {
        stall_start_str = ap_const_logic_1;
    } else {
        stall_start_str = ap_const_logic_0;
    }
}

void Filter2DKernel::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWVALID\" :  \"" << m_axi_gmem1_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_AWREADY\" :  \"" << m_axi_gmem1_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWADDR\" :  \"" << m_axi_gmem1_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWID\" :  \"" << m_axi_gmem1_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWLEN\" :  \"" << m_axi_gmem1_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWSIZE\" :  \"" << m_axi_gmem1_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWBURST\" :  \"" << m_axi_gmem1_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWLOCK\" :  \"" << m_axi_gmem1_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWCACHE\" :  \"" << m_axi_gmem1_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWPROT\" :  \"" << m_axi_gmem1_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWQOS\" :  \"" << m_axi_gmem1_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWREGION\" :  \"" << m_axi_gmem1_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWUSER\" :  \"" << m_axi_gmem1_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WVALID\" :  \"" << m_axi_gmem1_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_WREADY\" :  \"" << m_axi_gmem1_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WDATA\" :  \"" << m_axi_gmem1_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WSTRB\" :  \"" << m_axi_gmem1_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WLAST\" :  \"" << m_axi_gmem1_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WID\" :  \"" << m_axi_gmem1_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WUSER\" :  \"" << m_axi_gmem1_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARVALID\" :  \"" << m_axi_gmem1_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_ARREADY\" :  \"" << m_axi_gmem1_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARADDR\" :  \"" << m_axi_gmem1_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARID\" :  \"" << m_axi_gmem1_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARLEN\" :  \"" << m_axi_gmem1_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARSIZE\" :  \"" << m_axi_gmem1_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARBURST\" :  \"" << m_axi_gmem1_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARLOCK\" :  \"" << m_axi_gmem1_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARCACHE\" :  \"" << m_axi_gmem1_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARPROT\" :  \"" << m_axi_gmem1_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARQOS\" :  \"" << m_axi_gmem1_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARREGION\" :  \"" << m_axi_gmem1_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARUSER\" :  \"" << m_axi_gmem1_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RVALID\" :  \"" << m_axi_gmem1_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_RREADY\" :  \"" << m_axi_gmem1_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RDATA\" :  \"" << m_axi_gmem1_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RLAST\" :  \"" << m_axi_gmem1_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RID\" :  \"" << m_axi_gmem1_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RUSER\" :  \"" << m_axi_gmem1_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RRESP\" :  \"" << m_axi_gmem1_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BVALID\" :  \"" << m_axi_gmem1_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_BREADY\" :  \"" << m_axi_gmem1_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BRESP\" :  \"" << m_axi_gmem1_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BID\" :  \"" << m_axi_gmem1_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BUSER\" :  \"" << m_axi_gmem1_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWVALID\" :  \"" << m_axi_gmem0_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_AWREADY\" :  \"" << m_axi_gmem0_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWADDR\" :  \"" << m_axi_gmem0_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWID\" :  \"" << m_axi_gmem0_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWLEN\" :  \"" << m_axi_gmem0_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWSIZE\" :  \"" << m_axi_gmem0_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWBURST\" :  \"" << m_axi_gmem0_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWLOCK\" :  \"" << m_axi_gmem0_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWCACHE\" :  \"" << m_axi_gmem0_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWPROT\" :  \"" << m_axi_gmem0_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWQOS\" :  \"" << m_axi_gmem0_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWREGION\" :  \"" << m_axi_gmem0_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_AWUSER\" :  \"" << m_axi_gmem0_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WVALID\" :  \"" << m_axi_gmem0_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_WREADY\" :  \"" << m_axi_gmem0_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WDATA\" :  \"" << m_axi_gmem0_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WSTRB\" :  \"" << m_axi_gmem0_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WLAST\" :  \"" << m_axi_gmem0_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WID\" :  \"" << m_axi_gmem0_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_WUSER\" :  \"" << m_axi_gmem0_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARVALID\" :  \"" << m_axi_gmem0_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_ARREADY\" :  \"" << m_axi_gmem0_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARADDR\" :  \"" << m_axi_gmem0_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARID\" :  \"" << m_axi_gmem0_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARLEN\" :  \"" << m_axi_gmem0_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARSIZE\" :  \"" << m_axi_gmem0_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARBURST\" :  \"" << m_axi_gmem0_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARLOCK\" :  \"" << m_axi_gmem0_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARCACHE\" :  \"" << m_axi_gmem0_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARPROT\" :  \"" << m_axi_gmem0_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARQOS\" :  \"" << m_axi_gmem0_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARREGION\" :  \"" << m_axi_gmem0_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_ARUSER\" :  \"" << m_axi_gmem0_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RVALID\" :  \"" << m_axi_gmem0_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_RREADY\" :  \"" << m_axi_gmem0_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RDATA\" :  \"" << m_axi_gmem0_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RLAST\" :  \"" << m_axi_gmem0_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RID\" :  \"" << m_axi_gmem0_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RUSER\" :  \"" << m_axi_gmem0_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_RRESP\" :  \"" << m_axi_gmem0_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_BVALID\" :  \"" << m_axi_gmem0_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem0_BREADY\" :  \"" << m_axi_gmem0_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_BRESP\" :  \"" << m_axi_gmem0_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_BID\" :  \"" << m_axi_gmem0_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem0_BUSER\" :  \"" << m_axi_gmem0_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stall_start_ext\" :  \"" << stall_start_ext.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stall_done_ext\" :  \"" << stall_done_ext.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stall_start_str\" :  \"" << stall_start_str.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stall_done_str\" :  \"" << stall_done_str.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stall_start_int\" :  \"" << stall_start_int.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stall_done_int\" :  \"" << stall_done_int.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

