-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity AXIBursts2PixelStream8 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_axi_V_AWVALID : OUT STD_LOGIC;
    m_axi_axi_V_AWREADY : IN STD_LOGIC;
    m_axi_axi_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_axi_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_axi_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_axi_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_axi_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_axi_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_axi_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_axi_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_axi_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_axi_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_axi_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_axi_V_WVALID : OUT STD_LOGIC;
    m_axi_axi_V_WREADY : IN STD_LOGIC;
    m_axi_axi_V_WDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    m_axi_axi_V_WSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_axi_V_WLAST : OUT STD_LOGIC;
    m_axi_axi_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_axi_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_axi_V_ARVALID : OUT STD_LOGIC;
    m_axi_axi_V_ARREADY : IN STD_LOGIC;
    m_axi_axi_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_axi_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_axi_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_axi_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_axi_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_axi_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_axi_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_axi_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_axi_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_axi_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_axi_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_axi_V_RVALID : IN STD_LOGIC;
    m_axi_axi_V_RREADY : OUT STD_LOGIC;
    m_axi_axi_V_RDATA : IN STD_LOGIC_VECTOR (255 downto 0);
    m_axi_axi_V_RLAST : IN STD_LOGIC;
    m_axi_axi_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_axi_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_axi_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_axi_V_BVALID : IN STD_LOGIC;
    m_axi_axi_V_BREADY : OUT STD_LOGIC;
    m_axi_axi_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_axi_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_axi_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    axi_V_offset : IN STD_LOGIC_VECTOR (63 downto 0);
    width : IN STD_LOGIC_VECTOR (31 downto 0);
    height : IN STD_LOGIC_VECTOR (31 downto 0);
    stride : IN STD_LOGIC_VECTOR (31 downto 0);
    stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    stream_V_full_n : IN STD_LOGIC;
    stream_V_write : OUT STD_LOGIC;
    width_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    width_out_full_n : IN STD_LOGIC;
    width_out_write : OUT STD_LOGIC;
    height_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    height_out_full_n : IN STD_LOGIC;
    height_out_write : OUT STD_LOGIC;
    stride_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    stride_out_full_n : IN STD_LOGIC;
    stride_out_write : OUT STD_LOGIC;
    coeffs : IN STD_LOGIC_VECTOR (63 downto 0);
    dst_V : IN STD_LOGIC_VECTOR (63 downto 0);
    coeffs_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    coeffs_out_full_n : IN STD_LOGIC;
    coeffs_out_write : OUT STD_LOGIC;
    dst_V_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    dst_V_out_full_n : IN STD_LOGIC;
    dst_V_out_write : OUT STD_LOGIC;
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC );
end;


architecture behav of AXIBursts2PixelStream8 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000100000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000010000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000100000000000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000001000000000000";
    constant ap_ST_fsm_pp1_stage2 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000010000000000000";
    constant ap_ST_fsm_pp1_stage3 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000100000000000000";
    constant ap_ST_fsm_pp1_stage4 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000001000000000000000";
    constant ap_ST_fsm_pp1_stage5 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000010000000000000000";
    constant ap_ST_fsm_pp1_stage6 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000100000000000000000";
    constant ap_ST_fsm_pp1_stage7 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000001000000000000000000";
    constant ap_ST_fsm_pp1_stage8 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000010000000000000000000";
    constant ap_ST_fsm_pp1_stage9 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000100000000000000000000";
    constant ap_ST_fsm_pp1_stage10 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000001000000000000000000000";
    constant ap_ST_fsm_pp1_stage11 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000010000000000000000000000";
    constant ap_ST_fsm_pp1_stage12 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000100000000000000000000000";
    constant ap_ST_fsm_pp1_stage13 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000001000000000000000000000000";
    constant ap_ST_fsm_pp1_stage14 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000010000000000000000000000000";
    constant ap_ST_fsm_pp1_stage15 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000100000000000000000000000000";
    constant ap_ST_fsm_pp1_stage16 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000001000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage17 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000010000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage18 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000100000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage19 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000001000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage20 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage21 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000100000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage22 : STD_LOGIC_VECTOR (43 downto 0) := "00000000001000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage23 : STD_LOGIC_VECTOR (43 downto 0) := "00000000010000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage24 : STD_LOGIC_VECTOR (43 downto 0) := "00000000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage25 : STD_LOGIC_VECTOR (43 downto 0) := "00000001000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage26 : STD_LOGIC_VECTOR (43 downto 0) := "00000010000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage27 : STD_LOGIC_VECTOR (43 downto 0) := "00000100000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage28 : STD_LOGIC_VECTOR (43 downto 0) := "00001000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage29 : STD_LOGIC_VECTOR (43 downto 0) := "00010000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage30 : STD_LOGIC_VECTOR (43 downto 0) := "00100000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage31 : STD_LOGIC_VECTOR (43 downto 0) := "01000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (43 downto 0) := "10000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv17_1F : STD_LOGIC_VECTOR (16 downto 0) := "00000000000011111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv6_B : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_const_lv6_C : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_const_lv6_D : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_const_lv6_E : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_11 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv6_13 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv6_1A : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_const_lv6_1B : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_const_lv6_1C : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv32_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_97 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010111";
    constant ap_const_lv32_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100111";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_B7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110111";
    constant ap_const_lv32_B8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_C7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000111";
    constant ap_const_lv32_C8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001000";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_D7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010111";
    constant ap_const_lv32_D8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_E7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100111";
    constant ap_const_lv32_E8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_F7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110111";
    constant ap_const_lv32_F8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal axi_V_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal axi_V_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond1_i_i_reg_1623 : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal exitcond_i_i_reg_1642 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_i_reg_1656 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage2 : signal is "none";
    signal ap_block_pp1_stage2 : BOOLEAN;
    signal or_cond_1_i_i_i_i_reg_1660 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage3 : signal is "none";
    signal ap_block_pp1_stage3 : BOOLEAN;
    signal or_cond_2_i_i_i_i_reg_1664 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage4 : signal is "none";
    signal ap_block_pp1_stage4 : BOOLEAN;
    signal or_cond_3_i_i_i_i_reg_1668 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage5 : signal is "none";
    signal ap_block_pp1_stage5 : BOOLEAN;
    signal or_cond_4_i_i_i_i_reg_1672 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage6 : signal is "none";
    signal ap_block_pp1_stage6 : BOOLEAN;
    signal or_cond_5_i_i_i_i_reg_1676 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage7 : signal is "none";
    signal ap_block_pp1_stage7 : BOOLEAN;
    signal or_cond_6_i_i_i_i_reg_1680 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage8 : signal is "none";
    signal ap_block_pp1_stage8 : BOOLEAN;
    signal or_cond_7_i_i_i_i_reg_1684 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage9 : signal is "none";
    signal ap_block_pp1_stage9 : BOOLEAN;
    signal or_cond_8_i_i_i_i_reg_1688 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage10 : signal is "none";
    signal ap_block_pp1_stage10 : BOOLEAN;
    signal or_cond_9_i_i_i_i_reg_1692 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage11 : signal is "none";
    signal ap_block_pp1_stage11 : BOOLEAN;
    signal or_cond_10_i_i_i_i_reg_1696 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage12 : signal is "none";
    signal ap_block_pp1_stage12 : BOOLEAN;
    signal or_cond_11_i_i_i_i_reg_1700 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage13 : signal is "none";
    signal ap_block_pp1_stage13 : BOOLEAN;
    signal or_cond_12_i_i_i_i_reg_1704 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage14 : signal is "none";
    signal ap_block_pp1_stage14 : BOOLEAN;
    signal or_cond_13_i_i_i_i_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage15 : signal is "none";
    signal ap_block_pp1_stage15 : BOOLEAN;
    signal or_cond_14_i_i_i_i_reg_1712 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage16 : signal is "none";
    signal ap_block_pp1_stage16 : BOOLEAN;
    signal or_cond_15_i_i_i_i_reg_1716 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage17 : signal is "none";
    signal ap_block_pp1_stage17 : BOOLEAN;
    signal or_cond_16_i_i_i_i_reg_1720 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage18 : signal is "none";
    signal ap_block_pp1_stage18 : BOOLEAN;
    signal or_cond_17_i_i_i_i_reg_1724 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage19 : signal is "none";
    signal ap_block_pp1_stage19 : BOOLEAN;
    signal or_cond_18_i_i_i_i_reg_1728 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage20 : signal is "none";
    signal ap_block_pp1_stage20 : BOOLEAN;
    signal or_cond_19_i_i_i_i_reg_1732 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage21 : signal is "none";
    signal ap_block_pp1_stage21 : BOOLEAN;
    signal or_cond_20_i_i_i_i_reg_1736 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage22 : signal is "none";
    signal ap_block_pp1_stage22 : BOOLEAN;
    signal or_cond_21_i_i_i_i_reg_1740 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage23 : signal is "none";
    signal ap_block_pp1_stage23 : BOOLEAN;
    signal or_cond_22_i_i_i_i_reg_1744 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage24 : signal is "none";
    signal ap_block_pp1_stage24 : BOOLEAN;
    signal or_cond_23_i_i_i_i_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage25 : signal is "none";
    signal ap_block_pp1_stage25 : BOOLEAN;
    signal or_cond_24_i_i_i_i_reg_1752 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage26 : signal is "none";
    signal ap_block_pp1_stage26 : BOOLEAN;
    signal or_cond_25_i_i_i_i_reg_1756 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage27 : signal is "none";
    signal ap_block_pp1_stage27 : BOOLEAN;
    signal or_cond_26_i_i_i_i_reg_1760 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage28 : signal is "none";
    signal ap_block_pp1_stage28 : BOOLEAN;
    signal or_cond_27_i_i_i_i_reg_1764 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage29 : signal is "none";
    signal ap_block_pp1_stage29 : BOOLEAN;
    signal or_cond_28_i_i_i_i_reg_1768 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage30 : signal is "none";
    signal ap_block_pp1_stage30 : BOOLEAN;
    signal or_cond_29_i_i_i_i_reg_1772 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage31 : signal is "none";
    signal ap_block_pp1_stage31 : BOOLEAN;
    signal or_cond_30_i_i_i_i_reg_1776 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal or_cond_i_i_i_i_211_reg_1780 : STD_LOGIC_VECTOR (0 downto 0);
    signal width_out_blk_n : STD_LOGIC;
    signal height_out_blk_n : STD_LOGIC;
    signal stride_out_blk_n : STD_LOGIC;
    signal coeffs_out_blk_n : STD_LOGIC;
    signal dst_V_out_blk_n : STD_LOGIC;
    signal x_i_i_i_i_reg_521 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_pp0_iter1_x_i_i_i_i_reg_521 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state10_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal x1_i_i_i_i_reg_533 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_683_cast_i_i_fu_554_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_683_cast_i_i_reg_1413 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_85_fu_562_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_85_reg_1418 : STD_LOGIC_VECTOR (15 downto 0);
    signal loopWidth_cast6_i_i_i_i_fu_580_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal loopWidth_cast6_i_i_i_i_reg_1423 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_i_i_i_i_209_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_209_reg_1429 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_cast_i_i_i_i_fu_618_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_31_cast_i_i_i_i_reg_1434 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_32_cast_i_i_i_i_fu_628_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_32_cast_i_i_i_i_reg_1439 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_81_i_i_i_i_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_i_i_i_i_reg_1444 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1449 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_2_i_i_i_i_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_2_i_i_i_i_reg_1454 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_reg_1459 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_4_i_i_i_i_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_4_i_i_i_i_reg_1464 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_5_i_i_i_i_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_5_i_i_i_i_reg_1469 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_6_i_i_i_i_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_6_i_i_i_i_reg_1474 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp2_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp2_reg_1479 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_8_i_i_i_i_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_8_i_i_i_i_reg_1484 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_9_i_i_i_i_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_9_i_i_i_i_reg_1489 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_i_i_i_i_210_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_i_i_i_i_210_reg_1494 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_10_i_i_i_i_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_10_i_i_i_i_reg_1499 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_11_i_i_i_i_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_11_i_i_i_i_reg_1504 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_12_i_i_i_i_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_12_i_i_i_i_reg_1509 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_13_i_i_i_i_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_13_i_i_i_i_reg_1514 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp3_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp3_reg_1519 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_15_i_i_i_i_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_15_i_i_i_i_reg_1524 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_16_i_i_i_i_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_16_i_i_i_i_reg_1529 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_17_i_i_i_i_fu_780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_17_i_i_i_i_reg_1534 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_18_i_i_i_i_fu_786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_18_i_i_i_i_reg_1539 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_19_i_i_i_i_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_19_i_i_i_i_reg_1544 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_20_i_i_i_i_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_20_i_i_i_i_reg_1549 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_21_i_i_i_i_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_21_i_i_i_i_reg_1554 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_22_i_i_i_i_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_22_i_i_i_i_reg_1559 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_23_i_i_i_i_fu_816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_23_i_i_i_i_reg_1564 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_24_i_i_i_i_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_24_i_i_i_i_reg_1569 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_25_i_i_i_i_fu_828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_25_i_i_i_i_reg_1574 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_26_i_i_i_i_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_26_i_i_i_i_reg_1579 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_27_i_i_i_i_fu_840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_27_i_i_i_i_reg_1584 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_28_i_i_i_i_fu_846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_28_i_i_i_i_reg_1589 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_29_i_i_i_i_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_29_i_i_i_i_reg_1594 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_fu_858_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_reg_1599 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_fu_867_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_reg_1607 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sum_i_i_fu_877_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal sum_i_i_reg_1612 : STD_LOGIC_VECTOR (59 downto 0);
    signal exitcond2_i_i_i_i_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_m_axi_axi_V_ARREADY : STD_LOGIC;
    signal exitcond1_i_i_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond1_i_i_reg_1623 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_897_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal x_reg_1627 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal axi_V_addr_read_reg_1632 : STD_LOGIC_VECTOR (255 downto 0);
    signal yoffset_fu_908_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal yoffset_reg_1637 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal exitcond_i_i_fu_913_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state14_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state46_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal x_2_fu_918_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal x_2_reg_1646 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_cond_i_i_i_i_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_1_i_i_i_i_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_2_i_i_i_i_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_3_i_i_i_i_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_4_i_i_i_i_fu_958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_5_i_i_i_i_fu_963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_6_i_i_i_i_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_7_i_i_i_i_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_8_i_i_i_i_fu_978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_9_i_i_i_i_fu_983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_10_i_i_i_i_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_11_i_i_i_i_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_12_i_i_i_i_fu_998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_13_i_i_i_i_fu_1003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_14_i_i_i_i_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_15_i_i_i_i_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_16_i_i_i_i_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_17_i_i_i_i_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_18_i_i_i_i_fu_1028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_19_i_i_i_i_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_20_i_i_i_i_fu_1038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_21_i_i_i_i_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_22_i_i_i_i_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_23_i_i_i_i_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_24_i_i_i_i_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_25_i_i_i_i_fu_1063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_26_i_i_i_i_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_27_i_i_i_i_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_28_i_i_i_i_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_29_i_i_i_i_fu_1083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_30_i_i_i_i_fu_1088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_i_211_fu_1093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_reg_1784 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_predicate_op256_write_state15 : BOOLEAN;
    signal ap_block_state15_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal tmp_93_reg_1789 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_94_reg_1794 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_95_reg_1799 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_96_reg_1804 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_97_reg_1809 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_98_reg_1814 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_99_reg_1819 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_100_reg_1824 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_101_reg_1829 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_102_reg_1834 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_103_reg_1839 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_104_reg_1844 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_105_reg_1849 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_106_reg_1854 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_107_reg_1859 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_108_reg_1864 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_109_reg_1869 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_110_reg_1874 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_111_reg_1879 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_112_reg_1884 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_113_reg_1889 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_114_reg_1894 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_115_reg_1899 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_116_reg_1904 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_117_reg_1909 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_118_reg_1914 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_119_reg_1919 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_120_reg_1924 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_121_reg_1929 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_122_reg_1934 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state10 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state14 : STD_LOGIC;
    signal ap_predicate_op347_write_state45 : BOOLEAN;
    signal ap_block_state45_pp1_stage31_iter0 : BOOLEAN;
    signal ap_block_pp1_stage31_subdone : BOOLEAN;
    signal buff_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buff_V_ce0 : STD_LOGIC;
    signal buff_V_we0 : STD_LOGIC;
    signal buff_V_q0 : STD_LOGIC_VECTOR (255 downto 0);
    signal yoffset_i_i_i_i_reg_498 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal y_i_i_i_i_reg_510 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_i_i_i_i_phi_fu_525_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal x1_i_i_i_i_phi_fu_537_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_36_i_i_i_i_fu_903_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_i_i_i_i_fu_928_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_cast_i_i_fu_882_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_m_axi_axi_V_ARREADY : STD_LOGIC := '0';
    signal ap_predicate_op289_write_state16 : BOOLEAN;
    signal ap_block_state16_pp1_stage2_iter0 : BOOLEAN;
    signal ap_block_pp1_stage2_11001 : BOOLEAN;
    signal ap_predicate_op291_write_state17 : BOOLEAN;
    signal ap_block_state17_pp1_stage3_iter0 : BOOLEAN;
    signal ap_block_pp1_stage3_11001 : BOOLEAN;
    signal ap_predicate_op293_write_state18 : BOOLEAN;
    signal ap_block_state18_pp1_stage4_iter0 : BOOLEAN;
    signal ap_block_pp1_stage4_11001 : BOOLEAN;
    signal ap_predicate_op295_write_state19 : BOOLEAN;
    signal ap_block_state19_pp1_stage5_iter0 : BOOLEAN;
    signal ap_block_pp1_stage5_11001 : BOOLEAN;
    signal ap_predicate_op297_write_state20 : BOOLEAN;
    signal ap_block_state20_pp1_stage6_iter0 : BOOLEAN;
    signal ap_block_pp1_stage6_11001 : BOOLEAN;
    signal ap_predicate_op299_write_state21 : BOOLEAN;
    signal ap_block_state21_pp1_stage7_iter0 : BOOLEAN;
    signal ap_block_pp1_stage7_11001 : BOOLEAN;
    signal ap_predicate_op301_write_state22 : BOOLEAN;
    signal ap_block_state22_pp1_stage8_iter0 : BOOLEAN;
    signal ap_block_pp1_stage8_11001 : BOOLEAN;
    signal ap_predicate_op303_write_state23 : BOOLEAN;
    signal ap_block_state23_pp1_stage9_iter0 : BOOLEAN;
    signal ap_block_pp1_stage9_11001 : BOOLEAN;
    signal ap_predicate_op305_write_state24 : BOOLEAN;
    signal ap_block_state24_pp1_stage10_iter0 : BOOLEAN;
    signal ap_block_pp1_stage10_11001 : BOOLEAN;
    signal ap_predicate_op307_write_state25 : BOOLEAN;
    signal ap_block_state25_pp1_stage11_iter0 : BOOLEAN;
    signal ap_block_pp1_stage11_11001 : BOOLEAN;
    signal ap_predicate_op309_write_state26 : BOOLEAN;
    signal ap_block_state26_pp1_stage12_iter0 : BOOLEAN;
    signal ap_block_pp1_stage12_11001 : BOOLEAN;
    signal ap_predicate_op311_write_state27 : BOOLEAN;
    signal ap_block_state27_pp1_stage13_iter0 : BOOLEAN;
    signal ap_block_pp1_stage13_11001 : BOOLEAN;
    signal ap_predicate_op313_write_state28 : BOOLEAN;
    signal ap_block_state28_pp1_stage14_iter0 : BOOLEAN;
    signal ap_block_pp1_stage14_11001 : BOOLEAN;
    signal ap_predicate_op315_write_state29 : BOOLEAN;
    signal ap_block_state29_pp1_stage15_iter0 : BOOLEAN;
    signal ap_block_pp1_stage15_11001 : BOOLEAN;
    signal ap_predicate_op317_write_state30 : BOOLEAN;
    signal ap_block_state30_pp1_stage16_iter0 : BOOLEAN;
    signal ap_block_pp1_stage16_11001 : BOOLEAN;
    signal ap_predicate_op319_write_state31 : BOOLEAN;
    signal ap_block_state31_pp1_stage17_iter0 : BOOLEAN;
    signal ap_block_pp1_stage17_11001 : BOOLEAN;
    signal ap_predicate_op321_write_state32 : BOOLEAN;
    signal ap_block_state32_pp1_stage18_iter0 : BOOLEAN;
    signal ap_block_pp1_stage18_11001 : BOOLEAN;
    signal ap_predicate_op323_write_state33 : BOOLEAN;
    signal ap_block_state33_pp1_stage19_iter0 : BOOLEAN;
    signal ap_block_pp1_stage19_11001 : BOOLEAN;
    signal ap_predicate_op325_write_state34 : BOOLEAN;
    signal ap_block_state34_pp1_stage20_iter0 : BOOLEAN;
    signal ap_block_pp1_stage20_11001 : BOOLEAN;
    signal ap_predicate_op327_write_state35 : BOOLEAN;
    signal ap_block_state35_pp1_stage21_iter0 : BOOLEAN;
    signal ap_block_pp1_stage21_11001 : BOOLEAN;
    signal ap_predicate_op329_write_state36 : BOOLEAN;
    signal ap_block_state36_pp1_stage22_iter0 : BOOLEAN;
    signal ap_block_pp1_stage22_11001 : BOOLEAN;
    signal ap_predicate_op331_write_state37 : BOOLEAN;
    signal ap_block_state37_pp1_stage23_iter0 : BOOLEAN;
    signal ap_block_pp1_stage23_11001 : BOOLEAN;
    signal ap_predicate_op333_write_state38 : BOOLEAN;
    signal ap_block_state38_pp1_stage24_iter0 : BOOLEAN;
    signal ap_block_pp1_stage24_11001 : BOOLEAN;
    signal ap_predicate_op335_write_state39 : BOOLEAN;
    signal ap_block_state39_pp1_stage25_iter0 : BOOLEAN;
    signal ap_block_pp1_stage25_11001 : BOOLEAN;
    signal ap_predicate_op337_write_state40 : BOOLEAN;
    signal ap_block_state40_pp1_stage26_iter0 : BOOLEAN;
    signal ap_block_pp1_stage26_11001 : BOOLEAN;
    signal ap_predicate_op339_write_state41 : BOOLEAN;
    signal ap_block_state41_pp1_stage27_iter0 : BOOLEAN;
    signal ap_block_pp1_stage27_11001 : BOOLEAN;
    signal ap_predicate_op341_write_state42 : BOOLEAN;
    signal ap_block_state42_pp1_stage28_iter0 : BOOLEAN;
    signal ap_block_pp1_stage28_11001 : BOOLEAN;
    signal ap_predicate_op343_write_state43 : BOOLEAN;
    signal ap_block_state43_pp1_stage29_iter0 : BOOLEAN;
    signal ap_block_pp1_stage29_11001 : BOOLEAN;
    signal ap_predicate_op345_write_state44 : BOOLEAN;
    signal ap_block_state44_pp1_stage30_iter0 : BOOLEAN;
    signal ap_block_pp1_stage30_11001 : BOOLEAN;
    signal ap_block_pp1_stage31_11001 : BOOLEAN;
    signal tmp_91_fu_1098_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp1_stage1_01001 : BOOLEAN;
    signal ap_block_pp1_stage2_01001 : BOOLEAN;
    signal ap_block_pp1_stage3_01001 : BOOLEAN;
    signal ap_block_pp1_stage4_01001 : BOOLEAN;
    signal ap_block_pp1_stage5_01001 : BOOLEAN;
    signal ap_block_pp1_stage6_01001 : BOOLEAN;
    signal ap_block_pp1_stage7_01001 : BOOLEAN;
    signal ap_block_pp1_stage8_01001 : BOOLEAN;
    signal ap_block_pp1_stage9_01001 : BOOLEAN;
    signal ap_block_pp1_stage10_01001 : BOOLEAN;
    signal ap_block_pp1_stage11_01001 : BOOLEAN;
    signal ap_block_pp1_stage12_01001 : BOOLEAN;
    signal ap_block_pp1_stage13_01001 : BOOLEAN;
    signal ap_block_pp1_stage14_01001 : BOOLEAN;
    signal ap_block_pp1_stage15_01001 : BOOLEAN;
    signal ap_block_pp1_stage16_01001 : BOOLEAN;
    signal ap_block_pp1_stage17_01001 : BOOLEAN;
    signal ap_block_pp1_stage18_01001 : BOOLEAN;
    signal ap_block_pp1_stage19_01001 : BOOLEAN;
    signal ap_block_pp1_stage20_01001 : BOOLEAN;
    signal ap_block_pp1_stage21_01001 : BOOLEAN;
    signal ap_block_pp1_stage22_01001 : BOOLEAN;
    signal ap_block_pp1_stage23_01001 : BOOLEAN;
    signal ap_block_pp1_stage24_01001 : BOOLEAN;
    signal ap_block_pp1_stage25_01001 : BOOLEAN;
    signal ap_block_pp1_stage26_01001 : BOOLEAN;
    signal ap_block_pp1_stage27_01001 : BOOLEAN;
    signal ap_block_pp1_stage28_01001 : BOOLEAN;
    signal ap_block_pp1_stage29_01001 : BOOLEAN;
    signal ap_block_pp1_stage30_01001 : BOOLEAN;
    signal ap_block_pp1_stage31_01001 : BOOLEAN;
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal tmp_fu_544_p4 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_84_fu_558_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal widthInPix_cast7_i_i_i_i_fu_566_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_i_i_i_i_fu_574_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal remainPix_fu_570_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal remainPix_cast_i_i_i_i_fu_590_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_31_i_i_i_i_fu_608_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_32_i_i_i_i_fu_622_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal remainPix_2_fu_600_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_87_fu_638_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_88_fu_660_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_89_fu_694_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_90_fu_752_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_cast_i_i_fu_873_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal x1_cast_i_i_i_i_fu_924_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_42_i_i_i_i_fu_933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (43 downto 0);
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal ap_block_pp1_stage2_subdone : BOOLEAN;
    signal ap_block_pp1_stage3_subdone : BOOLEAN;
    signal ap_block_pp1_stage4_subdone : BOOLEAN;
    signal ap_block_pp1_stage5_subdone : BOOLEAN;
    signal ap_block_pp1_stage6_subdone : BOOLEAN;
    signal ap_block_pp1_stage7_subdone : BOOLEAN;
    signal ap_block_pp1_stage8_subdone : BOOLEAN;
    signal ap_block_pp1_stage9_subdone : BOOLEAN;
    signal ap_block_pp1_stage10_subdone : BOOLEAN;
    signal ap_block_pp1_stage11_subdone : BOOLEAN;
    signal ap_block_pp1_stage12_subdone : BOOLEAN;
    signal ap_block_pp1_stage13_subdone : BOOLEAN;
    signal ap_block_pp1_stage14_subdone : BOOLEAN;
    signal ap_block_pp1_stage15_subdone : BOOLEAN;
    signal ap_block_pp1_stage16_subdone : BOOLEAN;
    signal ap_block_pp1_stage17_subdone : BOOLEAN;
    signal ap_block_pp1_stage18_subdone : BOOLEAN;
    signal ap_block_pp1_stage19_subdone : BOOLEAN;
    signal ap_block_pp1_stage20_subdone : BOOLEAN;
    signal ap_block_pp1_stage21_subdone : BOOLEAN;
    signal ap_block_pp1_stage22_subdone : BOOLEAN;
    signal ap_block_pp1_stage23_subdone : BOOLEAN;
    signal ap_block_pp1_stage24_subdone : BOOLEAN;
    signal ap_block_pp1_stage25_subdone : BOOLEAN;
    signal ap_block_pp1_stage26_subdone : BOOLEAN;
    signal ap_block_pp1_stage27_subdone : BOOLEAN;
    signal ap_block_pp1_stage28_subdone : BOOLEAN;
    signal ap_block_pp1_stage29_subdone : BOOLEAN;
    signal ap_block_pp1_stage30_subdone : BOOLEAN;
    signal ap_ext_blocking_cur_n : STD_LOGIC;
    signal ap_int_blocking_cur_n : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component AXIBursts2PixelStream8_buff_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (255 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (255 downto 0) );
    end component;



begin
    buff_V_U : component AXIBursts2PixelStream8_buff_V
    generic map (
        DataWidth => 256,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_V_address0,
        ce0 => buff_V_ce0,
        we0 => buff_V_we0,
        d0 => axi_V_addr_read_reg_1632,
        q0 => buff_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = exitcond2_i_i_i_i_fu_862_p2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state10))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_subdone = ap_const_boolean_0)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state10)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state10 xor ap_const_logic_1);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_subdone = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state14))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state14) and (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_subdone = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage31) and (ap_block_pp1_stage31_subdone = ap_const_boolean_0))))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_condition_pp1_exit_iter0_state14 xor ap_const_logic_1);
                elsif ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_subdone = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage31) and (ap_block_pp1_stage31_subdone = ap_const_boolean_0)))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_axi_V_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_axi_V_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    if ((ap_sig_ioackin_m_axi_axi_V_ARREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_m_axi_axi_V_ARREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = m_axi_axi_V_ARREADY)) then 
                        ap_reg_ioackin_m_axi_axi_V_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    x1_i_i_i_i_reg_533_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0_11001 = ap_const_boolean_0))) then 
                x1_i_i_i_i_reg_533 <= x_2_reg_1646;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                x1_i_i_i_i_reg_533 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    x_i_i_i_i_reg_521_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_i_i_reg_1623) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then 
                x_i_i_i_i_reg_521 <= x_reg_1627;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                x_i_i_i_i_reg_521 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    y_i_i_i_i_reg_510_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
                y_i_i_i_i_reg_510 <= y_reg_1607;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1) or (ap_const_logic_0 = coeffs_out_full_n) or (ap_const_logic_0 = dst_V_out_full_n) or (ap_const_logic_0 = width_out_full_n) or (ap_const_logic_0 = height_out_full_n) or (ap_const_logic_0 = stride_out_full_n))))) then 
                y_i_i_i_i_reg_510 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    yoffset_i_i_i_i_reg_498_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
                yoffset_i_i_i_i_reg_498 <= yoffset_reg_1637;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1) or (ap_const_logic_0 = coeffs_out_full_n) or (ap_const_logic_0 = dst_V_out_full_n) or (ap_const_logic_0 = width_out_full_n) or (ap_const_logic_0 = height_out_full_n) or (ap_const_logic_0 = stride_out_full_n))))) then 
                yoffset_i_i_i_i_reg_498 <= ap_const_lv27_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter1_exitcond1_i_i_reg_1623 <= exitcond1_i_i_reg_1623;
                ap_reg_pp0_iter1_x_i_i_i_i_reg_521 <= x_i_i_i_i_reg_521;
                exitcond1_i_i_reg_1623 <= exitcond1_i_i_fu_892_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond1_i_i_reg_1623) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then
                axi_V_addr_read_reg_1632 <= m_axi_axi_V_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_11001 = ap_const_boolean_0))) then
                exitcond_i_i_reg_1642 <= exitcond_i_i_fu_913_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1) or (ap_const_logic_0 = coeffs_out_full_n) or (ap_const_logic_0 = dst_V_out_full_n) or (ap_const_logic_0 = width_out_full_n) or (ap_const_logic_0 = height_out_full_n) or (ap_const_logic_0 = stride_out_full_n))))) then
                icmp1_reg_1459 <= icmp1_fu_670_p2;
                icmp2_reg_1479 <= icmp2_fu_704_p2;
                icmp3_reg_1519 <= icmp3_fu_762_p2;
                icmp_reg_1449 <= icmp_fu_648_p2;
                loopWidth_cast6_i_i_i_i_reg_1423 <= tmp_i_i_i_i_fu_574_p2(16 downto 5);
                    tmp_31_cast_i_i_i_i_reg_1434(10 downto 0) <= tmp_31_cast_i_i_i_i_fu_618_p1(10 downto 0);
                tmp_32_cast_i_i_i_i_reg_1439 <= tmp_32_cast_i_i_i_i_fu_628_p1;
                    tmp_683_cast_i_i_reg_1413(58 downto 0) <= tmp_683_cast_i_i_fu_554_p1(58 downto 0);
                tmp_81_10_i_i_i_i_reg_1499 <= tmp_81_10_i_i_i_i_fu_728_p2;
                tmp_81_11_i_i_i_i_reg_1504 <= tmp_81_11_i_i_i_i_fu_734_p2;
                tmp_81_12_i_i_i_i_reg_1509 <= tmp_81_12_i_i_i_i_fu_740_p2;
                tmp_81_13_i_i_i_i_reg_1514 <= tmp_81_13_i_i_i_i_fu_746_p2;
                tmp_81_15_i_i_i_i_reg_1524 <= tmp_81_15_i_i_i_i_fu_768_p2;
                tmp_81_16_i_i_i_i_reg_1529 <= tmp_81_16_i_i_i_i_fu_774_p2;
                tmp_81_17_i_i_i_i_reg_1534 <= tmp_81_17_i_i_i_i_fu_780_p2;
                tmp_81_18_i_i_i_i_reg_1539 <= tmp_81_18_i_i_i_i_fu_786_p2;
                tmp_81_19_i_i_i_i_reg_1544 <= tmp_81_19_i_i_i_i_fu_792_p2;
                tmp_81_20_i_i_i_i_reg_1549 <= tmp_81_20_i_i_i_i_fu_798_p2;
                tmp_81_21_i_i_i_i_reg_1554 <= tmp_81_21_i_i_i_i_fu_804_p2;
                tmp_81_22_i_i_i_i_reg_1559 <= tmp_81_22_i_i_i_i_fu_810_p2;
                tmp_81_23_i_i_i_i_reg_1564 <= tmp_81_23_i_i_i_i_fu_816_p2;
                tmp_81_24_i_i_i_i_reg_1569 <= tmp_81_24_i_i_i_i_fu_822_p2;
                tmp_81_25_i_i_i_i_reg_1574 <= tmp_81_25_i_i_i_i_fu_828_p2;
                tmp_81_26_i_i_i_i_reg_1579 <= tmp_81_26_i_i_i_i_fu_834_p2;
                tmp_81_27_i_i_i_i_reg_1584 <= tmp_81_27_i_i_i_i_fu_840_p2;
                tmp_81_28_i_i_i_i_reg_1589 <= tmp_81_28_i_i_i_i_fu_846_p2;
                tmp_81_29_i_i_i_i_reg_1594 <= tmp_81_29_i_i_i_i_fu_852_p2;
                tmp_81_2_i_i_i_i_reg_1454 <= tmp_81_2_i_i_i_i_fu_654_p2;
                tmp_81_4_i_i_i_i_reg_1464 <= tmp_81_4_i_i_i_i_fu_676_p2;
                tmp_81_5_i_i_i_i_reg_1469 <= tmp_81_5_i_i_i_i_fu_682_p2;
                tmp_81_6_i_i_i_i_reg_1474 <= tmp_81_6_i_i_i_i_fu_688_p2;
                tmp_81_8_i_i_i_i_reg_1484 <= tmp_81_8_i_i_i_i_fu_710_p2;
                tmp_81_9_i_i_i_i_reg_1489 <= tmp_81_9_i_i_i_i_fu_716_p2;
                tmp_81_i_i_i_i_210_reg_1494 <= tmp_81_i_i_i_i_210_fu_722_p2;
                tmp_81_i_i_i_i_reg_1444 <= tmp_81_i_i_i_i_fu_632_p2;
                tmp_85_reg_1418 <= tmp_85_fu_562_p1;
                tmp_i_i_i_i_209_reg_1429 <= tmp_i_i_i_i_209_fu_594_p2;
                    tmp_i_i_reg_1599(11 downto 0) <= tmp_i_i_fu_858_p1(11 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_i_i_fu_913_p2))) then
                or_cond_10_i_i_i_i_reg_1696 <= or_cond_10_i_i_i_i_fu_988_p2;
                or_cond_11_i_i_i_i_reg_1700 <= or_cond_11_i_i_i_i_fu_993_p2;
                or_cond_12_i_i_i_i_reg_1704 <= or_cond_12_i_i_i_i_fu_998_p2;
                or_cond_13_i_i_i_i_reg_1708 <= or_cond_13_i_i_i_i_fu_1003_p2;
                or_cond_14_i_i_i_i_reg_1712 <= or_cond_14_i_i_i_i_fu_1008_p2;
                or_cond_15_i_i_i_i_reg_1716 <= or_cond_15_i_i_i_i_fu_1013_p2;
                or_cond_16_i_i_i_i_reg_1720 <= or_cond_16_i_i_i_i_fu_1018_p2;
                or_cond_17_i_i_i_i_reg_1724 <= or_cond_17_i_i_i_i_fu_1023_p2;
                or_cond_18_i_i_i_i_reg_1728 <= or_cond_18_i_i_i_i_fu_1028_p2;
                or_cond_19_i_i_i_i_reg_1732 <= or_cond_19_i_i_i_i_fu_1033_p2;
                or_cond_1_i_i_i_i_reg_1660 <= or_cond_1_i_i_i_i_fu_943_p2;
                or_cond_20_i_i_i_i_reg_1736 <= or_cond_20_i_i_i_i_fu_1038_p2;
                or_cond_21_i_i_i_i_reg_1740 <= or_cond_21_i_i_i_i_fu_1043_p2;
                or_cond_22_i_i_i_i_reg_1744 <= or_cond_22_i_i_i_i_fu_1048_p2;
                or_cond_23_i_i_i_i_reg_1748 <= or_cond_23_i_i_i_i_fu_1053_p2;
                or_cond_24_i_i_i_i_reg_1752 <= or_cond_24_i_i_i_i_fu_1058_p2;
                or_cond_25_i_i_i_i_reg_1756 <= or_cond_25_i_i_i_i_fu_1063_p2;
                or_cond_26_i_i_i_i_reg_1760 <= or_cond_26_i_i_i_i_fu_1068_p2;
                or_cond_27_i_i_i_i_reg_1764 <= or_cond_27_i_i_i_i_fu_1073_p2;
                or_cond_28_i_i_i_i_reg_1768 <= or_cond_28_i_i_i_i_fu_1078_p2;
                or_cond_29_i_i_i_i_reg_1772 <= or_cond_29_i_i_i_i_fu_1083_p2;
                or_cond_2_i_i_i_i_reg_1664 <= or_cond_2_i_i_i_i_fu_948_p2;
                or_cond_30_i_i_i_i_reg_1776 <= or_cond_30_i_i_i_i_fu_1088_p2;
                or_cond_3_i_i_i_i_reg_1668 <= or_cond_3_i_i_i_i_fu_953_p2;
                or_cond_4_i_i_i_i_reg_1672 <= or_cond_4_i_i_i_i_fu_958_p2;
                or_cond_5_i_i_i_i_reg_1676 <= or_cond_5_i_i_i_i_fu_963_p2;
                or_cond_6_i_i_i_i_reg_1680 <= or_cond_6_i_i_i_i_fu_968_p2;
                or_cond_7_i_i_i_i_reg_1684 <= or_cond_7_i_i_i_i_fu_973_p2;
                or_cond_8_i_i_i_i_reg_1688 <= or_cond_8_i_i_i_i_fu_978_p2;
                or_cond_9_i_i_i_i_reg_1692 <= or_cond_9_i_i_i_i_fu_983_p2;
                or_cond_i_i_i_i_211_reg_1780 <= or_cond_i_i_i_i_211_fu_1093_p2;
                or_cond_i_i_i_i_reg_1656 <= or_cond_i_i_i_i_fu_938_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = exitcond2_i_i_i_i_fu_862_p2))) then
                sum_i_i_reg_1612 <= sum_i_i_fu_877_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_block_pp1_stage1_11001 = ap_const_boolean_0))) then
                tmp_100_reg_1824 <= buff_V_q0(79 downto 72);
                tmp_101_reg_1829 <= buff_V_q0(87 downto 80);
                tmp_102_reg_1834 <= buff_V_q0(95 downto 88);
                tmp_103_reg_1839 <= buff_V_q0(103 downto 96);
                tmp_104_reg_1844 <= buff_V_q0(111 downto 104);
                tmp_105_reg_1849 <= buff_V_q0(119 downto 112);
                tmp_106_reg_1854 <= buff_V_q0(127 downto 120);
                tmp_107_reg_1859 <= buff_V_q0(135 downto 128);
                tmp_108_reg_1864 <= buff_V_q0(143 downto 136);
                tmp_109_reg_1869 <= buff_V_q0(151 downto 144);
                tmp_110_reg_1874 <= buff_V_q0(159 downto 152);
                tmp_111_reg_1879 <= buff_V_q0(167 downto 160);
                tmp_112_reg_1884 <= buff_V_q0(175 downto 168);
                tmp_113_reg_1889 <= buff_V_q0(183 downto 176);
                tmp_114_reg_1894 <= buff_V_q0(191 downto 184);
                tmp_115_reg_1899 <= buff_V_q0(199 downto 192);
                tmp_116_reg_1904 <= buff_V_q0(207 downto 200);
                tmp_117_reg_1909 <= buff_V_q0(215 downto 208);
                tmp_118_reg_1914 <= buff_V_q0(223 downto 216);
                tmp_119_reg_1919 <= buff_V_q0(231 downto 224);
                tmp_120_reg_1924 <= buff_V_q0(239 downto 232);
                tmp_121_reg_1929 <= buff_V_q0(247 downto 240);
                tmp_122_reg_1934 <= buff_V_q0(255 downto 248);
                tmp_92_reg_1784 <= buff_V_q0(15 downto 8);
                tmp_93_reg_1789 <= buff_V_q0(23 downto 16);
                tmp_94_reg_1794 <= buff_V_q0(31 downto 24);
                tmp_95_reg_1799 <= buff_V_q0(39 downto 32);
                tmp_96_reg_1804 <= buff_V_q0(47 downto 40);
                tmp_97_reg_1809 <= buff_V_q0(55 downto 48);
                tmp_98_reg_1814 <= buff_V_q0(63 downto 56);
                tmp_99_reg_1819 <= buff_V_q0(71 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_11001 = ap_const_boolean_0))) then
                x_2_reg_1646 <= x_2_fu_918_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                x_reg_1627 <= x_fu_897_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                y_reg_1607 <= y_fu_867_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                yoffset_reg_1637 <= yoffset_fu_908_p2;
            end if;
        end if;
    end process;
    tmp_683_cast_i_i_reg_1413(59) <= '0';
    tmp_31_cast_i_i_i_i_reg_1434(26 downto 11) <= "0000000000000000";
    tmp_i_i_reg_1599(31 downto 12) <= "00000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, width_out_full_n, height_out_full_n, stride_out_full_n, coeffs_out_full_n, dst_V_out_full_n, ap_CS_fsm_state3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter0, ap_CS_fsm_state2, exitcond2_i_i_i_i_fu_862_p2, ap_sig_ioackin_m_axi_axi_V_ARREADY, exitcond1_i_i_fu_892_p2, ap_enable_reg_pp0_iter0, exitcond_i_i_fu_913_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_block_pp1_stage31_subdone, ap_block_pp1_stage1_subdone, ap_block_pp1_stage2_subdone, ap_block_pp1_stage3_subdone, ap_block_pp1_stage4_subdone, ap_block_pp1_stage5_subdone, ap_block_pp1_stage6_subdone, ap_block_pp1_stage7_subdone, ap_block_pp1_stage8_subdone, ap_block_pp1_stage9_subdone, ap_block_pp1_stage10_subdone, ap_block_pp1_stage11_subdone, ap_block_pp1_stage12_subdone, ap_block_pp1_stage13_subdone, ap_block_pp1_stage14_subdone, ap_block_pp1_stage15_subdone, ap_block_pp1_stage16_subdone, ap_block_pp1_stage17_subdone, ap_block_pp1_stage18_subdone, ap_block_pp1_stage19_subdone, ap_block_pp1_stage20_subdone, ap_block_pp1_stage21_subdone, ap_block_pp1_stage22_subdone, ap_block_pp1_stage23_subdone, ap_block_pp1_stage24_subdone, ap_block_pp1_stage25_subdone, ap_block_pp1_stage26_subdone, ap_block_pp1_stage27_subdone, ap_block_pp1_stage28_subdone, ap_block_pp1_stage29_subdone, ap_block_pp1_stage30_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1) or (ap_const_logic_0 = coeffs_out_full_n) or (ap_const_logic_0 = dst_V_out_full_n) or (ap_const_logic_0 = width_out_full_n) or (ap_const_logic_0 = height_out_full_n) or (ap_const_logic_0 = stride_out_full_n))))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = exitcond2_i_i_i_i_fu_862_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_sig_ioackin_m_axi_axi_V_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond1_i_i_fu_892_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond1_i_i_fu_892_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (((ap_block_pp1_stage0_subdone = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_subdone = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_i_i_fu_913_p2))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage0_subdone = ap_const_boolean_0) and (ap_const_lv1_1 = exitcond_i_i_fu_913_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((ap_block_pp1_stage1_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_pp1_stage2 => 
                if ((ap_block_pp1_stage2_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                end if;
            when ap_ST_fsm_pp1_stage3 => 
                if ((ap_block_pp1_stage3_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                end if;
            when ap_ST_fsm_pp1_stage4 => 
                if ((ap_block_pp1_stage4_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                end if;
            when ap_ST_fsm_pp1_stage5 => 
                if ((ap_block_pp1_stage5_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
                end if;
            when ap_ST_fsm_pp1_stage6 => 
                if ((ap_block_pp1_stage6_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage6;
                end if;
            when ap_ST_fsm_pp1_stage7 => 
                if ((ap_block_pp1_stage7_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage7;
                end if;
            when ap_ST_fsm_pp1_stage8 => 
                if ((ap_block_pp1_stage8_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage8;
                end if;
            when ap_ST_fsm_pp1_stage9 => 
                if ((ap_block_pp1_stage9_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage9;
                end if;
            when ap_ST_fsm_pp1_stage10 => 
                if ((ap_block_pp1_stage10_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage10;
                end if;
            when ap_ST_fsm_pp1_stage11 => 
                if ((ap_block_pp1_stage11_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage11;
                end if;
            when ap_ST_fsm_pp1_stage12 => 
                if ((ap_block_pp1_stage12_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage12;
                end if;
            when ap_ST_fsm_pp1_stage13 => 
                if ((ap_block_pp1_stage13_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage13;
                end if;
            when ap_ST_fsm_pp1_stage14 => 
                if ((ap_block_pp1_stage14_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage14;
                end if;
            when ap_ST_fsm_pp1_stage15 => 
                if ((ap_block_pp1_stage15_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage15;
                end if;
            when ap_ST_fsm_pp1_stage16 => 
                if ((ap_block_pp1_stage16_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage16;
                end if;
            when ap_ST_fsm_pp1_stage17 => 
                if ((ap_block_pp1_stage17_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage17;
                end if;
            when ap_ST_fsm_pp1_stage18 => 
                if ((ap_block_pp1_stage18_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage18;
                end if;
            when ap_ST_fsm_pp1_stage19 => 
                if ((ap_block_pp1_stage19_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage19;
                end if;
            when ap_ST_fsm_pp1_stage20 => 
                if ((ap_block_pp1_stage20_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage20;
                end if;
            when ap_ST_fsm_pp1_stage21 => 
                if ((ap_block_pp1_stage21_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage21;
                end if;
            when ap_ST_fsm_pp1_stage22 => 
                if ((ap_block_pp1_stage22_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage22;
                end if;
            when ap_ST_fsm_pp1_stage23 => 
                if ((ap_block_pp1_stage23_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage23;
                end if;
            when ap_ST_fsm_pp1_stage24 => 
                if ((ap_block_pp1_stage24_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage24;
                end if;
            when ap_ST_fsm_pp1_stage25 => 
                if ((ap_block_pp1_stage25_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage25;
                end if;
            when ap_ST_fsm_pp1_stage26 => 
                if ((ap_block_pp1_stage26_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage26;
                end if;
            when ap_ST_fsm_pp1_stage27 => 
                if ((ap_block_pp1_stage27_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage27;
                end if;
            when ap_ST_fsm_pp1_stage28 => 
                if ((ap_block_pp1_stage28_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage28;
                end if;
            when ap_ST_fsm_pp1_stage29 => 
                if ((ap_block_pp1_stage29_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage29;
                end if;
            when ap_ST_fsm_pp1_stage30 => 
                if ((ap_block_pp1_stage30_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage30;
                end if;
            when ap_ST_fsm_pp1_stage31 => 
                if ((ap_block_pp1_stage31_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage31;
                end if;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(9);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(12);
    ap_CS_fsm_pp1_stage10 <= ap_CS_fsm(21);
    ap_CS_fsm_pp1_stage11 <= ap_CS_fsm(22);
    ap_CS_fsm_pp1_stage12 <= ap_CS_fsm(23);
    ap_CS_fsm_pp1_stage13 <= ap_CS_fsm(24);
    ap_CS_fsm_pp1_stage14 <= ap_CS_fsm(25);
    ap_CS_fsm_pp1_stage15 <= ap_CS_fsm(26);
    ap_CS_fsm_pp1_stage16 <= ap_CS_fsm(27);
    ap_CS_fsm_pp1_stage17 <= ap_CS_fsm(28);
    ap_CS_fsm_pp1_stage18 <= ap_CS_fsm(29);
    ap_CS_fsm_pp1_stage19 <= ap_CS_fsm(30);
    ap_CS_fsm_pp1_stage2 <= ap_CS_fsm(13);
    ap_CS_fsm_pp1_stage20 <= ap_CS_fsm(31);
    ap_CS_fsm_pp1_stage21 <= ap_CS_fsm(32);
    ap_CS_fsm_pp1_stage22 <= ap_CS_fsm(33);
    ap_CS_fsm_pp1_stage23 <= ap_CS_fsm(34);
    ap_CS_fsm_pp1_stage24 <= ap_CS_fsm(35);
    ap_CS_fsm_pp1_stage25 <= ap_CS_fsm(36);
    ap_CS_fsm_pp1_stage26 <= ap_CS_fsm(37);
    ap_CS_fsm_pp1_stage27 <= ap_CS_fsm(38);
    ap_CS_fsm_pp1_stage28 <= ap_CS_fsm(39);
    ap_CS_fsm_pp1_stage29 <= ap_CS_fsm(40);
    ap_CS_fsm_pp1_stage3 <= ap_CS_fsm(14);
    ap_CS_fsm_pp1_stage30 <= ap_CS_fsm(41);
    ap_CS_fsm_pp1_stage31 <= ap_CS_fsm(42);
    ap_CS_fsm_pp1_stage4 <= ap_CS_fsm(15);
    ap_CS_fsm_pp1_stage5 <= ap_CS_fsm(16);
    ap_CS_fsm_pp1_stage6 <= ap_CS_fsm(17);
    ap_CS_fsm_pp1_stage7 <= ap_CS_fsm(18);
    ap_CS_fsm_pp1_stage8 <= ap_CS_fsm(19);
    ap_CS_fsm_pp1_stage9 <= ap_CS_fsm(20);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state47 <= ap_CS_fsm(43);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(m_axi_axi_V_RVALID, ap_enable_reg_pp0_iter1, exitcond1_i_i_reg_1623)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_i_i_reg_1623) and (ap_const_logic_0 = m_axi_axi_V_RVALID));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(m_axi_axi_V_RVALID, ap_enable_reg_pp0_iter1, exitcond1_i_i_reg_1623)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_i_i_reg_1623) and (ap_const_logic_0 = m_axi_axi_V_RVALID));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter1, or_cond_i_i_i_i_211_reg_1780)
    begin
                ap_block_pp1_stage0_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = or_cond_i_i_i_i_211_reg_1780) and (ap_const_logic_0 = stream_V_full_n));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter1, or_cond_i_i_i_i_211_reg_1780)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = or_cond_i_i_i_i_211_reg_1780) and (ap_const_logic_0 = stream_V_full_n));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter1, or_cond_i_i_i_i_211_reg_1780)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = or_cond_i_i_i_i_211_reg_1780) and (ap_const_logic_0 = stream_V_full_n));
    end process;

        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage10_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op305_write_state24)
    begin
                ap_block_pp1_stage10_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op305_write_state24));
    end process;


    ap_block_pp1_stage10_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op305_write_state24)
    begin
                ap_block_pp1_stage10_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op305_write_state24));
    end process;


    ap_block_pp1_stage10_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op305_write_state24)
    begin
                ap_block_pp1_stage10_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op305_write_state24));
    end process;

        ap_block_pp1_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage11_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op307_write_state25)
    begin
                ap_block_pp1_stage11_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op307_write_state25));
    end process;


    ap_block_pp1_stage11_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op307_write_state25)
    begin
                ap_block_pp1_stage11_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op307_write_state25));
    end process;


    ap_block_pp1_stage11_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op307_write_state25)
    begin
                ap_block_pp1_stage11_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op307_write_state25));
    end process;

        ap_block_pp1_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage12_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op309_write_state26)
    begin
                ap_block_pp1_stage12_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op309_write_state26));
    end process;


    ap_block_pp1_stage12_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op309_write_state26)
    begin
                ap_block_pp1_stage12_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op309_write_state26));
    end process;


    ap_block_pp1_stage12_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op309_write_state26)
    begin
                ap_block_pp1_stage12_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op309_write_state26));
    end process;

        ap_block_pp1_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage13_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op311_write_state27)
    begin
                ap_block_pp1_stage13_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op311_write_state27));
    end process;


    ap_block_pp1_stage13_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op311_write_state27)
    begin
                ap_block_pp1_stage13_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op311_write_state27));
    end process;


    ap_block_pp1_stage13_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op311_write_state27)
    begin
                ap_block_pp1_stage13_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op311_write_state27));
    end process;

        ap_block_pp1_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage14_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op313_write_state28)
    begin
                ap_block_pp1_stage14_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op313_write_state28));
    end process;


    ap_block_pp1_stage14_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op313_write_state28)
    begin
                ap_block_pp1_stage14_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op313_write_state28));
    end process;


    ap_block_pp1_stage14_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op313_write_state28)
    begin
                ap_block_pp1_stage14_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op313_write_state28));
    end process;

        ap_block_pp1_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage15_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op315_write_state29)
    begin
                ap_block_pp1_stage15_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op315_write_state29));
    end process;


    ap_block_pp1_stage15_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op315_write_state29)
    begin
                ap_block_pp1_stage15_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op315_write_state29));
    end process;


    ap_block_pp1_stage15_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op315_write_state29)
    begin
                ap_block_pp1_stage15_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op315_write_state29));
    end process;

        ap_block_pp1_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage16_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op317_write_state30)
    begin
                ap_block_pp1_stage16_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op317_write_state30));
    end process;


    ap_block_pp1_stage16_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op317_write_state30)
    begin
                ap_block_pp1_stage16_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op317_write_state30));
    end process;


    ap_block_pp1_stage16_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op317_write_state30)
    begin
                ap_block_pp1_stage16_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op317_write_state30));
    end process;

        ap_block_pp1_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage17_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op319_write_state31)
    begin
                ap_block_pp1_stage17_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op319_write_state31));
    end process;


    ap_block_pp1_stage17_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op319_write_state31)
    begin
                ap_block_pp1_stage17_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op319_write_state31));
    end process;


    ap_block_pp1_stage17_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op319_write_state31)
    begin
                ap_block_pp1_stage17_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op319_write_state31));
    end process;

        ap_block_pp1_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage18_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op321_write_state32)
    begin
                ap_block_pp1_stage18_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op321_write_state32));
    end process;


    ap_block_pp1_stage18_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op321_write_state32)
    begin
                ap_block_pp1_stage18_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op321_write_state32));
    end process;


    ap_block_pp1_stage18_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op321_write_state32)
    begin
                ap_block_pp1_stage18_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op321_write_state32));
    end process;

        ap_block_pp1_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage19_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op323_write_state33)
    begin
                ap_block_pp1_stage19_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op323_write_state33));
    end process;


    ap_block_pp1_stage19_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op323_write_state33)
    begin
                ap_block_pp1_stage19_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op323_write_state33));
    end process;


    ap_block_pp1_stage19_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op323_write_state33)
    begin
                ap_block_pp1_stage19_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op323_write_state33));
    end process;


    ap_block_pp1_stage1_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op256_write_state15)
    begin
                ap_block_pp1_stage1_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op256_write_state15));
    end process;


    ap_block_pp1_stage1_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op256_write_state15)
    begin
                ap_block_pp1_stage1_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op256_write_state15));
    end process;


    ap_block_pp1_stage1_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op256_write_state15)
    begin
                ap_block_pp1_stage1_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op256_write_state15));
    end process;

        ap_block_pp1_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage20_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op325_write_state34)
    begin
                ap_block_pp1_stage20_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op325_write_state34));
    end process;


    ap_block_pp1_stage20_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op325_write_state34)
    begin
                ap_block_pp1_stage20_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op325_write_state34));
    end process;


    ap_block_pp1_stage20_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op325_write_state34)
    begin
                ap_block_pp1_stage20_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op325_write_state34));
    end process;

        ap_block_pp1_stage21 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage21_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op327_write_state35)
    begin
                ap_block_pp1_stage21_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op327_write_state35));
    end process;


    ap_block_pp1_stage21_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op327_write_state35)
    begin
                ap_block_pp1_stage21_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op327_write_state35));
    end process;


    ap_block_pp1_stage21_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op327_write_state35)
    begin
                ap_block_pp1_stage21_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op327_write_state35));
    end process;

        ap_block_pp1_stage22 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage22_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op329_write_state36)
    begin
                ap_block_pp1_stage22_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op329_write_state36));
    end process;


    ap_block_pp1_stage22_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op329_write_state36)
    begin
                ap_block_pp1_stage22_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op329_write_state36));
    end process;


    ap_block_pp1_stage22_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op329_write_state36)
    begin
                ap_block_pp1_stage22_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op329_write_state36));
    end process;

        ap_block_pp1_stage23 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage23_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op331_write_state37)
    begin
                ap_block_pp1_stage23_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op331_write_state37));
    end process;


    ap_block_pp1_stage23_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op331_write_state37)
    begin
                ap_block_pp1_stage23_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op331_write_state37));
    end process;


    ap_block_pp1_stage23_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op331_write_state37)
    begin
                ap_block_pp1_stage23_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op331_write_state37));
    end process;

        ap_block_pp1_stage24 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage24_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op333_write_state38)
    begin
                ap_block_pp1_stage24_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op333_write_state38));
    end process;


    ap_block_pp1_stage24_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op333_write_state38)
    begin
                ap_block_pp1_stage24_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op333_write_state38));
    end process;


    ap_block_pp1_stage24_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op333_write_state38)
    begin
                ap_block_pp1_stage24_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op333_write_state38));
    end process;

        ap_block_pp1_stage25 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage25_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op335_write_state39)
    begin
                ap_block_pp1_stage25_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op335_write_state39));
    end process;


    ap_block_pp1_stage25_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op335_write_state39)
    begin
                ap_block_pp1_stage25_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op335_write_state39));
    end process;


    ap_block_pp1_stage25_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op335_write_state39)
    begin
                ap_block_pp1_stage25_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op335_write_state39));
    end process;

        ap_block_pp1_stage26 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage26_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op337_write_state40)
    begin
                ap_block_pp1_stage26_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op337_write_state40));
    end process;


    ap_block_pp1_stage26_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op337_write_state40)
    begin
                ap_block_pp1_stage26_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op337_write_state40));
    end process;


    ap_block_pp1_stage26_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op337_write_state40)
    begin
                ap_block_pp1_stage26_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op337_write_state40));
    end process;

        ap_block_pp1_stage27 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage27_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op339_write_state41)
    begin
                ap_block_pp1_stage27_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op339_write_state41));
    end process;


    ap_block_pp1_stage27_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op339_write_state41)
    begin
                ap_block_pp1_stage27_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op339_write_state41));
    end process;


    ap_block_pp1_stage27_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op339_write_state41)
    begin
                ap_block_pp1_stage27_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op339_write_state41));
    end process;

        ap_block_pp1_stage28 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage28_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op341_write_state42)
    begin
                ap_block_pp1_stage28_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op341_write_state42));
    end process;


    ap_block_pp1_stage28_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op341_write_state42)
    begin
                ap_block_pp1_stage28_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op341_write_state42));
    end process;


    ap_block_pp1_stage28_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op341_write_state42)
    begin
                ap_block_pp1_stage28_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op341_write_state42));
    end process;

        ap_block_pp1_stage29 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage29_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op343_write_state43)
    begin
                ap_block_pp1_stage29_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op343_write_state43));
    end process;


    ap_block_pp1_stage29_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op343_write_state43)
    begin
                ap_block_pp1_stage29_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op343_write_state43));
    end process;


    ap_block_pp1_stage29_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op343_write_state43)
    begin
                ap_block_pp1_stage29_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op343_write_state43));
    end process;


    ap_block_pp1_stage2_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op289_write_state16)
    begin
                ap_block_pp1_stage2_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op289_write_state16));
    end process;


    ap_block_pp1_stage2_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op289_write_state16)
    begin
                ap_block_pp1_stage2_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op289_write_state16));
    end process;


    ap_block_pp1_stage2_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op289_write_state16)
    begin
                ap_block_pp1_stage2_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op289_write_state16));
    end process;

        ap_block_pp1_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage30 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage30_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op345_write_state44)
    begin
                ap_block_pp1_stage30_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op345_write_state44));
    end process;


    ap_block_pp1_stage30_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op345_write_state44)
    begin
                ap_block_pp1_stage30_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op345_write_state44));
    end process;


    ap_block_pp1_stage30_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op345_write_state44)
    begin
                ap_block_pp1_stage30_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op345_write_state44));
    end process;

        ap_block_pp1_stage31 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage31_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op347_write_state45)
    begin
                ap_block_pp1_stage31_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op347_write_state45));
    end process;


    ap_block_pp1_stage31_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op347_write_state45)
    begin
                ap_block_pp1_stage31_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op347_write_state45));
    end process;


    ap_block_pp1_stage31_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op347_write_state45)
    begin
                ap_block_pp1_stage31_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op347_write_state45));
    end process;


    ap_block_pp1_stage3_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op291_write_state17)
    begin
                ap_block_pp1_stage3_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op291_write_state17));
    end process;


    ap_block_pp1_stage3_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op291_write_state17)
    begin
                ap_block_pp1_stage3_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op291_write_state17));
    end process;


    ap_block_pp1_stage3_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op291_write_state17)
    begin
                ap_block_pp1_stage3_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op291_write_state17));
    end process;

        ap_block_pp1_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage4_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op293_write_state18)
    begin
                ap_block_pp1_stage4_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op293_write_state18));
    end process;


    ap_block_pp1_stage4_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op293_write_state18)
    begin
                ap_block_pp1_stage4_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op293_write_state18));
    end process;


    ap_block_pp1_stage4_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op293_write_state18)
    begin
                ap_block_pp1_stage4_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op293_write_state18));
    end process;

        ap_block_pp1_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage5_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op295_write_state19)
    begin
                ap_block_pp1_stage5_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op295_write_state19));
    end process;


    ap_block_pp1_stage5_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op295_write_state19)
    begin
                ap_block_pp1_stage5_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op295_write_state19));
    end process;


    ap_block_pp1_stage5_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op295_write_state19)
    begin
                ap_block_pp1_stage5_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op295_write_state19));
    end process;

        ap_block_pp1_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage6_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op297_write_state20)
    begin
                ap_block_pp1_stage6_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op297_write_state20));
    end process;


    ap_block_pp1_stage6_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op297_write_state20)
    begin
                ap_block_pp1_stage6_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op297_write_state20));
    end process;


    ap_block_pp1_stage6_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op297_write_state20)
    begin
                ap_block_pp1_stage6_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op297_write_state20));
    end process;

        ap_block_pp1_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage7_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op299_write_state21)
    begin
                ap_block_pp1_stage7_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op299_write_state21));
    end process;


    ap_block_pp1_stage7_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op299_write_state21)
    begin
                ap_block_pp1_stage7_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op299_write_state21));
    end process;


    ap_block_pp1_stage7_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op299_write_state21)
    begin
                ap_block_pp1_stage7_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op299_write_state21));
    end process;

        ap_block_pp1_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage8_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op301_write_state22)
    begin
                ap_block_pp1_stage8_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op301_write_state22));
    end process;


    ap_block_pp1_stage8_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op301_write_state22)
    begin
                ap_block_pp1_stage8_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op301_write_state22));
    end process;


    ap_block_pp1_stage8_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op301_write_state22)
    begin
                ap_block_pp1_stage8_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op301_write_state22));
    end process;

        ap_block_pp1_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage9_01001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op303_write_state23)
    begin
                ap_block_pp1_stage9_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op303_write_state23));
    end process;


    ap_block_pp1_stage9_11001_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op303_write_state23)
    begin
                ap_block_pp1_stage9_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op303_write_state23));
    end process;


    ap_block_pp1_stage9_subdone_assign_proc : process(stream_V_full_n, ap_enable_reg_pp1_iter0, ap_predicate_op303_write_state23)
    begin
                ap_block_pp1_stage9_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op303_write_state23));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, width_out_full_n, height_out_full_n, stride_out_full_n, coeffs_out_full_n, dst_V_out_full_n)
    begin
                ap_block_state1 <= ((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1) or (ap_const_logic_0 = coeffs_out_full_n) or (ap_const_logic_0 = dst_V_out_full_n) or (ap_const_logic_0 = width_out_full_n) or (ap_const_logic_0 = height_out_full_n) or (ap_const_logic_0 = stride_out_full_n));
    end process;

        ap_block_state10_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage0_iter1_assign_proc : process(m_axi_axi_V_RVALID, exitcond1_i_i_reg_1623)
    begin
                ap_block_state11_pp0_stage0_iter1 <= ((ap_const_lv1_0 = exitcond1_i_i_reg_1623) and (ap_const_logic_0 = m_axi_axi_V_RVALID));
    end process;

        ap_block_state12_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_pp1_stage1_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op256_write_state15)
    begin
                ap_block_state15_pp1_stage1_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op256_write_state15));
    end process;


    ap_block_state16_pp1_stage2_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op289_write_state16)
    begin
                ap_block_state16_pp1_stage2_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op289_write_state16));
    end process;


    ap_block_state17_pp1_stage3_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op291_write_state17)
    begin
                ap_block_state17_pp1_stage3_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op291_write_state17));
    end process;


    ap_block_state18_pp1_stage4_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op293_write_state18)
    begin
                ap_block_state18_pp1_stage4_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op293_write_state18));
    end process;


    ap_block_state19_pp1_stage5_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op295_write_state19)
    begin
                ap_block_state19_pp1_stage5_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op295_write_state19));
    end process;


    ap_block_state20_pp1_stage6_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op297_write_state20)
    begin
                ap_block_state20_pp1_stage6_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op297_write_state20));
    end process;


    ap_block_state21_pp1_stage7_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op299_write_state21)
    begin
                ap_block_state21_pp1_stage7_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op299_write_state21));
    end process;


    ap_block_state22_pp1_stage8_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op301_write_state22)
    begin
                ap_block_state22_pp1_stage8_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op301_write_state22));
    end process;


    ap_block_state23_pp1_stage9_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op303_write_state23)
    begin
                ap_block_state23_pp1_stage9_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op303_write_state23));
    end process;


    ap_block_state24_pp1_stage10_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op305_write_state24)
    begin
                ap_block_state24_pp1_stage10_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op305_write_state24));
    end process;


    ap_block_state25_pp1_stage11_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op307_write_state25)
    begin
                ap_block_state25_pp1_stage11_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op307_write_state25));
    end process;


    ap_block_state26_pp1_stage12_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op309_write_state26)
    begin
                ap_block_state26_pp1_stage12_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op309_write_state26));
    end process;


    ap_block_state27_pp1_stage13_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op311_write_state27)
    begin
                ap_block_state27_pp1_stage13_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op311_write_state27));
    end process;


    ap_block_state28_pp1_stage14_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op313_write_state28)
    begin
                ap_block_state28_pp1_stage14_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op313_write_state28));
    end process;


    ap_block_state29_pp1_stage15_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op315_write_state29)
    begin
                ap_block_state29_pp1_stage15_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op315_write_state29));
    end process;


    ap_block_state30_pp1_stage16_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op317_write_state30)
    begin
                ap_block_state30_pp1_stage16_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op317_write_state30));
    end process;


    ap_block_state31_pp1_stage17_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op319_write_state31)
    begin
                ap_block_state31_pp1_stage17_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op319_write_state31));
    end process;


    ap_block_state32_pp1_stage18_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op321_write_state32)
    begin
                ap_block_state32_pp1_stage18_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op321_write_state32));
    end process;


    ap_block_state33_pp1_stage19_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op323_write_state33)
    begin
                ap_block_state33_pp1_stage19_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op323_write_state33));
    end process;


    ap_block_state34_pp1_stage20_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op325_write_state34)
    begin
                ap_block_state34_pp1_stage20_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op325_write_state34));
    end process;


    ap_block_state35_pp1_stage21_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op327_write_state35)
    begin
                ap_block_state35_pp1_stage21_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op327_write_state35));
    end process;


    ap_block_state36_pp1_stage22_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op329_write_state36)
    begin
                ap_block_state36_pp1_stage22_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op329_write_state36));
    end process;


    ap_block_state37_pp1_stage23_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op331_write_state37)
    begin
                ap_block_state37_pp1_stage23_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op331_write_state37));
    end process;


    ap_block_state38_pp1_stage24_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op333_write_state38)
    begin
                ap_block_state38_pp1_stage24_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op333_write_state38));
    end process;


    ap_block_state39_pp1_stage25_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op335_write_state39)
    begin
                ap_block_state39_pp1_stage25_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op335_write_state39));
    end process;


    ap_block_state40_pp1_stage26_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op337_write_state40)
    begin
                ap_block_state40_pp1_stage26_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op337_write_state40));
    end process;


    ap_block_state41_pp1_stage27_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op339_write_state41)
    begin
                ap_block_state41_pp1_stage27_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op339_write_state41));
    end process;


    ap_block_state42_pp1_stage28_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op341_write_state42)
    begin
                ap_block_state42_pp1_stage28_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op341_write_state42));
    end process;


    ap_block_state43_pp1_stage29_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op343_write_state43)
    begin
                ap_block_state43_pp1_stage29_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op343_write_state43));
    end process;


    ap_block_state44_pp1_stage30_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op345_write_state44)
    begin
                ap_block_state44_pp1_stage30_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op345_write_state44));
    end process;


    ap_block_state45_pp1_stage31_iter0_assign_proc : process(stream_V_full_n, ap_predicate_op347_write_state45)
    begin
                ap_block_state45_pp1_stage31_iter0 <= ((ap_const_logic_0 = stream_V_full_n) and (ap_const_boolean_1 = ap_predicate_op347_write_state45));
    end process;


    ap_block_state46_pp1_stage0_iter1_assign_proc : process(stream_V_full_n, or_cond_i_i_i_i_211_reg_1780)
    begin
                ap_block_state46_pp1_stage0_iter1 <= ((ap_const_lv1_1 = or_cond_i_i_i_i_211_reg_1780) and (ap_const_logic_0 = stream_V_full_n));
    end process;


    ap_condition_pp0_exit_iter0_state10_assign_proc : process(exitcond1_i_i_fu_892_p2)
    begin
        if ((ap_const_lv1_1 = exitcond1_i_i_fu_892_p2)) then 
            ap_condition_pp0_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state14_assign_proc : process(exitcond_i_i_fu_913_p2)
    begin
        if ((ap_const_lv1_1 = exitcond_i_i_fu_913_p2)) then 
            ap_condition_pp1_exit_iter0_state14 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, exitcond2_i_i_i_i_fu_862_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = exitcond2_i_i_i_i_fu_862_p2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_ext_blocking_cur_n <= (axi_V_blk_n_AR and axi_V_blk_n_R);
    ap_ext_blocking_n <= (ap_ext_blocking_cur_n and ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = ap_enable_reg_pp1_iter1))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_cur_n <= (stream_V_blk_n and width_out_blk_n and height_out_blk_n and stride_out_blk_n and coeffs_out_blk_n and dst_V_out_blk_n);
    ap_int_blocking_n <= (ap_int_blocking_cur_n and ap_const_logic_1);

    ap_predicate_op256_write_state15_assign_proc : process(exitcond_i_i_reg_1642, or_cond_i_i_i_i_reg_1656)
    begin
                ap_predicate_op256_write_state15 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (or_cond_i_i_i_i_reg_1656 = ap_const_lv1_1));
    end process;


    ap_predicate_op289_write_state16_assign_proc : process(exitcond_i_i_reg_1642, or_cond_1_i_i_i_i_reg_1660)
    begin
                ap_predicate_op289_write_state16 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_1_i_i_i_i_reg_1660));
    end process;


    ap_predicate_op291_write_state17_assign_proc : process(exitcond_i_i_reg_1642, or_cond_2_i_i_i_i_reg_1664)
    begin
                ap_predicate_op291_write_state17 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_2_i_i_i_i_reg_1664));
    end process;


    ap_predicate_op293_write_state18_assign_proc : process(exitcond_i_i_reg_1642, or_cond_3_i_i_i_i_reg_1668)
    begin
                ap_predicate_op293_write_state18 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_3_i_i_i_i_reg_1668));
    end process;


    ap_predicate_op295_write_state19_assign_proc : process(exitcond_i_i_reg_1642, or_cond_4_i_i_i_i_reg_1672)
    begin
                ap_predicate_op295_write_state19 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_4_i_i_i_i_reg_1672));
    end process;


    ap_predicate_op297_write_state20_assign_proc : process(exitcond_i_i_reg_1642, or_cond_5_i_i_i_i_reg_1676)
    begin
                ap_predicate_op297_write_state20 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_5_i_i_i_i_reg_1676));
    end process;


    ap_predicate_op299_write_state21_assign_proc : process(exitcond_i_i_reg_1642, or_cond_6_i_i_i_i_reg_1680)
    begin
                ap_predicate_op299_write_state21 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_6_i_i_i_i_reg_1680));
    end process;


    ap_predicate_op301_write_state22_assign_proc : process(exitcond_i_i_reg_1642, or_cond_7_i_i_i_i_reg_1684)
    begin
                ap_predicate_op301_write_state22 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_7_i_i_i_i_reg_1684));
    end process;


    ap_predicate_op303_write_state23_assign_proc : process(exitcond_i_i_reg_1642, or_cond_8_i_i_i_i_reg_1688)
    begin
                ap_predicate_op303_write_state23 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_8_i_i_i_i_reg_1688));
    end process;


    ap_predicate_op305_write_state24_assign_proc : process(exitcond_i_i_reg_1642, or_cond_9_i_i_i_i_reg_1692)
    begin
                ap_predicate_op305_write_state24 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_9_i_i_i_i_reg_1692));
    end process;


    ap_predicate_op307_write_state25_assign_proc : process(exitcond_i_i_reg_1642, or_cond_10_i_i_i_i_reg_1696)
    begin
                ap_predicate_op307_write_state25 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_10_i_i_i_i_reg_1696));
    end process;


    ap_predicate_op309_write_state26_assign_proc : process(exitcond_i_i_reg_1642, or_cond_11_i_i_i_i_reg_1700)
    begin
                ap_predicate_op309_write_state26 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_11_i_i_i_i_reg_1700));
    end process;


    ap_predicate_op311_write_state27_assign_proc : process(exitcond_i_i_reg_1642, or_cond_12_i_i_i_i_reg_1704)
    begin
                ap_predicate_op311_write_state27 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_12_i_i_i_i_reg_1704));
    end process;


    ap_predicate_op313_write_state28_assign_proc : process(exitcond_i_i_reg_1642, or_cond_13_i_i_i_i_reg_1708)
    begin
                ap_predicate_op313_write_state28 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_13_i_i_i_i_reg_1708));
    end process;


    ap_predicate_op315_write_state29_assign_proc : process(exitcond_i_i_reg_1642, or_cond_14_i_i_i_i_reg_1712)
    begin
                ap_predicate_op315_write_state29 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_14_i_i_i_i_reg_1712));
    end process;


    ap_predicate_op317_write_state30_assign_proc : process(exitcond_i_i_reg_1642, or_cond_15_i_i_i_i_reg_1716)
    begin
                ap_predicate_op317_write_state30 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_15_i_i_i_i_reg_1716));
    end process;


    ap_predicate_op319_write_state31_assign_proc : process(exitcond_i_i_reg_1642, or_cond_16_i_i_i_i_reg_1720)
    begin
                ap_predicate_op319_write_state31 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_16_i_i_i_i_reg_1720));
    end process;


    ap_predicate_op321_write_state32_assign_proc : process(exitcond_i_i_reg_1642, or_cond_17_i_i_i_i_reg_1724)
    begin
                ap_predicate_op321_write_state32 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_17_i_i_i_i_reg_1724));
    end process;


    ap_predicate_op323_write_state33_assign_proc : process(exitcond_i_i_reg_1642, or_cond_18_i_i_i_i_reg_1728)
    begin
                ap_predicate_op323_write_state33 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_18_i_i_i_i_reg_1728));
    end process;


    ap_predicate_op325_write_state34_assign_proc : process(exitcond_i_i_reg_1642, or_cond_19_i_i_i_i_reg_1732)
    begin
                ap_predicate_op325_write_state34 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_19_i_i_i_i_reg_1732));
    end process;


    ap_predicate_op327_write_state35_assign_proc : process(exitcond_i_i_reg_1642, or_cond_20_i_i_i_i_reg_1736)
    begin
                ap_predicate_op327_write_state35 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_20_i_i_i_i_reg_1736));
    end process;


    ap_predicate_op329_write_state36_assign_proc : process(exitcond_i_i_reg_1642, or_cond_21_i_i_i_i_reg_1740)
    begin
                ap_predicate_op329_write_state36 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_21_i_i_i_i_reg_1740));
    end process;


    ap_predicate_op331_write_state37_assign_proc : process(exitcond_i_i_reg_1642, or_cond_22_i_i_i_i_reg_1744)
    begin
                ap_predicate_op331_write_state37 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_22_i_i_i_i_reg_1744));
    end process;


    ap_predicate_op333_write_state38_assign_proc : process(exitcond_i_i_reg_1642, or_cond_23_i_i_i_i_reg_1748)
    begin
                ap_predicate_op333_write_state38 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_23_i_i_i_i_reg_1748));
    end process;


    ap_predicate_op335_write_state39_assign_proc : process(exitcond_i_i_reg_1642, or_cond_24_i_i_i_i_reg_1752)
    begin
                ap_predicate_op335_write_state39 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_24_i_i_i_i_reg_1752));
    end process;


    ap_predicate_op337_write_state40_assign_proc : process(exitcond_i_i_reg_1642, or_cond_25_i_i_i_i_reg_1756)
    begin
                ap_predicate_op337_write_state40 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_25_i_i_i_i_reg_1756));
    end process;


    ap_predicate_op339_write_state41_assign_proc : process(exitcond_i_i_reg_1642, or_cond_26_i_i_i_i_reg_1760)
    begin
                ap_predicate_op339_write_state41 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_26_i_i_i_i_reg_1760));
    end process;


    ap_predicate_op341_write_state42_assign_proc : process(exitcond_i_i_reg_1642, or_cond_27_i_i_i_i_reg_1764)
    begin
                ap_predicate_op341_write_state42 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_27_i_i_i_i_reg_1764));
    end process;


    ap_predicate_op343_write_state43_assign_proc : process(exitcond_i_i_reg_1642, or_cond_28_i_i_i_i_reg_1768)
    begin
                ap_predicate_op343_write_state43 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_28_i_i_i_i_reg_1768));
    end process;


    ap_predicate_op345_write_state44_assign_proc : process(exitcond_i_i_reg_1642, or_cond_29_i_i_i_i_reg_1772)
    begin
                ap_predicate_op345_write_state44 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_29_i_i_i_i_reg_1772));
    end process;


    ap_predicate_op347_write_state45_assign_proc : process(exitcond_i_i_reg_1642, or_cond_30_i_i_i_i_reg_1776)
    begin
                ap_predicate_op347_write_state45 <= ((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_lv1_1 = or_cond_30_i_i_i_i_reg_1776));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond2_i_i_i_i_fu_862_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = exitcond2_i_i_i_i_fu_862_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_axi_V_ARREADY_assign_proc : process(m_axi_axi_V_ARREADY, ap_reg_ioackin_m_axi_axi_V_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_axi_V_ARREADY)) then 
            ap_sig_ioackin_m_axi_axi_V_ARREADY <= m_axi_axi_V_ARREADY;
        else 
            ap_sig_ioackin_m_axi_axi_V_ARREADY <= ap_const_logic_1;
        end if; 
    end process;

    ap_str_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    axi_V_blk_n_AR_assign_proc : process(m_axi_axi_V_ARREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            axi_V_blk_n_AR <= m_axi_axi_V_ARREADY;
        else 
            axi_V_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    axi_V_blk_n_R_assign_proc : process(m_axi_axi_V_RVALID, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond1_i_i_reg_1623)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond1_i_i_reg_1623))) then 
            axi_V_blk_n_R <= m_axi_axi_V_RVALID;
        else 
            axi_V_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    buff_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp0_iter2, tmp_36_i_i_i_i_fu_903_p1, tmp_41_i_i_i_i_fu_928_p1)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0 = ap_const_boolean_0))) then 
            buff_V_address0 <= tmp_41_i_i_i_i_fu_928_p1(6 - 1 downto 0);
        elsif (((ap_block_pp0_stage0 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            buff_V_address0 <= tmp_36_i_i_i_i_fu_903_p1(6 - 1 downto 0);
        else 
            buff_V_address0 <= "XXXXXX";
        end if; 
    end process;


    buff_V_ce0_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_block_pp1_stage0_11001 = ap_const_boolean_0)) or ((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then 
            buff_V_ce0 <= ap_const_logic_1;
        else 
            buff_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, ap_reg_pp0_iter1_exitcond1_i_i_reg_1623, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and (ap_const_lv1_0 = ap_reg_pp0_iter1_exitcond1_i_i_reg_1623))) then 
            buff_V_we0 <= ap_const_logic_1;
        else 
            buff_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    coeffs_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, coeffs_out_full_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1))))) then 
            coeffs_out_blk_n <= coeffs_out_full_n;
        else 
            coeffs_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    coeffs_out_din <= coeffs;

    coeffs_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, width_out_full_n, height_out_full_n, stride_out_full_n, coeffs_out_full_n, dst_V_out_full_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1) or (ap_const_logic_0 = coeffs_out_full_n) or (ap_const_logic_0 = dst_V_out_full_n) or (ap_const_logic_0 = width_out_full_n) or (ap_const_logic_0 = height_out_full_n) or (ap_const_logic_0 = stride_out_full_n))))) then 
            coeffs_out_write <= ap_const_logic_1;
        else 
            coeffs_out_write <= ap_const_logic_0;
        end if; 
    end process;


    dst_V_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, dst_V_out_full_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1))))) then 
            dst_V_out_blk_n <= dst_V_out_full_n;
        else 
            dst_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_out_din <= dst_V;

    dst_V_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, width_out_full_n, height_out_full_n, stride_out_full_n, coeffs_out_full_n, dst_V_out_full_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1) or (ap_const_logic_0 = coeffs_out_full_n) or (ap_const_logic_0 = dst_V_out_full_n) or (ap_const_logic_0 = width_out_full_n) or (ap_const_logic_0 = height_out_full_n) or (ap_const_logic_0 = stride_out_full_n))))) then 
            dst_V_out_write <= ap_const_logic_1;
        else 
            dst_V_out_write <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_i_i_fu_892_p2 <= "1" when (x_i_i_i_i_phi_fu_525_p4 = loopWidth_cast6_i_i_i_i_reg_1423) else "0";
    exitcond2_i_i_i_i_fu_862_p2 <= "1" when (y_i_i_i_i_reg_510 = tmp_85_reg_1418) else "0";
    exitcond_i_i_fu_913_p2 <= "1" when (x1_i_i_i_i_phi_fu_537_p4 = loopWidth_cast6_i_i_i_i_reg_1423) else "0";

    height_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, height_out_full_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1))))) then 
            height_out_blk_n <= height_out_full_n;
        else 
            height_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    height_out_din <= height;

    height_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, width_out_full_n, height_out_full_n, stride_out_full_n, coeffs_out_full_n, dst_V_out_full_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1) or (ap_const_logic_0 = coeffs_out_full_n) or (ap_const_logic_0 = dst_V_out_full_n) or (ap_const_logic_0 = width_out_full_n) or (ap_const_logic_0 = height_out_full_n) or (ap_const_logic_0 = stride_out_full_n))))) then 
            height_out_write <= ap_const_logic_1;
        else 
            height_out_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp1_fu_670_p2 <= "0" when (tmp_88_fu_660_p4 = ap_const_lv4_0) else "1";
    icmp2_fu_704_p2 <= "0" when (tmp_89_fu_694_p4 = ap_const_lv3_0) else "1";
    icmp3_fu_762_p2 <= "0" when (tmp_90_fu_752_p4 = ap_const_lv2_0) else "1";
    icmp_fu_648_p2 <= "0" when (tmp_87_fu_638_p4 = ap_const_lv5_0) else "1";
    loopWidth_cast6_i_i_i_i_fu_580_p4 <= tmp_i_i_i_i_fu_574_p2(16 downto 5);
    m_axi_axi_V_ARADDR <= sum_cast_i_i_fu_882_p1;
    m_axi_axi_V_ARBURST <= ap_const_lv2_0;
    m_axi_axi_V_ARCACHE <= ap_const_lv4_0;
    m_axi_axi_V_ARID <= ap_const_lv1_0;
    m_axi_axi_V_ARLEN <= tmp_i_i_reg_1599;
    m_axi_axi_V_ARLOCK <= ap_const_lv2_0;
    m_axi_axi_V_ARPROT <= ap_const_lv3_0;
    m_axi_axi_V_ARQOS <= ap_const_lv4_0;
    m_axi_axi_V_ARREGION <= ap_const_lv4_0;
    m_axi_axi_V_ARSIZE <= ap_const_lv3_0;
    m_axi_axi_V_ARUSER <= ap_const_lv1_0;

    m_axi_axi_V_ARVALID_assign_proc : process(ap_CS_fsm_state3, ap_reg_ioackin_m_axi_axi_V_ARREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_axi_V_ARREADY))) then 
            m_axi_axi_V_ARVALID <= ap_const_logic_1;
        else 
            m_axi_axi_V_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_axi_V_AWADDR <= ap_const_lv64_0;
    m_axi_axi_V_AWBURST <= ap_const_lv2_0;
    m_axi_axi_V_AWCACHE <= ap_const_lv4_0;
    m_axi_axi_V_AWID <= ap_const_lv1_0;
    m_axi_axi_V_AWLEN <= ap_const_lv32_0;
    m_axi_axi_V_AWLOCK <= ap_const_lv2_0;
    m_axi_axi_V_AWPROT <= ap_const_lv3_0;
    m_axi_axi_V_AWQOS <= ap_const_lv4_0;
    m_axi_axi_V_AWREGION <= ap_const_lv4_0;
    m_axi_axi_V_AWSIZE <= ap_const_lv3_0;
    m_axi_axi_V_AWUSER <= ap_const_lv1_0;
    m_axi_axi_V_AWVALID <= ap_const_logic_0;
    m_axi_axi_V_BREADY <= ap_const_logic_0;

    m_axi_axi_V_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond1_i_i_reg_1623, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond1_i_i_reg_1623) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then 
            m_axi_axi_V_RREADY <= ap_const_logic_1;
        else 
            m_axi_axi_V_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_axi_V_WDATA <= ap_const_lv256_lc_1;
    m_axi_axi_V_WID <= ap_const_lv1_0;
    m_axi_axi_V_WLAST <= ap_const_logic_0;
    m_axi_axi_V_WSTRB <= ap_const_lv32_0;
    m_axi_axi_V_WUSER <= ap_const_lv1_0;
    m_axi_axi_V_WVALID <= ap_const_logic_0;
    or_cond_10_i_i_i_i_fu_988_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_i_i_i_i_210_reg_1494);
    or_cond_11_i_i_i_i_fu_993_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_10_i_i_i_i_reg_1499);
    or_cond_12_i_i_i_i_fu_998_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_11_i_i_i_i_reg_1504);
    or_cond_13_i_i_i_i_fu_1003_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_12_i_i_i_i_reg_1509);
    or_cond_14_i_i_i_i_fu_1008_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_13_i_i_i_i_reg_1514);
    or_cond_15_i_i_i_i_fu_1013_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or icmp3_reg_1519);
    or_cond_16_i_i_i_i_fu_1018_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_15_i_i_i_i_reg_1524);
    or_cond_17_i_i_i_i_fu_1023_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_16_i_i_i_i_reg_1529);
    or_cond_18_i_i_i_i_fu_1028_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_17_i_i_i_i_reg_1534);
    or_cond_19_i_i_i_i_fu_1033_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_18_i_i_i_i_reg_1539);
    or_cond_1_i_i_i_i_fu_943_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or icmp_reg_1449);
    or_cond_20_i_i_i_i_fu_1038_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_19_i_i_i_i_reg_1544);
    or_cond_21_i_i_i_i_fu_1043_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_20_i_i_i_i_reg_1549);
    or_cond_22_i_i_i_i_fu_1048_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_21_i_i_i_i_reg_1554);
    or_cond_23_i_i_i_i_fu_1053_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_22_i_i_i_i_reg_1559);
    or_cond_24_i_i_i_i_fu_1058_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_23_i_i_i_i_reg_1564);
    or_cond_25_i_i_i_i_fu_1063_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_24_i_i_i_i_reg_1569);
    or_cond_26_i_i_i_i_fu_1068_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_25_i_i_i_i_reg_1574);
    or_cond_27_i_i_i_i_fu_1073_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_26_i_i_i_i_reg_1579);
    or_cond_28_i_i_i_i_fu_1078_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_27_i_i_i_i_reg_1584);
    or_cond_29_i_i_i_i_fu_1083_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_28_i_i_i_i_reg_1589);
    or_cond_2_i_i_i_i_fu_948_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_2_i_i_i_i_reg_1454);
    or_cond_30_i_i_i_i_fu_1088_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_29_i_i_i_i_reg_1594);
    or_cond_3_i_i_i_i_fu_953_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or icmp1_reg_1459);
    or_cond_4_i_i_i_i_fu_958_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_4_i_i_i_i_reg_1464);
    or_cond_5_i_i_i_i_fu_963_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_5_i_i_i_i_reg_1469);
    or_cond_6_i_i_i_i_fu_968_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_6_i_i_i_i_reg_1474);
    or_cond_7_i_i_i_i_fu_973_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or icmp2_reg_1479);
    or_cond_8_i_i_i_i_fu_978_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_8_i_i_i_i_reg_1484);
    or_cond_9_i_i_i_i_fu_983_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_9_i_i_i_i_reg_1489);
    or_cond_i_i_i_i_211_fu_1093_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_i_i_i_i_209_reg_1429);
    or_cond_i_i_i_i_fu_938_p2 <= (tmp_42_i_i_i_i_fu_933_p2 or tmp_81_i_i_i_i_reg_1444);
    remainPix_2_fu_600_p3 <= 
        ap_const_lv6_20 when (tmp_i_i_i_i_209_fu_594_p2(0) = '1') else 
        remainPix_cast_i_i_i_i_fu_590_p1;
    remainPix_cast_i_i_i_i_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(remainPix_fu_570_p1),6));
    remainPix_fu_570_p1 <= width(5 - 1 downto 0);

    stream_V_blk_n_assign_proc : process(stream_V_full_n, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_block_pp1_stage1, exitcond_i_i_reg_1642, or_cond_i_i_i_i_reg_1656, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2, or_cond_1_i_i_i_i_reg_1660, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3, or_cond_2_i_i_i_i_reg_1664, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4, or_cond_3_i_i_i_i_reg_1668, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5, or_cond_4_i_i_i_i_reg_1672, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6, or_cond_5_i_i_i_i_reg_1676, ap_CS_fsm_pp1_stage7, ap_block_pp1_stage7, or_cond_6_i_i_i_i_reg_1680, ap_CS_fsm_pp1_stage8, ap_block_pp1_stage8, or_cond_7_i_i_i_i_reg_1684, ap_CS_fsm_pp1_stage9, ap_block_pp1_stage9, or_cond_8_i_i_i_i_reg_1688, ap_CS_fsm_pp1_stage10, ap_block_pp1_stage10, or_cond_9_i_i_i_i_reg_1692, ap_CS_fsm_pp1_stage11, ap_block_pp1_stage11, or_cond_10_i_i_i_i_reg_1696, ap_CS_fsm_pp1_stage12, ap_block_pp1_stage12, or_cond_11_i_i_i_i_reg_1700, ap_CS_fsm_pp1_stage13, ap_block_pp1_stage13, or_cond_12_i_i_i_i_reg_1704, ap_CS_fsm_pp1_stage14, ap_block_pp1_stage14, or_cond_13_i_i_i_i_reg_1708, ap_CS_fsm_pp1_stage15, ap_block_pp1_stage15, or_cond_14_i_i_i_i_reg_1712, ap_CS_fsm_pp1_stage16, ap_block_pp1_stage16, or_cond_15_i_i_i_i_reg_1716, ap_CS_fsm_pp1_stage17, ap_block_pp1_stage17, or_cond_16_i_i_i_i_reg_1720, ap_CS_fsm_pp1_stage18, ap_block_pp1_stage18, or_cond_17_i_i_i_i_reg_1724, ap_CS_fsm_pp1_stage19, ap_block_pp1_stage19, or_cond_18_i_i_i_i_reg_1728, ap_CS_fsm_pp1_stage20, ap_block_pp1_stage20, or_cond_19_i_i_i_i_reg_1732, ap_CS_fsm_pp1_stage21, ap_block_pp1_stage21, or_cond_20_i_i_i_i_reg_1736, ap_CS_fsm_pp1_stage22, ap_block_pp1_stage22, or_cond_21_i_i_i_i_reg_1740, ap_CS_fsm_pp1_stage23, ap_block_pp1_stage23, or_cond_22_i_i_i_i_reg_1744, ap_CS_fsm_pp1_stage24, ap_block_pp1_stage24, or_cond_23_i_i_i_i_reg_1748, ap_CS_fsm_pp1_stage25, ap_block_pp1_stage25, or_cond_24_i_i_i_i_reg_1752, ap_CS_fsm_pp1_stage26, ap_block_pp1_stage26, or_cond_25_i_i_i_i_reg_1756, ap_CS_fsm_pp1_stage27, ap_block_pp1_stage27, or_cond_26_i_i_i_i_reg_1760, ap_CS_fsm_pp1_stage28, ap_block_pp1_stage28, or_cond_27_i_i_i_i_reg_1764, ap_CS_fsm_pp1_stage29, ap_block_pp1_stage29, or_cond_28_i_i_i_i_reg_1768, ap_CS_fsm_pp1_stage30, ap_block_pp1_stage30, or_cond_29_i_i_i_i_reg_1772, ap_CS_fsm_pp1_stage31, ap_block_pp1_stage31, or_cond_30_i_i_i_i_reg_1776, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, or_cond_i_i_i_i_211_reg_1780)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_block_pp1_stage1 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (or_cond_i_i_i_i_reg_1656 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_block_pp1_stage2 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_1_i_i_i_i_reg_1660)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_block_pp1_stage3 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_2_i_i_i_i_reg_1664)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_block_pp1_stage4 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_3_i_i_i_i_reg_1668)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_block_pp1_stage5 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_4_i_i_i_i_reg_1672)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_block_pp1_stage6 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_5_i_i_i_i_reg_1676)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_block_pp1_stage7 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_6_i_i_i_i_reg_1680)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_block_pp1_stage8 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_7_i_i_i_i_reg_1684)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage9) and (ap_block_pp1_stage9 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_8_i_i_i_i_reg_1688)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage10) and (ap_block_pp1_stage10 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_9_i_i_i_i_reg_1692)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage11) and (ap_block_pp1_stage11 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_10_i_i_i_i_reg_1696)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage12) and (ap_block_pp1_stage12 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_11_i_i_i_i_reg_1700)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage13) and (ap_block_pp1_stage13 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_12_i_i_i_i_reg_1704)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage14) and (ap_block_pp1_stage14 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_13_i_i_i_i_reg_1708)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage15) and (ap_block_pp1_stage15 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_14_i_i_i_i_reg_1712)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage16) and (ap_block_pp1_stage16 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_15_i_i_i_i_reg_1716)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage17) and (ap_block_pp1_stage17 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_16_i_i_i_i_reg_1720)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage18) and (ap_block_pp1_stage18 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_17_i_i_i_i_reg_1724)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage19) and (ap_block_pp1_stage19 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_18_i_i_i_i_reg_1728)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage20) and (ap_block_pp1_stage20 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_19_i_i_i_i_reg_1732)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage21) and (ap_block_pp1_stage21 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_20_i_i_i_i_reg_1736)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage22) and (ap_block_pp1_stage22 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_21_i_i_i_i_reg_1740)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage23) and (ap_block_pp1_stage23 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_22_i_i_i_i_reg_1744)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage24) and (ap_block_pp1_stage24 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_23_i_i_i_i_reg_1748)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage25) and (ap_block_pp1_stage25 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_24_i_i_i_i_reg_1752)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage26) and (ap_block_pp1_stage26 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_25_i_i_i_i_reg_1756)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage27) and (ap_block_pp1_stage27 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_26_i_i_i_i_reg_1760)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage28) and (ap_block_pp1_stage28 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_27_i_i_i_i_reg_1764)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage29) and (ap_block_pp1_stage29 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_28_i_i_i_i_reg_1768)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage30) and (ap_block_pp1_stage30 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_29_i_i_i_i_reg_1772)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage31) and (ap_block_pp1_stage31 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_30_i_i_i_i_reg_1776)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0 = ap_const_boolean_0) and (ap_const_lv1_1 = or_cond_i_i_i_i_211_reg_1780)))) then 
            stream_V_blk_n <= stream_V_full_n;
        else 
            stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_V_din_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_CS_fsm_pp1_stage7, ap_CS_fsm_pp1_stage8, ap_CS_fsm_pp1_stage9, ap_CS_fsm_pp1_stage10, ap_CS_fsm_pp1_stage11, ap_CS_fsm_pp1_stage12, ap_CS_fsm_pp1_stage13, ap_CS_fsm_pp1_stage14, ap_CS_fsm_pp1_stage15, ap_CS_fsm_pp1_stage16, ap_CS_fsm_pp1_stage17, ap_CS_fsm_pp1_stage18, ap_CS_fsm_pp1_stage19, ap_CS_fsm_pp1_stage20, ap_CS_fsm_pp1_stage21, ap_CS_fsm_pp1_stage22, ap_CS_fsm_pp1_stage23, ap_CS_fsm_pp1_stage24, ap_CS_fsm_pp1_stage25, ap_CS_fsm_pp1_stage26, ap_CS_fsm_pp1_stage27, ap_CS_fsm_pp1_stage28, ap_CS_fsm_pp1_stage29, ap_CS_fsm_pp1_stage30, ap_CS_fsm_pp1_stage31, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, or_cond_i_i_i_i_211_reg_1780, tmp_92_reg_1784, ap_predicate_op256_write_state15, tmp_93_reg_1789, tmp_94_reg_1794, tmp_95_reg_1799, tmp_96_reg_1804, tmp_97_reg_1809, tmp_98_reg_1814, tmp_99_reg_1819, tmp_100_reg_1824, tmp_101_reg_1829, tmp_102_reg_1834, tmp_103_reg_1839, tmp_104_reg_1844, tmp_105_reg_1849, tmp_106_reg_1854, tmp_107_reg_1859, tmp_108_reg_1864, tmp_109_reg_1869, tmp_110_reg_1874, tmp_111_reg_1879, tmp_112_reg_1884, tmp_113_reg_1889, tmp_114_reg_1894, tmp_115_reg_1899, tmp_116_reg_1904, tmp_117_reg_1909, tmp_118_reg_1914, tmp_119_reg_1919, tmp_120_reg_1924, tmp_121_reg_1929, tmp_122_reg_1934, ap_predicate_op347_write_state45, ap_predicate_op289_write_state16, ap_predicate_op291_write_state17, ap_predicate_op293_write_state18, ap_predicate_op295_write_state19, ap_predicate_op297_write_state20, ap_predicate_op299_write_state21, ap_predicate_op301_write_state22, ap_predicate_op303_write_state23, ap_predicate_op305_write_state24, ap_predicate_op307_write_state25, ap_predicate_op309_write_state26, ap_predicate_op311_write_state27, ap_predicate_op313_write_state28, ap_predicate_op315_write_state29, ap_predicate_op317_write_state30, ap_predicate_op319_write_state31, ap_predicate_op321_write_state32, ap_predicate_op323_write_state33, ap_predicate_op325_write_state34, ap_predicate_op327_write_state35, ap_predicate_op329_write_state36, ap_predicate_op331_write_state37, ap_predicate_op333_write_state38, ap_predicate_op335_write_state39, ap_predicate_op337_write_state40, ap_predicate_op339_write_state41, ap_predicate_op341_write_state42, ap_predicate_op343_write_state43, ap_predicate_op345_write_state44, tmp_91_fu_1098_p1, ap_block_pp1_stage1_01001, ap_block_pp1_stage2_01001, ap_block_pp1_stage3_01001, ap_block_pp1_stage4_01001, ap_block_pp1_stage5_01001, ap_block_pp1_stage6_01001, ap_block_pp1_stage7_01001, ap_block_pp1_stage8_01001, ap_block_pp1_stage9_01001, ap_block_pp1_stage10_01001, ap_block_pp1_stage11_01001, ap_block_pp1_stage12_01001, ap_block_pp1_stage13_01001, ap_block_pp1_stage14_01001, ap_block_pp1_stage15_01001, ap_block_pp1_stage16_01001, ap_block_pp1_stage17_01001, ap_block_pp1_stage18_01001, ap_block_pp1_stage19_01001, ap_block_pp1_stage20_01001, ap_block_pp1_stage21_01001, ap_block_pp1_stage22_01001, ap_block_pp1_stage23_01001, ap_block_pp1_stage24_01001, ap_block_pp1_stage25_01001, ap_block_pp1_stage26_01001, ap_block_pp1_stage27_01001, ap_block_pp1_stage28_01001, ap_block_pp1_stage29_01001, ap_block_pp1_stage30_01001, ap_block_pp1_stage31_01001, ap_block_pp1_stage0_01001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = or_cond_i_i_i_i_211_reg_1780) and (ap_block_pp1_stage0_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_122_reg_1934;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage31) and (ap_const_boolean_1 = ap_predicate_op347_write_state45) and (ap_block_pp1_stage31_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_121_reg_1929;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage30) and (ap_const_boolean_1 = ap_predicate_op345_write_state44) and (ap_block_pp1_stage30_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_120_reg_1924;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage29) and (ap_const_boolean_1 = ap_predicate_op343_write_state43) and (ap_block_pp1_stage29_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_119_reg_1919;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage28) and (ap_const_boolean_1 = ap_predicate_op341_write_state42) and (ap_block_pp1_stage28_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_118_reg_1914;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage27) and (ap_const_boolean_1 = ap_predicate_op339_write_state41) and (ap_block_pp1_stage27_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_117_reg_1909;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage26) and (ap_const_boolean_1 = ap_predicate_op337_write_state40) and (ap_block_pp1_stage26_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_116_reg_1904;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage25) and (ap_const_boolean_1 = ap_predicate_op335_write_state39) and (ap_block_pp1_stage25_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_115_reg_1899;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage24) and (ap_const_boolean_1 = ap_predicate_op333_write_state38) and (ap_block_pp1_stage24_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_114_reg_1894;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage23) and (ap_const_boolean_1 = ap_predicate_op331_write_state37) and (ap_block_pp1_stage23_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_113_reg_1889;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage22) and (ap_const_boolean_1 = ap_predicate_op329_write_state36) and (ap_block_pp1_stage22_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_112_reg_1884;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage21) and (ap_const_boolean_1 = ap_predicate_op327_write_state35) and (ap_block_pp1_stage21_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_111_reg_1879;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage20) and (ap_const_boolean_1 = ap_predicate_op325_write_state34) and (ap_block_pp1_stage20_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_110_reg_1874;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage19) and (ap_const_boolean_1 = ap_predicate_op323_write_state33) and (ap_block_pp1_stage19_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_109_reg_1869;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage18) and (ap_const_boolean_1 = ap_predicate_op321_write_state32) and (ap_block_pp1_stage18_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_108_reg_1864;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage17) and (ap_const_boolean_1 = ap_predicate_op319_write_state31) and (ap_block_pp1_stage17_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_107_reg_1859;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage16) and (ap_const_boolean_1 = ap_predicate_op317_write_state30) and (ap_block_pp1_stage16_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_106_reg_1854;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage15) and (ap_const_boolean_1 = ap_predicate_op315_write_state29) and (ap_block_pp1_stage15_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_105_reg_1849;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage14) and (ap_const_boolean_1 = ap_predicate_op313_write_state28) and (ap_block_pp1_stage14_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_104_reg_1844;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage13) and (ap_const_boolean_1 = ap_predicate_op311_write_state27) and (ap_block_pp1_stage13_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_103_reg_1839;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage12) and (ap_const_boolean_1 = ap_predicate_op309_write_state26) and (ap_block_pp1_stage12_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_102_reg_1834;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage11) and (ap_const_boolean_1 = ap_predicate_op307_write_state25) and (ap_block_pp1_stage11_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_101_reg_1829;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage10) and (ap_const_boolean_1 = ap_predicate_op305_write_state24) and (ap_block_pp1_stage10_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_100_reg_1824;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage9) and (ap_const_boolean_1 = ap_predicate_op303_write_state23) and (ap_block_pp1_stage9_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_99_reg_1819;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_const_boolean_1 = ap_predicate_op301_write_state22) and (ap_block_pp1_stage8_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_98_reg_1814;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_const_boolean_1 = ap_predicate_op299_write_state21) and (ap_block_pp1_stage7_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_97_reg_1809;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_1 = ap_predicate_op297_write_state20) and (ap_block_pp1_stage6_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_96_reg_1804;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_1 = ap_predicate_op295_write_state19) and (ap_block_pp1_stage5_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_95_reg_1799;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_const_boolean_1 = ap_predicate_op293_write_state18) and (ap_block_pp1_stage4_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_94_reg_1794;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_1 = ap_predicate_op291_write_state17) and (ap_block_pp1_stage3_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_93_reg_1789;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_1 = ap_predicate_op289_write_state16) and (ap_block_pp1_stage2_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_92_reg_1784;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_boolean_1 = ap_predicate_op256_write_state15) and (ap_block_pp1_stage1_01001 = ap_const_boolean_0))) then 
            stream_V_din <= tmp_91_fu_1098_p1;
        else 
            stream_V_din <= "XXXXXXXX";
        end if; 
    end process;


    stream_V_write_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_CS_fsm_pp1_stage7, ap_CS_fsm_pp1_stage8, ap_CS_fsm_pp1_stage9, ap_CS_fsm_pp1_stage10, ap_CS_fsm_pp1_stage11, ap_CS_fsm_pp1_stage12, ap_CS_fsm_pp1_stage13, ap_CS_fsm_pp1_stage14, ap_CS_fsm_pp1_stage15, ap_CS_fsm_pp1_stage16, ap_CS_fsm_pp1_stage17, ap_CS_fsm_pp1_stage18, ap_CS_fsm_pp1_stage19, ap_CS_fsm_pp1_stage20, ap_CS_fsm_pp1_stage21, ap_CS_fsm_pp1_stage22, ap_CS_fsm_pp1_stage23, ap_CS_fsm_pp1_stage24, ap_CS_fsm_pp1_stage25, ap_CS_fsm_pp1_stage26, ap_CS_fsm_pp1_stage27, ap_CS_fsm_pp1_stage28, ap_CS_fsm_pp1_stage29, ap_CS_fsm_pp1_stage30, ap_CS_fsm_pp1_stage31, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, or_cond_i_i_i_i_211_reg_1780, ap_block_pp1_stage0_11001, ap_predicate_op256_write_state15, ap_block_pp1_stage1_11001, ap_predicate_op347_write_state45, ap_predicate_op289_write_state16, ap_block_pp1_stage2_11001, ap_predicate_op291_write_state17, ap_block_pp1_stage3_11001, ap_predicate_op293_write_state18, ap_block_pp1_stage4_11001, ap_predicate_op295_write_state19, ap_block_pp1_stage5_11001, ap_predicate_op297_write_state20, ap_block_pp1_stage6_11001, ap_predicate_op299_write_state21, ap_block_pp1_stage7_11001, ap_predicate_op301_write_state22, ap_block_pp1_stage8_11001, ap_predicate_op303_write_state23, ap_block_pp1_stage9_11001, ap_predicate_op305_write_state24, ap_block_pp1_stage10_11001, ap_predicate_op307_write_state25, ap_block_pp1_stage11_11001, ap_predicate_op309_write_state26, ap_block_pp1_stage12_11001, ap_predicate_op311_write_state27, ap_block_pp1_stage13_11001, ap_predicate_op313_write_state28, ap_block_pp1_stage14_11001, ap_predicate_op315_write_state29, ap_block_pp1_stage15_11001, ap_predicate_op317_write_state30, ap_block_pp1_stage16_11001, ap_predicate_op319_write_state31, ap_block_pp1_stage17_11001, ap_predicate_op321_write_state32, ap_block_pp1_stage18_11001, ap_predicate_op323_write_state33, ap_block_pp1_stage19_11001, ap_predicate_op325_write_state34, ap_block_pp1_stage20_11001, ap_predicate_op327_write_state35, ap_block_pp1_stage21_11001, ap_predicate_op329_write_state36, ap_block_pp1_stage22_11001, ap_predicate_op331_write_state37, ap_block_pp1_stage23_11001, ap_predicate_op333_write_state38, ap_block_pp1_stage24_11001, ap_predicate_op335_write_state39, ap_block_pp1_stage25_11001, ap_predicate_op337_write_state40, ap_block_pp1_stage26_11001, ap_predicate_op339_write_state41, ap_block_pp1_stage27_11001, ap_predicate_op341_write_state42, ap_block_pp1_stage28_11001, ap_predicate_op343_write_state43, ap_block_pp1_stage29_11001, ap_predicate_op345_write_state44, ap_block_pp1_stage30_11001, ap_block_pp1_stage31_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_boolean_1 = ap_predicate_op256_write_state15) and (ap_block_pp1_stage1_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_1 = ap_predicate_op289_write_state16) and (ap_block_pp1_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_1 = ap_predicate_op291_write_state17) and (ap_block_pp1_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_const_boolean_1 = ap_predicate_op293_write_state18) and (ap_block_pp1_stage4_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_1 = ap_predicate_op295_write_state19) and (ap_block_pp1_stage5_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_1 = ap_predicate_op297_write_state20) and (ap_block_pp1_stage6_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_const_boolean_1 = ap_predicate_op299_write_state21) and (ap_block_pp1_stage7_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_const_boolean_1 = ap_predicate_op301_write_state22) and (ap_block_pp1_stage8_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage9) and (ap_const_boolean_1 = ap_predicate_op303_write_state23) and (ap_block_pp1_stage9_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage10) and (ap_const_boolean_1 = ap_predicate_op305_write_state24) and (ap_block_pp1_stage10_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage11) and (ap_const_boolean_1 = ap_predicate_op307_write_state25) and (ap_block_pp1_stage11_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage12) and (ap_const_boolean_1 = ap_predicate_op309_write_state26) and (ap_block_pp1_stage12_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage13) and (ap_const_boolean_1 = ap_predicate_op311_write_state27) and (ap_block_pp1_stage13_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage14) and (ap_const_boolean_1 = ap_predicate_op313_write_state28) and (ap_block_pp1_stage14_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage15) and (ap_const_boolean_1 = ap_predicate_op315_write_state29) and (ap_block_pp1_stage15_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage16) and (ap_const_boolean_1 = ap_predicate_op317_write_state30) and (ap_block_pp1_stage16_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage17) and (ap_const_boolean_1 = ap_predicate_op319_write_state31) and (ap_block_pp1_stage17_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage18) and (ap_const_boolean_1 = ap_predicate_op321_write_state32) and (ap_block_pp1_stage18_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage19) and (ap_const_boolean_1 = ap_predicate_op323_write_state33) and (ap_block_pp1_stage19_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage20) and (ap_const_boolean_1 = ap_predicate_op325_write_state34) and (ap_block_pp1_stage20_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage21) and (ap_const_boolean_1 = ap_predicate_op327_write_state35) and (ap_block_pp1_stage21_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage22) and (ap_const_boolean_1 = ap_predicate_op329_write_state36) and (ap_block_pp1_stage22_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage23) and (ap_const_boolean_1 = ap_predicate_op331_write_state37) and (ap_block_pp1_stage23_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage24) and (ap_const_boolean_1 = ap_predicate_op333_write_state38) and (ap_block_pp1_stage24_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage25) and (ap_const_boolean_1 = ap_predicate_op335_write_state39) and (ap_block_pp1_stage25_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage26) and (ap_const_boolean_1 = ap_predicate_op337_write_state40) and (ap_block_pp1_stage26_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage27) and (ap_const_boolean_1 = ap_predicate_op339_write_state41) and (ap_block_pp1_stage27_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage28) and (ap_const_boolean_1 = ap_predicate_op341_write_state42) and (ap_block_pp1_stage28_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage29) and (ap_const_boolean_1 = ap_predicate_op343_write_state43) and (ap_block_pp1_stage29_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage30) and (ap_const_boolean_1 = ap_predicate_op345_write_state44) and (ap_block_pp1_stage30_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp1_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage31) and (ap_const_boolean_1 = ap_predicate_op347_write_state45) and (ap_block_pp1_stage31_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_1 = or_cond_i_i_i_i_211_reg_1780) and (ap_block_pp1_stage0_11001 = ap_const_boolean_0)))) then 
            stream_V_write <= ap_const_logic_1;
        else 
            stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    stride_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, stride_out_full_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1))))) then 
            stride_out_blk_n <= stride_out_full_n;
        else 
            stride_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stride_out_din <= stride;

    stride_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, width_out_full_n, height_out_full_n, stride_out_full_n, coeffs_out_full_n, dst_V_out_full_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1) or (ap_const_logic_0 = coeffs_out_full_n) or (ap_const_logic_0 = dst_V_out_full_n) or (ap_const_logic_0 = width_out_full_n) or (ap_const_logic_0 = height_out_full_n) or (ap_const_logic_0 = stride_out_full_n))))) then 
            stride_out_write <= ap_const_logic_1;
        else 
            stride_out_write <= ap_const_logic_0;
        end if; 
    end process;

    sum_cast_i_i_fu_882_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_i_i_reg_1612),64));
    sum_i_i_fu_877_p2 <= std_logic_vector(unsigned(tmp_683_cast_i_i_reg_1413) + unsigned(tmp_1_cast_i_i_fu_873_p1));
    tmp_1_cast_i_i_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(yoffset_i_i_i_i_reg_498),60));
    tmp_31_cast_i_i_i_i_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_i_i_i_i_fu_608_p4),27));
    tmp_31_i_i_i_i_fu_608_p4 <= stride(15 downto 5);
        tmp_32_cast_i_i_i_i_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_32_i_i_i_i_fu_622_p2),13));

    tmp_32_i_i_i_i_fu_622_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(loopWidth_cast6_i_i_i_i_fu_580_p4));
    tmp_36_i_i_i_i_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter1_x_i_i_i_i_reg_521),64));
    tmp_41_i_i_i_i_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x1_i_i_i_i_phi_fu_537_p4),64));
    tmp_42_i_i_i_i_fu_933_p2 <= "1" when (signed(x1_cast_i_i_i_i_fu_924_p1) < signed(tmp_32_cast_i_i_i_i_reg_1439)) else "0";
    tmp_683_cast_i_i_fu_554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_544_p4),60));
    tmp_81_10_i_i_i_i_fu_728_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_B)) else "0";
    tmp_81_11_i_i_i_i_fu_734_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_C)) else "0";
    tmp_81_12_i_i_i_i_fu_740_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_D)) else "0";
    tmp_81_13_i_i_i_i_fu_746_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_E)) else "0";
    tmp_81_15_i_i_i_i_fu_768_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_10)) else "0";
    tmp_81_16_i_i_i_i_fu_774_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_11)) else "0";
    tmp_81_17_i_i_i_i_fu_780_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_12)) else "0";
    tmp_81_18_i_i_i_i_fu_786_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_13)) else "0";
    tmp_81_19_i_i_i_i_fu_792_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_14)) else "0";
    tmp_81_20_i_i_i_i_fu_798_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_15)) else "0";
    tmp_81_21_i_i_i_i_fu_804_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_16)) else "0";
    tmp_81_22_i_i_i_i_fu_810_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_17)) else "0";
    tmp_81_23_i_i_i_i_fu_816_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_18)) else "0";
    tmp_81_24_i_i_i_i_fu_822_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_19)) else "0";
    tmp_81_25_i_i_i_i_fu_828_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_1A)) else "0";
    tmp_81_26_i_i_i_i_fu_834_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_1B)) else "0";
    tmp_81_27_i_i_i_i_fu_840_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_1C)) else "0";
    tmp_81_28_i_i_i_i_fu_846_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_1D)) else "0";
    tmp_81_29_i_i_i_i_fu_852_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_1E)) else "0";
    tmp_81_2_i_i_i_i_fu_654_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_2)) else "0";
    tmp_81_4_i_i_i_i_fu_676_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_4)) else "0";
    tmp_81_5_i_i_i_i_fu_682_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_5)) else "0";
    tmp_81_6_i_i_i_i_fu_688_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_6)) else "0";
    tmp_81_8_i_i_i_i_fu_710_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_8)) else "0";
    tmp_81_9_i_i_i_i_fu_716_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_9)) else "0";
    tmp_81_i_i_i_i_210_fu_722_p2 <= "1" when (unsigned(remainPix_2_fu_600_p3) > unsigned(ap_const_lv6_A)) else "0";
    tmp_81_i_i_i_i_fu_632_p2 <= "0" when (remainPix_2_fu_600_p3 = ap_const_lv6_0) else "1";
    tmp_84_fu_558_p1 <= width(16 - 1 downto 0);
    tmp_85_fu_562_p1 <= height(16 - 1 downto 0);
    tmp_87_fu_638_p4 <= remainPix_2_fu_600_p3(5 downto 1);
    tmp_88_fu_660_p4 <= remainPix_2_fu_600_p3(5 downto 2);
    tmp_89_fu_694_p4 <= remainPix_2_fu_600_p3(5 downto 3);
    tmp_90_fu_752_p4 <= remainPix_2_fu_600_p3(5 downto 4);
    tmp_91_fu_1098_p1 <= buff_V_q0(8 - 1 downto 0);
    tmp_fu_544_p4 <= axi_V_offset(63 downto 5);
    tmp_i_i_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loopWidth_cast6_i_i_i_i_fu_580_p4),32));
    tmp_i_i_i_i_209_fu_594_p2 <= "1" when (remainPix_fu_570_p1 = ap_const_lv5_0) else "0";
    tmp_i_i_i_i_fu_574_p2 <= std_logic_vector(unsigned(ap_const_lv17_1F) + unsigned(widthInPix_cast7_i_i_i_i_fu_566_p1));
    widthInPix_cast7_i_i_i_i_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_fu_558_p1),17));

    width_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, width_out_full_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1))))) then 
            width_out_blk_n <= width_out_full_n;
        else 
            width_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    width_out_din <= width;

    width_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, width_out_full_n, height_out_full_n, stride_out_full_n, coeffs_out_full_n, dst_V_out_full_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1) or (ap_const_logic_0 = coeffs_out_full_n) or (ap_const_logic_0 = dst_V_out_full_n) or (ap_const_logic_0 = width_out_full_n) or (ap_const_logic_0 = height_out_full_n) or (ap_const_logic_0 = stride_out_full_n))))) then 
            width_out_write <= ap_const_logic_1;
        else 
            width_out_write <= ap_const_logic_0;
        end if; 
    end process;

    x1_cast_i_i_i_i_fu_924_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x1_i_i_i_i_phi_fu_537_p4),13));

    x1_i_i_i_i_phi_fu_537_p4_assign_proc : process(exitcond_i_i_reg_1642, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, x1_i_i_i_i_reg_533, x_2_reg_1646)
    begin
        if (((ap_const_lv1_0 = exitcond_i_i_reg_1642) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_block_pp1_stage0 = ap_const_boolean_0))) then 
            x1_i_i_i_i_phi_fu_537_p4 <= x_2_reg_1646;
        else 
            x1_i_i_i_i_phi_fu_537_p4 <= x1_i_i_i_i_reg_533;
        end if; 
    end process;

    x_2_fu_918_p2 <= std_logic_vector(unsigned(x1_i_i_i_i_phi_fu_537_p4) + unsigned(ap_const_lv12_1));
    x_fu_897_p2 <= std_logic_vector(unsigned(x_i_i_i_i_phi_fu_525_p4) + unsigned(ap_const_lv12_1));

    x_i_i_i_i_phi_fu_525_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond1_i_i_reg_1623, x_i_i_i_i_reg_521, x_reg_1627)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0 = ap_const_boolean_0) and (ap_const_lv1_0 = exitcond1_i_i_reg_1623))) then 
            x_i_i_i_i_phi_fu_525_p4 <= x_reg_1627;
        else 
            x_i_i_i_i_phi_fu_525_p4 <= x_i_i_i_i_reg_521;
        end if; 
    end process;

    y_fu_867_p2 <= std_logic_vector(unsigned(y_i_i_i_i_reg_510) + unsigned(ap_const_lv16_1));
    yoffset_fu_908_p2 <= std_logic_vector(unsigned(tmp_31_cast_i_i_i_i_reg_1434) + unsigned(yoffset_i_i_i_i_reg_498));
end behav;
